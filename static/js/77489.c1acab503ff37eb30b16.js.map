{"version":3,"sources":["webpack://mathalea/./src/js/exercices/2e/2L14.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","ExerciceInequation2","Exercice","this","consigne","spacing","spacingCorr","correctionDetailleeDisponible","correctionDetaillee","sup","nbQuestions","listePackages","nbCols","nbColsCorr","nouvelleVersion","listeTypeDeQuestions","listeQuestions","listeCorrections","toString","combinaisonListes","signes","a","b","c","d","pGauche","pDroite","texte","ligne1","ligne2","ligne3","ecart","texteCorr","i","cpt","randint","resolutionDetailleeEquation","val","ecritureAlgebrique","texSymbole","miseEnEvidence","lignePPM","lignePMM","ligneMPP","ligneMMP","Math","min","mathalea2d","xmin","ymin","xmax","ymax","scale","tableauDeVariation","tabInit","max","tabLines","colorBackground","espcl","deltacl","lgt","hauteurLignes","racines","sort","lignes","j","n","valPetit","valGrand","ecrireCorrectionDetaillee","var1","var2","ecritureParentheseSiNegatif","texFraction","texFractionReduite","context","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice"],"mappings":"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","file":"js/77489.c1acab503ff37eb30b16.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { mathalea2d, tableauDeVariation } from '../../modules/2d.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif, texFractionReduite, miseEnEvidence, texFraction, texSymbole } from '../../modules/outils.js'\n\nexport const titre = 'Résoudre une inéquation produit ou quotient'\n\n/**\n * Résoudre inéquation produit ou quotient\n * * Type 1 : (x+a)(x+b)<0\n * * Type 2 : (x+a)(x+b)(x+c)<0\n * * Type 3 : (ax+b)(cx+d)<0\n * * Type 4 : (x+a)/(x+b)<0\n * * Tous les types\n * @author Guillaume Valmont\n * 2L14\n * 17/07/2021\n */\nexport default function ExerciceInequation2 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Résoudre les inéquations suivantes'\n  this.spacing = 2 // Espace entre deux lignes\n  this.spacingCorr = 2 // Espace entre deux lignes pour la correction\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = false // Désactive la correction détaillée par défaut\n  this.sup = 1 // Choix du type d'inéquation\n  this.nbQuestions = 5 // Choix du nombre de questions\n  this.listePackages = 'tkz-tab' // Pour la compilation LateX des tableaux de signes\n  this.nbCols = 1 // Fixe le nombre de colonnes pour les énoncés de la sortie LateX\n  this.nbColsCorr = 1 // Fixe le nombre de colonnes pour les réponses de la sortie LateX\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions // Stockera la liste des types de questions\n    // Convertit le paramètre this.sup en type de question\n    switch (this.sup.toString()) {\n      case '1':\n        listeTypeDeQuestions = ['(x+a)(x+b)<0']\n        break\n      case '2':\n        listeTypeDeQuestions = ['(x+a)(x+b)(x+c)<0']\n        break\n      case '3':\n        listeTypeDeQuestions = ['(ax+b)(cx+d)<0']\n        break\n      case '4':\n        listeTypeDeQuestions = ['(x+a)/(x+b)<0']\n        break\n      default:\n        listeTypeDeQuestions = [\n          '(x+a)(x+b)<0',\n          '(x+a)(x+b)(x+c)<0',\n          '(ax+b)(cx+d)<0',\n          '(x+a)/(x+b)<0'\n        ]\n        break\n    }\n    // Crée une liste randomisée de types de questions respectant le nombre (this.nbQuestions) et le type (this.sup) de questions passés en paramètre\n    listeTypeDeQuestions = combinaisonListes(\n      listeTypeDeQuestions,\n      this.nbQuestions\n    )\n    // Crée une liste d'autant de signes que de questions\n    const signes = combinaisonListes(['<', '>', '≤', '≥'], this.nbQuestions)\n    // Boucle principale qui servira à créer toutes les questions // On limite le nombre d'essais à 50 pour chercher des valeurs nouvelles\n    for (let i = 0, a, b, c, d, pGauche, pDroite, texte, ligne1, ligne2, ligne3, ecart, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Génère 4 nombres relatifs a, b, c et d tous différents avec a et c qui ne peuvent pas être 1 car ce sont ceux qui peuvent multiplier x pour éviter à la fois d'avoir '1x' et de diviser par 1\n      a = randint(-13, 13, [0, 1, -1])\n      b = randint(-13, 13, [0, a])\n      c = randint(-13, 13, [0, 1, -1, a, b])\n      d = randint(-13, 13, [0, a, b, c])\n      // Pioche un signe d'inégalité parmi <, ≤, ≥, > et définit en fonction si les crochets seront ouverts ou fermés dans l'ensemble de solutions\n      switch (signes[i]) {\n        case '<':\n          pGauche = ']'\n          pDroite = '['\n          break\n        case '≤':\n          pGauche = '['\n          pDroite = ']'\n          break\n        case '>':\n          pGauche = ']'\n          pDroite = '['\n          break\n        case '≥':\n          pGauche = '['\n          pDroite = ']'\n          break\n      }\n      // Fonction détaillant la résolution d'une équation de type x + val\n      function resolutionDetailleeEquation (val) {\n        texteCorr += `$x${ecritureAlgebrique(val)}${texSymbole('>')}0$ <br>`\n        texteCorr += `$x${ecritureAlgebrique(val)}${miseEnEvidence(ecritureAlgebrique(-1 * val))}\n        ${texSymbole('>')}${miseEnEvidence(ecritureAlgebrique(-1 * val))}$<br>`\n        texteCorr += `$x${texSymbole('>')}${-val}$<br>`\n      }\n      // Prépare les quatre types de lignes possibles pour les tableaux avec 2 antécédents : + + - , + - -, - + + et - - +\n      // Les lignes sont des tableaux qui alternent chaîne de caractère et 'nombre de pixels de largeur estimée du texte pour le centrage'\n      // La première chaîne 'Line' indique que c'est pour un tableau de signes et valeurs ('Var' pour un tableau de variations)\n      // 'R' indique qu'il n'y a rien à afficher (pour laisser un espace sous la borne par exemple)\n      // \",'z', 20\" pour avoir un zéro sur des pointillés et \",'t', 5\" pour juste avoir les pointillés\n      const lignePPM = ['Line', 30, '', 0, '+', 20, 't', 5, '+', 20, 'z', 20, '-', 20]\n      const lignePMM = ['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 't', 5, '-', 20]\n      const ligneMPP = ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 't', 5, '+', 20]\n      const ligneMMP = ['Line', 30, '', 0, '-', 20, 't', 5, '-', 20, 'z', 20, '+', 20]\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      // Génère la consigne (texte) et la correction (texteCorr) pour les questions de type '(x+a)(x+b)<0'                                      Type 1        //\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      if (listeTypeDeQuestions[i] === '(x+a)(x+b)<0') {\n        // Consigne\n        texte = `$(x${ecritureAlgebrique(a)})(x${ecritureAlgebrique(b)})${texSymbole(signes[i])}0$`\n        // Correction // Si une correction détaillée est demandée, détaille comment résoudre les équations\n        texteCorr = texte + '<br>'\n        // Première équation\n        if (this.correctionDetaillee) {\n          resolutionDetailleeEquation(a)\n        }\n        texteCorr += `$x${ecritureAlgebrique(a)}${texSymbole('>')}0$ lorsque $x${texSymbole('>')}${-a}$ <br>`\n        // Deuxième équation\n        if (this.correctionDetaillee) {\n          resolutionDetailleeEquation(b)\n        }\n        texteCorr += `$x${ecritureAlgebrique(b)}${texSymbole('>')}0$ lorsque $x${texSymbole('>')}${-b}$ <br>`\n        // Prépare l'affichage du tableau de signes : la ligne1 correspond à (x + a) et la ligne2 correspond à (x + b)\n        texteCorr += 'On peut donc en déduire le tableau de signes suivant : <br>'\n        // Si la racine de x + a est inférieure à la racine de x + b, la ligne1 (celle de x + a) aura d'abord un 0, puis un | et ce sera l'inverse pour la ligne2\n        if (Math.min(-a, -b) === -a) {\n          ligne1 = ligneMPP\n          ligne2 = ligneMMP\n        } else { // Si la racine de x + a est supérieure à la racine de x + b, ligne2 et ligne1 sont inversées (pas d'égalité possible car a ≠ b)\n          ligne1 = ligneMMP\n          ligne2 = ligneMPP\n        }\n        // Affiche le tableau de signes : xmin détermine la marge à gauche, ymin la hauteur réservée pour le tableau, xmax la largeur réservée pour le tableau et ymax la marge au dessus du tableau\n        texteCorr += mathalea2d({ xmin: -0.5, ymin: -8.1, xmax: 30, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n          tabInit: [\n            [\n              // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n              ['$x$', 2, 30], [`$x${ecritureAlgebrique(a)}$`, 2, 50], [`$x${ecritureAlgebrique(b)}$`, 2, 50], [`$(x${ecritureAlgebrique(a)})(x${ecritureAlgebrique(b)})$`, 2, 100]\n            ],\n            // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n            ['$-\\\\infty$', 30, `$${Math.min(-a, -b)}$`, 20, `$${Math.max(-a, -b)}$`, 20, '$+\\\\infty$', 30]\n          ],\n          // Les autres lignes du tableau dont le fonctionnement est expliqué plus haut\n          tabLines: [ligne1, ligne2, ['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 'z', 20, '+', 20]],\n          colorBackground: '',\n          espcl: 3.5, // taille en cm entre deux antécédents\n          deltacl: 0.8, // distance entre la bordure et les premiers et derniers antécédents\n          lgt: 8, // taille de la première colonne en cm\n          hauteurLignes: [15, 15, 15, 15]\n\n        }))\n        // Affiche l'ensemble de solutions\n        if ((signes[i] === '<' || signes[i] === '≤')) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left${pGauche} ${Math.min(-a, -b)} , ${Math.max(-a, -b)} \\\\right${pDroite} $.`\n        } else if ((signes[i] === '>' || signes[i] === '≥')) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${Math.min(-a, -b)} \\\\right${pDroite} \\\\bigcup \\\\left${pGauche} ${Math.max(-a, -b)}, +\\\\infty \\\\right[ $.`\n        }\n      }\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      // Génère la consigne (texte) et la correction (texteCorr) pour les questions de type '(x+a)(x+b)(x+c)<0'                                 Type 2        //\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      if (listeTypeDeQuestions[i] === '(x+a)(x+b)(x+c)<0') {\n        // Consigne\n        texte = `$(x${ecritureAlgebrique(a)})(x${ecritureAlgebrique(b)})(x${ecritureAlgebrique(c)})${texSymbole(signes[i])}0$`\n        // Correction // Si une correction détaillée est demandée, détaille comment résoudre les équations\n        texteCorr = texte + '<br>'\n        // Première équation\n        if (this.correctionDetaillee) {\n          resolutionDetailleeEquation(a)\n        }\n        texteCorr += `$x${ecritureAlgebrique(a)}${texSymbole('>')}0$ lorsque $x${texSymbole('>')}${-a}$ <br>`\n        // Deuxième équation\n        if (this.correctionDetaillee) {\n          resolutionDetailleeEquation(b)\n        }\n        texteCorr += `$x${ecritureAlgebrique(b)}${texSymbole('>')}0$ lorsque $x${texSymbole('>')}${-b}$ <br>`\n        // Troisième équation\n        if (this.correctionDetaillee) {\n          resolutionDetailleeEquation(c)\n        }\n        texteCorr += `$x${ecritureAlgebrique(c)}${texSymbole('>')}0$ lorsque $x${texSymbole('>')}${-c}$ <br>`\n        // On range les racines dans l'ordre croissant pour pouvoir les mettre dans l'ordre dans le tableau\n        const racines = [-a, -b, -c].sort(function (a, b) { return a - b })\n        const lignes = [-a, -b, -c]\n        // Pour chaque ligne, on cherche la racine correspondante\n        for (let j = 0; j < 3; j++) {\n          for (let n = 0; n < 3; n++) {\n            if (racines[n] === lignes[j]) {\n              if (n === 0) { // La racine d'indice 0 est la plus petite des trois, et donc celle la plus à gauche dans le tableau donc le 0 (, 'z', 20) est en première position et les autres sont des | (, 't', 5)\n                lignes[j] = ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 't', 5, '+', 20, 't', 5, '+', 20]\n              } else if (n === 1) { // La racine d'indice 1 est la deuxième racine, donc le 0 (, 'z', 20) en deuxième position et les autres sont des | (, 't', 5)\n                lignes[j] = ['Line', 30, '', 0, '-', 20, 't', 5, '-', 20, 'z', 20, '+', 20, 't', 5, '+', 20]\n              } else if (n === 2) { // La racine d'indice 2 est la plus grande des racines, donc le 0 (, 'z', 20) est en troisième position et les autres sont des | (, 't', 5)\n                lignes[j] = ['Line', 30, '', 0, '-', 20, 't', 5, '-', 20, 't', 5, '-', 20, 'z', 20, '+', 20]\n              }\n            }\n          }\n        }\n        // Affiche le tableau de signes (voir les commentaires du premier type d'exercice)\n        texteCorr += 'On peut donc en déduire le tableau de signes suivant : <br>'\n        texteCorr += mathalea2d({ xmin: -0.5, ymin: -10.1, xmax: 30, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n          tabInit: [\n            [\n              ['$x$', 2, 30], [`$x${ecritureAlgebrique(a)}$`, 2, 50], [`$x${ecritureAlgebrique(b)}$`, 2, 50], [`$x${ecritureAlgebrique(c)}$`, 2, 50], [`$(x${ecritureAlgebrique(a)})(x${ecritureAlgebrique(b)})(x${ecritureAlgebrique(c)})$`, 2, 150]\n            ],\n            ['$-\\\\infty$', 30, `$${racines[0]}$`, 20, `$${racines[1]}$`, 20, `$${racines[2]}$`, 20, '$+\\\\infty$', 30]\n          ],\n          tabLines: [lignes[0], lignes[1], lignes[2], ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 'z', 20, '-', 20, 'z', 20, '+', 20]],\n          colorBackground: '',\n          espcl: 3.5,\n          deltacl: 0.8,\n          lgt: 10,\n          hauteurLignes: [15, 15, 15, 15, 15]\n        }))\n        // Affiche l'ensemble de solutions\n        if ((signes[i] === '<' || signes[i] === '≤')) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${racines[0]} \\\\right${pDroite} \\\\bigcup \\\\left${pGauche} ${racines[1]} , ${racines[2]} \\\\right${pDroite} $.`\n        } else if ((signes[i] === '>' || signes[i] === '≥')) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left${pGauche} ${racines[0]} , ${racines[1]} \\\\right${pDroite} \\\\bigcup \\\\left${pGauche} ${racines[2]}, +\\\\infty \\\\right[ $.`\n        }\n      }\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      // Génère la consigne (texte) et la correction (texteCorr) pour les questions de type '(ax+b)(cx+d)<0'                                    Type 3        //\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      if (listeTypeDeQuestions[i] === '(ax+b)(cx+d)<0') {\n        let valPetit, valGrand\n        texte = `$(${a}x${ecritureAlgebrique(b)})(${c}x${ecritureAlgebrique(d)})${texSymbole(signes[i])}0$`\n        // Correction\n        texteCorr = texte\n        // Si une correction détaillée est demandée, détaille comment résoudre les équations\n        if (this.correctionDetaillee) {\n          // Utilise la fonction décrite juste après pour éviter d'écrire deux fois la même chose pour les deux inéquations ax + b > 0 et cx + d > 0\n          ecrireCorrectionDetaillee(a, b)\n          ecrireCorrectionDetaillee(c, d)\n          // Fonction écrivant la correction détaillée d'une inéquation du type var1*x + var2 > 0\n          function ecrireCorrectionDetaillee (var1, var2) {\n            // Détaille les étapes de la résolution en mettant en évidence les calculs réalisés.\n            texteCorr += `<br>$${var1}x${ecritureAlgebrique(var2)}${texSymbole('>')}0$ <br>`\n            texteCorr += `$${var1}x${ecritureAlgebrique(var2)}${miseEnEvidence(ecritureAlgebrique(-1 * var2))}\n            ${texSymbole('>')}${miseEnEvidence(ecritureAlgebrique(-1 * var2))}$<br>`\n            texteCorr += `$${var1}x${texSymbole('>')}${-var2}$<br>`\n            // Si var1 < 0, l'inégalité change de sens\n            if (var1 < 0) {\n              texteCorr += `$${var1}x${miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(var1) +\n                texSymbole('<'))}${-var2 + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(var1))}$<br>`\n              texteCorr += `$x${texSymbole('<')}${texFraction(-var2, var1)}$`\n              texteCorr += `<br>Donc $${var1}x${ecritureAlgebrique(var2)}${texSymbole('>')}0$ lorsque $x${texSymbole('<')} ${texFractionReduite(-var2, var1)}$`\n            } else { // sinon elle ne change pas de sens\n              texteCorr += `$${var1}x${miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(var1))}\n                ${texSymbole('>')}${-var2 + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(var1))}$<br>`\n              texteCorr += `$x${texSymbole('>')} ${texFraction(-var2, var1)}$`\n              texteCorr += `<br>Donc $${var1}x${ecritureAlgebrique(var2)}${texSymbole('>')}0$ lorsque $x${texSymbole('>')}${texFractionReduite(-var2, var1)}$`\n            }\n          }\n        } else { // Si pas de correction détaillée, écrit simplement les conclusions, en changeant le sens des inégalités si a < 0 ou si c < 0\n          if (a < 0) {\n            texteCorr += `<br>$${a}x${ecritureAlgebrique(b)}${texSymbole('>')}0$ lorsque $x${texSymbole('<')} ${texFractionReduite(-b, a)}$`\n          } else {\n            texteCorr += `<br>$${a}x${ecritureAlgebrique(b)}${texSymbole('>')}0$ lorsque $x${texSymbole('>')} ${texFractionReduite(-b, a)}$`\n          }\n          if (c < 0) {\n            texteCorr += `<br>$${c}x${ecritureAlgebrique(d)}${texSymbole('>')}0$ lorsque $x${texSymbole('<')} ${texFractionReduite(-d, c)}$`\n          } else {\n            texteCorr += `<br>$${c}x${ecritureAlgebrique(d)}${texSymbole('>')}0$ lorsque $x${texSymbole('>')} ${texFractionReduite(-d, c)}$`\n          }\n        }\n        // Prépare l'affichage du tableau de signes\n        texteCorr += '<br>On peut donc en déduire le tableau de signes suivant : <br>'\n        if (-b / a < -d / c) { // Si la plus petite solution est celle de la première équation\n          if (a > 0) { // La ligne1 change de signe en premier donc ligne1 = PMM ou MPP selon le signe de a\n            ligne1 = ligneMPP\n          } else {\n            ligne1 = lignePMM\n          }\n          if (c > 0) { // La ligne 2 change de signe en deuxième donc ligne2 = PPM ou MMP selon le signe de c\n            ligne2 = ligneMMP\n          } else {\n            ligne2 = lignePPM\n          }\n          valPetit = texFractionReduite(-b, a) // la plus petite valeur est la solution de la première équation\n          valGrand = texFractionReduite(-d, c) // la plus grande valeur est la solution de la deuxième équation\n        } else { // Si la plus petite solution est celle de la deuxième équation\n          if (a > 0) { // La ligne1 change de signe en deuxième donc ligne1 = PPM ou MMP selon le signe de a\n            ligne1 = ligneMMP\n          } else {\n            ligne1 = lignePPM\n          }\n          if (c > 0) { // La ligne 2 change de signe en premier donc ligne2 = PMM ou MPP selon le signe de c\n            ligne2 = ligneMPP\n          } else {\n            ligne2 = lignePMM\n          }\n          valPetit = texFractionReduite(-d, c) // la plus petite valeur est la solution de la deuxième équation\n          valGrand = texFractionReduite(-b, a) // la plus grande valeur est la solution de la première équation\n        }\n        // Détermine la dernière ligne selon le signe du coefficient dominant\n        if (a * c > 0) {\n          ligne3 = ['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 'z', 20, '+', 20]\n        } else {\n          ligne3 = ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 'z', 20, '-', 20]\n        }\n        // Modifie la hauteur de la première ligne en html pour centrer le texte malgré les fractions\n        // Affiche enfin le tableau\n        texteCorr += mathalea2d({ xmin: -0.5, ymin: -8.6, xmax: 30, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n          tabInit: [\n            [\n              ['$x$', 2.5, 30], [`$${a}x${ecritureAlgebrique(b)}$`, 2, 75], [`$${c}x${ecritureAlgebrique(d)}$`, 2, 75], [`$(${a}x${ecritureAlgebrique(b)})(${c}x${ecritureAlgebrique(d)})$`, 2, 200]\n            ],\n            ['$-\\\\infty$', 30, `$${valPetit}$`, 20, `$${valGrand}$`, 20, '$+\\\\infty$', 30]\n          ],\n          tabLines: [ligne1, ligne2, ligne3],\n          colorBackground: '',\n          espcl: 3.5,\n          deltacl: 0.8,\n          lgt: 10,\n          hauteurLignes: [15, 15, 15, 15]\n        }))\n        // Affiche l'ensemble de solutions selon le sens de l'inégalité\n        if ((signes[i] === '<' || signes[i] === '≤')) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left${pGauche} ${valPetit} , ${valGrand} \\\\right${pDroite} $.`\n        } else if ((signes[i] === '>' || signes[i] === '≥')) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\bigg] -\\\\infty , ${valPetit} \\\\bigg${pDroite} \\\\bigcup \\\\bigg${pGauche} ${valGrand}, +\\\\infty \\\\bigg[ $.` // \\\\bigg au lieu de \\\\left et \\\\right pour que les parenthèses soient les mêmes des deux côtés s'il y a une fraction d'un côté et pas de l'autre\n        }\n      }\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      // Génère la consigne (texte) et la correction (texteCorr) pour les questions de type '(x+a)/(x+b)<0'                                     Type 4        //\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      if (listeTypeDeQuestions[i] === '(x+a)/(x+b)<0') {\n        // Consigne\n        texte = `$\\\\cfrac{(x${ecritureAlgebrique(a)})}{(x${ecritureAlgebrique(b)})}${texSymbole(signes[i])}0$`\n        // Correction // Si une correction détaillée est demandée, détaille comment résoudre les équations\n        texteCorr = texte + '<br>'\n        // Première équation\n        if (this.correctionDetaillee) {\n          resolutionDetailleeEquation(a)\n        }\n        texteCorr += `$x${ecritureAlgebrique(a)}${texSymbole('>')}0$ lorsque $x${texSymbole('>')}${-a}$ <br>`\n        // Deuxième équation\n        if (this.correctionDetaillee) {\n          resolutionDetailleeEquation(b)\n        }\n        texteCorr += `$x${ecritureAlgebrique(b)}${texSymbole('>')}0$ lorsque $x${texSymbole('>')}${-b}$ <br>`\n        // Prépare l'affichage du tableau\n        texteCorr += 'On peut donc en déduire le tableau de signes suivant : <br>'\n        if (Math.min(-a, -b) === -a) { // Si la plus petite solution est celle de la première équation (au numérateur), la première ligne change de signe en premier\n          ligne1 = ligneMPP\n          ligne2 = ligneMMP\n          ligne3 = ['Line', 50, '', 0, '+', 20, 'z', 20, '-', 20, 'd', 20, '+', 20] // Le dénominateur change de signe en deuxième donc la double barre (, 'd', 20) intervient en deuxième\n        } else { // Sinon, la deuxième ligne change de signe en premier\n          ligne1 = ligneMMP\n          ligne2 = ligneMPP\n          ligne3 = ['Line', 50, '', 0, '+', 20, 'd', 20, '-', 20, 'z', 20, '+', 20] // Le dénominateur change de signe en premier donc la double barre (, 'd', 20) intervient en premier\n        }\n        if (context.isHtml) {\n          ecart = 2\n        } else {\n          ecart = 4\n        }\n        // Affichage du tableau de signes\n        texteCorr += mathalea2d({ xmin: -0.5, ymin: -10.1, xmax: 30, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n          tabInit: [\n            [\n              ['$x$', 2, 30], [`$x${ecritureAlgebrique(a)}$`, 2, 50], [`$x${ecritureAlgebrique(b)}$`, 2, 50], [`$\\\\cfrac{(x${ecritureAlgebrique(a)})}{(x${ecritureAlgebrique(b)})}$`, ecart, 50]\n            ],\n            ['$-\\\\infty$', 30, `$${Math.min(-a, -b)}$`, 20, `$${Math.max(-a, -b)}$`, 20, '$+\\\\infty$', 30]\n          ],\n          tabLines: [ligne1, ligne2, ligne3],\n          colorBackground: '',\n          espcl: 3.5,\n          deltacl: 0.8,\n          lgt: 8,\n          hauteurLignes: [15, 15, 15, 25]\n        }))\n        // Affiche l'ensemble de solutions selon le sens de l'inégalité et selon l'ordre des racines (l'intervalle sera toujours ouvert pour la racine du dénominateur)\n        if (Math.min(-a, -b) === -a) {\n          if ((signes[i] === '<' || signes[i] === '≤')) {\n            texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left${pGauche} ${-a} , ${-b} \\\\right[ $.`\n          } else if ((signes[i] === '>' || signes[i] === '≥')) {\n            texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${-a} \\\\right${pDroite} \\\\bigcup \\\\left] ${-b}, +\\\\infty \\\\right[ $.`\n          }\n        } else {\n          if ((signes[i] === '<' || signes[i] === '≤')) {\n            texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] ${-b} , ${-a} \\\\right${pDroite} $.`\n          } else if ((signes[i] === '>' || signes[i] === '≥')) {\n            texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${-b} \\\\right[ \\\\bigcup \\\\left${pGauche} ${-a}, +\\\\infty \\\\right[ $.`\n          }\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // Choisit le type de question à l'aide d'un formulaire numérique (la réponse sera stockée dans this.sup)\n  this.besoinFormulaireNumerique = [\n    \"Type d'inéquation\",\n    5,\n    '1: (x+a)(x+b)<0\\n2: (x+a)(x+b)(x+c)<0\\n3: (ax+b)(cx+d)<0\\n4: (x+a)/(x+b)<0\\n5: Tous les types précédents'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}