{"version":3,"file":"js/36179.3562fa2957fa703f455c.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6D101.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, sp } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Utiliser les heures décimales'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n/**\n * Convertir une heure décimale dans le format HMS\n *\n * La partie décimale est 25, 75 ou un seul chiffre\n * @author Rémi Angot\n * Rendre l'exercice interactif Laurence Candille\n * Référence 6D101\n */\nexport default function HeuresDecimales () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Compléter les égalités suivantes'\n  this.spacing = 2\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n  this.tailleDiaporama = 200\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (let i = 0, partieEntiere, partieDecimale, minutes, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      partieEntiere = randint(1, 12)\n      partieDecimale = choice([1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 75])\n      texte = `$${partieEntiere},${partieDecimale}~\\\\text{h}=$`\n      texte += ajouteChampTexteMathLive(this, 2 * i, 'inline largeur25', { texteApres: ' $h$ ' }) + sp(5) + ajouteChampTexteMathLive(this, 2 * i + 1, 'inline largeur25', { texteApres: ' $min$' })\n      texte += '<br>'\n\n      if (partieDecimale === 25) {\n        texteCorr = `$${partieEntiere},${partieDecimale}~\\\\text{h}=${partieEntiere}~\\\\text{h}+\\\\dfrac{1}{4}~\\\\text{h}`\n        texteCorr += `=${partieEntiere}~\\\\text{h}~15~\\\\text{min}$`\n        minutes = 15\n      } else if (partieDecimale === 75) {\n        texteCorr = `$${partieEntiere},${partieDecimale}~\\\\text{h}=${partieEntiere}~\\\\text{h}+\\\\dfrac{3}{4}~\\\\text{h}`\n        texteCorr += `=${partieEntiere}~\\\\text{h}~45~\\\\text{min}$`\n        minutes = 45\n      } else if (partieDecimale === 5) {\n        texteCorr = `$${partieEntiere},${partieDecimale}~\\\\text{h}=${partieEntiere}~\\\\text{h}+\\\\dfrac{1}{2}~\\\\text{h}`\n        texteCorr += `=${partieEntiere}~\\\\text{h}~30~\\\\text{min}$`\n        minutes = 30\n      } else {\n        texteCorr = `$${partieEntiere},${partieDecimale}~\\\\text{h}=${partieEntiere}~\\\\text{h}+\\\\dfrac{${partieDecimale}}{10}~\\\\text{h}`\n        texteCorr += `=${partieEntiere}~\\\\text{h}+${partieDecimale}\\\\times6~\\\\text{min}=${partieEntiere}~\\\\text{h}~${partieDecimale * 6}~\\\\text{min}$`\n        minutes = partieDecimale * 6\n      }\n      if (!context.isAmc) {\n        setReponse(this, 2 * i, partieEntiere)\n        setReponse(this, 2 * i + 1, minutes)\n      } else {\n        this.autoCorrection[i] = {\n          enonce: texte,\n          propositions: [\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: texteCorr,\n                statut: '',\n                reponse: {\n                  texte: \"Nombre d'heures\",\n                  valeur: partieEntiere,\n                  param: {\n                    digits: 2,\n                    decimals: 0,\n                    signe: false,\n                    approx: 0\n                  }\n                }\n              }]\n            },\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: '',\n                statut: '',\n                reponse: {\n                  texte: 'Nombre de minutes',\n                  valeur: minutes,\n                  param: {\n                    digits: 2,\n                    decimals: 0,\n                    signe: false,\n                    approx: 0\n                  }\n                }\n              }]\n            }\n          ]\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        if (context.isDiaporama) {\n          texte = texte.replace('=\\\\dotfill', '')\n        }\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","HeuresDecimales","Exercice","this","consigne","spacing","nbQuestions","nbColsCorr","tailleDiaporama","nouvelleVersion","listeQuestions","listeCorrections","partieEntiere","partieDecimale","minutes","texte","texteCorr","i","cpt","randint","choice","ajouteChampTexteMathLive","texteApres","sp","context","autoCorrection","enonce","propositions","type","statut","reponse","valeur","param","digits","decimals","signe","approx","setReponse","indexOf","replace","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}