{"version":3,"file":"js/55198.8af34941f4df37fb40e0.js","mappings":"2LAIO,MAAMA,EAAQ,0DAON,SAASC,IAEtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKH,MAAQA,EACbG,KAAKC,SAAW,4GAChBD,KAAKE,OAAS,EACdF,KAAKG,WAAa,EAClBH,KAAKI,QAAU,EACfJ,KAAKK,YAAc,EACnBL,KAAKM,YAAc,EACnBN,KAAKO,IAAM,EACXP,KAAKQ,gBAAkB,WACrBR,KAAKS,eAAiB,GACtBT,KAAKU,iBAAmB,GACxB,IAAIC,EAA8B,GACjB,IAAbX,KAAKO,MACPI,EAA8B,CAAC,IAEhB,IAAbX,KAAKO,MACPI,EAA8B,CAAC,IAEhB,IAAbX,KAAKO,MACPI,EAA8B,CAAC,IAEhB,IAAbX,KAAKO,MACPI,EAA8B,CAAC,EAAG,EAAG,IAGvC,MAAMC,GAAuBC,EAAAA,EAAAA,KAAkBF,EAA6BX,KAAKM,aACjF,IAAK,IAAWQ,EAAOC,EAAoBC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAIC,EAAIC,EAAIC,EAAIC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAtFC,EAAI,EAAqBC,EAAM,EAAyED,EAAIjC,KAAKM,aAAe4B,EAAM,IAAK,CAkBlJ,OAjBAF,EAAmBpB,EAAqBqB,GACxCF,GAAII,EAAAA,EAAAA,KAAO,EAAE,EAAG,IAChBR,GAAIS,EAAAA,EAAAA,KAAQ,EAAG,GACfT,GAAQI,EACRH,GAAIQ,EAAAA,EAAAA,KAAQ,EAAG,GACfL,GAAII,EAAAA,EAAAA,KAAO,EAAE,EAAG,IAChBP,GAAQG,EACRX,GAAIgB,EAAAA,EAAAA,KAAQ,EAAG,EAAG,CAACT,IACnBI,GAAII,EAAAA,EAAAA,KAAO,EAAE,EAAG,IAChBf,GAAQW,EAERF,GAAIO,EAAAA,EAAAA,KAAQ,EAAG,GACfL,GAAII,EAAAA,EAAAA,KAAO,EAAE,EAAG,IAChBN,GAAQE,EACRD,EAAIH,EAAIC,EAAID,EAAIE,EAChBV,EAAIQ,EAAIP,EAEAY,GACN,KAAK,EACHlB,EAAS,mIACUa,MAAMC,gBAAgBR,MAAMS,MAC/Cd,EAAa,oFACMY,MAAMC,YAAYR,MAAMS,WAC3Cd,GAAa,sJACbA,GAAa,oDACbA,GAAa,kFACbA,GAAa,mCACbA,GAAc,gEAA+DY,aAAaP,WAC1FL,GAAa,mBACbA,GAAc,gBAAeY,QAAQP,OAAOO,MAAKU,EAAAA,EAAAA,KAA4BjB,eAAeQ,MAAKS,EAAAA,EAAAA,KAA4BR,OAAOF,MAAKU,EAAAA,EAAAA,KAA4BjB,eAAeQ,EAAIC,MAAMF,EAAIP,UAClML,GAAc,cAAYuB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,WACpDQ,IAAMC,GACRd,GAAa,6EACbA,GAAc,qBAAoBa,OAElCb,GAAa,0EACRa,EAAIC,IAAMF,EAAIP,IAAO,IACxBL,GAAa,sBAEVa,EAAIC,IAAMF,EAAIP,KAAQ,IACzBL,GAAa,sBAEXa,EAAIC,GAAMF,EAAIP,GAAKQ,EAAIC,KAAOF,EAAIP,IACpCL,GAAc,aAAWuB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,iBAEzDL,GAAa,+FACbA,GAAc,6BAA4BY,MAAMC,WAChDb,GAAa,SACRa,EAAIC,IAAMF,EAAIP,IAAO,IACxBL,GAAa,sBAEVa,EAAIC,IAAMF,EAAIP,KAAQ,IACzBL,GAAa,sBAEXa,EAAIC,GAAMF,EAAIP,GAAKQ,EAAIC,KAAOF,EAAIP,IACpCL,GAAc,aAAWuB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,iBAEzDL,GAAc,wBAAuBY,OAAMW,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,cAAcO,QAAQC,SAC/Fb,GAAc,yCAAwCa,MAAKU,EAAAA,EAAAA,KAAmBR,EAAGX,UACjFJ,GAAc,0CAAwCuB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,WAC5GL,GAAa,wBACTa,EAAIC,GAAMF,EAAIP,KACXQ,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,IAAMF,EAAIP,GAAK,EAC9CL,GAAc,cAAYuB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,YAE5EQ,EAAID,EAAIC,EAAIR,GAAMO,EAAIC,EAAID,EAAIE,IAChCd,GAAa,kBAEfA,GAAc,aAAWuB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,aAG/EQ,EAAIC,KAAOF,EAAIP,IAEfL,IADGa,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,IAAMF,EAAIP,GAAK,EAChC,eAAakB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,WAE7EO,EAAIE,EAAID,EAAIR,GAAM,EACP,kBACM,cAAYkB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,YAGvFQ,EAAIC,GAAMF,EAAIP,GAAKQ,EAAIC,KAAOF,EAAIP,IAElCL,IADGa,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,IAAMF,EAAIP,GAAK,EAChC,UAAQkB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,UAASkB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,MAErG,UAAQkB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,SAAQkB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,QAKxH,MACF,KAAK,EAEHF,GAAIqB,EAAAA,EAAAA,OAEJhB,GAAKa,EAAAA,EAAAA,KAAQ,EAAG,IAAKD,EAAAA,EAAAA,KAAO,EAAE,EAAG,IACjCV,EAAKE,EAAIJ,EAAKK,EACdJ,GAAKY,EAAAA,EAAAA,KAAQ,EAAG,EAAG,CAACb,KAAOY,EAAAA,EAAAA,KAAO,EAAE,EAAG,IACnCR,EAAIH,EAAKI,EAAI,IACfJ,GAAKgB,EAAAA,EAAAA,KAAYhB,EAAI,IAEnBG,EAAIH,EAAKI,GAAK,IAChBJ,GAAKgB,EAAAA,EAAAA,KAAYhB,EAAI,IAEnBA,IAAOD,IACTA,GAAU,EACVC,GAAU,GAEZE,EAAKC,EAAIH,EAAKI,EACdZ,GAAIyB,EAAAA,EAAAA,KAAMlB,EAAIE,EAAI,IAAK,QACvBR,GAAIwB,EAAAA,EAAAA,KAAMjB,EAAIE,EAAI,IAAK,QACZ,IAAPD,IAAYT,GAAIyB,EAAAA,EAAAA,KAAMlB,EAAIE,EAAI,IAAK,UAC5B,IAAPD,IAAYP,GAAIwB,EAAAA,EAAAA,KAAMjB,EAAIE,EAAI,IAAK,UAC5B,IAAPH,IAAYP,GAAIyB,EAAAA,EAAAA,KAAMlB,EAAIE,EAAI,IAAK,UAC5B,IAAPC,IAAYT,GAAIwB,EAAAA,EAAAA,KAAMjB,EAAIE,EAAI,IAAK,UAEvCL,GAAIqB,EAAAA,EAAAA,KAAW1B,EAAGC,EAAG,OACrBK,GAAIqB,EAAAA,EAAAA,KAAW3B,EAAGC,GAClBK,EAAEsB,MAAQ,MACV9B,EAAQ,sHACRA,GAAU,qCAAoCS,KAAME,aAAcD,KAAME,mCACxEZ,IAAS+B,EAAAA,EAAAA,KAAW,CAClBC,MAAO,EACPC,MAAO,GACPC,KAAM,EACNC,KAAM,IACL/B,EAAGG,EAAGC,GACTK,EAAIJ,EACJK,EAAIH,EACJL,EAAII,EACJK,EAAIH,EACJX,EAAa,iBAAgBQ,KAAME,aAAcD,KAAME,0DAEvDX,GAAc,YAAWQ,KAAME,oCAAqCE,MAAMC,mBAAmBJ,KAAME,mCAAoCN,MAAMS,UAC7Id,GAAa,sJACbA,GAAa,oDACbA,GAAa,kFACbA,GAAa,mCACbA,GAAc,gEAA+DY,aAAaP,WAC1FL,GAAa,kBACbA,GAAc,gBAAeY,QAAQP,OAAOO,MAAKU,EAAAA,EAAAA,KAA4BjB,eAAeQ,MAAKS,EAAAA,EAAAA,KAA4BR,OAAOF,MAAKU,EAAAA,EAAAA,KAA4BjB,eAAeQ,EAAIC,MAAMF,EAAIP,UAClML,GAAc,cAAYuB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,WACpDQ,IAAMC,GACRd,GAAa,6EACbA,GAAc,qBAAoBa,OAElCb,GAAa,0EACRa,EAAIC,IAAMF,EAAIP,IAAO,IACxBL,GAAa,sBAEVa,EAAIC,IAAMF,EAAIP,KAAQ,IACzBL,GAAa,sBAEXa,EAAIC,GAAMF,EAAIP,GAAKQ,EAAIC,KAAOF,EAAIP,IACpCL,GAAc,aAAWuB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,iBAEzDL,GAAa,+FACbA,GAAc,6BAA4BY,MAAMC,WAChDb,GAAa,SACRa,EAAIC,IAAMF,EAAIP,IAAO,IACxBL,GAAa,sBAEVa,EAAIC,IAAMF,EAAIP,KAAQ,IACzBL,GAAa,sBAEXa,EAAIC,GAAMF,EAAIP,GAAKQ,EAAIC,KAAOF,EAAIP,IACpCL,GAAc,aAAWuB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,iBAEzDL,GAAc,wBAAuBY,OAAMW,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,cAAcO,QAAQC,SAC/Fb,GAAc,yCAAwCa,MAAKU,EAAAA,EAAAA,KAAmBR,EAAGX,UACjFJ,GAAc,0CAAwCuB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,WAC5GL,GAAa,wBACTa,EAAIC,GAAMF,EAAIP,KACXQ,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,IAAMF,EAAIP,GAAK,EAC9CL,GAAc,cAAYuB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,YAE5EQ,EAAID,EAAIC,EAAIR,GAAMO,EAAIC,EAAID,EAAIE,IAChCd,GAAa,kBAEfA,GAAc,aAAWuB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,aAG/EQ,EAAIC,KAAOF,EAAIP,IAEfL,IADGa,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,IAAMF,EAAIP,GAAK,EAChC,eAAakB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,WAE7EO,EAAIE,EAAID,EAAIR,GAAM,EACP,kBACM,cAAYkB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,YAGvFQ,EAAIC,GAAMF,EAAIP,GAAKQ,EAAIC,KAAOF,EAAIP,IAElCL,IADGa,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,IAAMF,EAAIP,GAAK,EAChC,UAAQkB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,UAASkB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,MAErG,UAAQkB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,SAAQkB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,QAKxH,MACF,KAAK,EAEHG,GAAKa,EAAAA,EAAAA,KAAQ,EAAG,IAAKD,EAAAA,EAAAA,KAAO,EAAE,EAAG,IACjCV,EAAKE,EAAIJ,EAAKK,EACdJ,GAAKY,EAAAA,EAAAA,KAAQ,EAAG,EAAG,CAACb,KAAOY,EAAAA,EAAAA,KAAO,EAAE,EAAG,IACnCR,EAAIH,EAAKI,EAAI,IACfJ,GAAKgB,EAAAA,EAAAA,KAAYhB,EAAI,IAEnBG,EAAIH,EAAKI,GAAK,IAChBJ,GAAKgB,EAAAA,EAAAA,KAAYhB,EAAI,IAEnBA,IAAOD,IACTA,GAAU,EACVC,GAAU,GAEZE,EAAKC,EAAIH,EAAKI,EACdZ,GAAIyB,EAAAA,EAAAA,KAAMlB,EAAIE,EAAI,IAAK,QACvBR,GAAIwB,EAAAA,EAAAA,KAAMjB,EAAIE,EAAI,IAAK,QACZ,IAAPD,IAAYT,GAAIyB,EAAAA,EAAAA,KAAMlB,EAAIE,EAAI,IAAK,UAC5B,IAAPD,IAAYP,GAAIwB,EAAAA,EAAAA,KAAMjB,EAAIE,EAAI,IAAK,UAC5B,IAAPH,IAAYP,GAAIyB,EAAAA,EAAAA,KAAMlB,EAAIE,EAAI,IAAK,UAC5B,IAAPC,IAAYT,GAAIwB,EAAAA,EAAAA,KAAMjB,EAAIE,EAAI,IAAK,UAEvCZ,EAAQ,sHACRA,GAAU,qCAAoCS,KAAME,aAAcD,KAAME,WAExEX,EAAa,iBAAgBQ,KAAME,aAAcD,KAAME,0DAEvDX,GAAc,YAAWQ,KAAME,oCAAqCE,MAAMC,mBAAmBJ,KAAME,mCAAoCN,MAAMS,UAC7Id,GAAa,sJACbA,GAAa,oDACbA,GAAa,iFACbA,GAAa,mCACbA,GAAc,gEAA+DY,aAAaP,WAC1FL,GAAa,iBACbA,GAAc,gBAAeY,QAAQP,OAAOO,MAAKU,EAAAA,EAAAA,KAA4BjB,eAAeQ,MAAKS,EAAAA,EAAAA,KAA4BR,OAAOF,MAAKU,EAAAA,EAAAA,KAA4BjB,eAAeQ,EAAIC,MAAMF,EAAIP,UAClML,GAAc,cAAYuB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,WACpDQ,IAAMC,GACRd,GAAa,6EACbA,GAAc,qBAAoBa,OAElCb,GAAa,0EACRa,EAAIC,IAAMF,EAAIP,IAAO,IACxBL,GAAa,sBAEVa,EAAIC,IAAMF,EAAIP,KAAQ,IACzBL,GAAa,sBAEXa,EAAIC,GAAMF,EAAIP,GAAKQ,EAAIC,KAAOF,EAAIP,IACpCL,GAAc,aAAWuB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,iBAEzDL,GAAa,+FACbA,GAAc,6BAA4BY,MAAMC,WAChDb,GAAa,SACRa,EAAIC,IAAMF,EAAIP,IAAO,IACxBL,GAAa,sBAEVa,EAAIC,IAAMF,EAAIP,KAAQ,IACzBL,GAAa,sBAEXa,EAAIC,GAAMF,EAAIP,GAAKQ,EAAIC,KAAOF,EAAIP,IACpCL,GAAc,aAAWuB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,iBAEzDL,GAAc,wBAAuBY,OAAMW,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,cAAcO,QAAQC,SAC/Fb,GAAc,yCAAwCa,MAAKU,EAAAA,EAAAA,KAAmBR,EAAGX,UACjFJ,GAAc,0CAAwCuB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,WAC5GL,GAAa,wBACTa,EAAIC,GAAMF,EAAIP,KACXQ,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,IAAMF,EAAIP,GAAK,EAC9CL,GAAc,cAAYuB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,YAE5EQ,EAAID,EAAIC,EAAIR,GAAMO,EAAIC,EAAID,EAAIE,IAChCd,GAAa,kBAEfA,GAAc,aAAWuB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,aAG/EQ,EAAIC,KAAOF,EAAIP,IAEfL,IADGa,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,IAAMF,EAAIP,GAAK,EAChC,eAAakB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,WAE7EO,EAAIE,EAAID,EAAIR,GAAM,EACP,kBACM,cAAYkB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,YAGvFQ,EAAIC,GAAMF,EAAIP,GAAKQ,EAAIC,KAAOF,EAAIP,IAElCL,IADGa,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,IAAMF,EAAIP,GAAK,EAChC,UAAQkB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,UAASkB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,MAErG,UAAQkB,EAAAA,EAAAA,KAAmBV,EAAIC,EAAGF,EAAIP,SAAQkB,EAAAA,EAAAA,KAAmBV,EAAID,EAAIC,EAAIR,EAAIO,EAAIC,EAAID,EAAIE,EAAGF,EAAIP,QAOxHpB,KAAKkD,oBAAoBjB,EAAGF,EAAGJ,EAAGC,EAAGR,EAAGS,EAAGC,KAE7C9B,KAAKS,eAAe0C,KAAKrC,GACzBd,KAAKU,iBAAiByC,KAAKpC,GAC3BkB,KAEFC,KAEFkB,EAAAA,EAAAA,KAAwBpD,OAE1BA,KAAKqD,0BAA4B,CAAC,uBAAwB,EAAG,iI,gBCtVhD,SAAStD,IAItBC,KAAKH,MAAQ,GACbG,KAAKsD,YAAa,EAclBtD,KAAKC,SAAW,GAChBD,KAAKuD,mBAAqB,GAC1BvD,KAAKwD,aAAe,GACpBxD,KAAKS,eAAiB,GACtBT,KAAKU,iBAAmB,GACxBV,KAAKyD,QAAU,GACfzD,KAAK0D,kBAAoB,GACzB1D,KAAK2D,eAAiB,GACtB3D,KAAK4D,sBAAwB,GAK7B5D,KAAKI,QAAU,EACfJ,KAAKK,YAAc,EAKnBL,KAAK6D,mBAAoB,EACzB7D,KAAK8D,cAAgB,GACrB9D,KAAK+D,oBAAqB,EAC1B/D,KAAKgE,uBAAwB,EAC7BhE,KAAKE,OAAS,EACdF,KAAKG,WAAa,EAClBH,KAAKiE,kBAAmB,EACxBjE,KAAKkE,sBAAuB,EAC5BlE,KAAKmE,mBAAoB,EACzBnE,KAAKoE,uBAAwB,EAM7BpE,KAAKqE,QAAS,EACdrE,KAAKsE,gBAAkB,GAKvBtE,KAAKM,YAAc,GACnBN,KAAKuE,+BAAgC,EACrCvE,KAAKwE,qBAAsB,EAC3BxE,KAAKyE,MAAQ,GAEbzE,KAAK0E,YAAa,EAClB1E,KAAK2E,uBAAwB,EAE7B3E,KAAKqD,2BAA4B,EACjCrD,KAAK4E,uBAAwB,EAC7B5E,KAAK6E,6BAA8B,EAEnC7E,KAAK8E,4BAA6B,EAClC9E,KAAK+E,wBAAyB,EAC9B/E,KAAKgF,8BAA+B,EAEpChF,KAAKiF,4BAA6B,EAClCjF,KAAKkF,wBAAyB,EAC9BlF,KAAKmF,8BAA+B,EAMpCnF,KAAKoF,cAAe,EAMpBpF,KAAKqF,eAAiB,GAEtBrF,KAAKQ,gBAAkB,SAAU8E,KAQjCtF,KAAKkD,oBAAsB,SAAUjB,KAAMsD,GAC/B,IAANtD,IAASjC,KAAKqF,eAAiB,IACnC,IAAIG,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAI3F,KAAKqF,eAAeO,QAAQJ,IAAmB,KAGjDxF,KAAKqF,eAAelC,KAAKqC,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/2e/2F10-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\n\nimport { listeQuestionsToContenu, randint, choice, quotientier, combinaisonListes, ecritureParentheseSiNegatif, texFractionReduite } from '../../modules/outils.js'\nimport { repere2, mathalea2d, point, tracePoint, labelPoint } from '../../modules/2d.js'\nexport const titre = 'Déterminer une fonction affine à partir de deux images.'\n\n/**\n * Déterminer une fonction affine à partir de deux images\n* @author Stéphane Guyon\n* 2F20\n*/\nexport default function Determinerfonctionaffine () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Déterminer, en expliquant, l'expression de la fonctions affine $f$ vérifiant les conditions de l'énoncé :\"\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.nbQuestions = 3\n  this.sup = 1\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles = []\n    if (this.sup === 1) {\n      typesDeQuestionsDisponibles = [1] // on donne f(a)=b et f(c)=d\n    }\n    if (this.sup === 2) {\n      typesDeQuestionsDisponibles = [2] // On donne 2 points A(a;b) et B(c;d) avec le graphique\n    }\n    if (this.sup === 3) {\n      typesDeQuestionsDisponibles = [3] // On donne 2 points A(a;b) et B(c;d) sans le graphique\n    }\n    if (this.sup === 4) {\n      typesDeQuestionsDisponibles = [1, 2, 3] // Mélange des cas précédents\n    }\n\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, cpt = 0, A, B, r, f, c, t, l, xA, xB, yA, yB, a, b, d, e, k, typesDeQuestions; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      k = choice([-1, 1])\n      a = randint(1, 5)\n      a = a * k\n      b = randint(1, 5)\n      k = choice([-1, 1])\n      b = b * k\n      c = randint(1, 5, [a])\n      k = choice([-1, 1])\n      c = c * k\n\n      d = randint(1, 5)\n      k = choice([-1, 1])\n      d = d * k\n      e = a * b - a * d\n      f = a - c\n\n      switch (typesDeQuestions) {\n        case 1:\n          texte = ` Déterminer l'expression algébrique de la fonction affine $f$ définie sur $\\\\mathbb R$, sachant que\n                        $f(${a})=${b}$ et que $f(${c})=${d}$.`\n          texteCorr = `On sait que $f$ est une fonction affine qui vérifie \n                        $f(${a})=${b}$ et $f(${c})=${d}$. <br>`\n          texteCorr += 'Comme $f$ est une fonction affine, on sait d\\'après le cours qu\\'elle va s\\'écrire sous la forme $f(x)= a x+ b$ avec $a$ et $b$ des nombres réels.<br>'\n          texteCorr += 'L\\'objectif est donc de déterminer $a$ et $b$.<br>'\n          texteCorr += 'Or, on sait d\\'après le cours, que dans ces conditions, avec $u\\\\neq v$, on a : '\n          texteCorr += '$a=\\\\dfrac{f(u)-f(v)}{u-v}.$<br>'\n          texteCorr += `On applique cette relation avec les données de l'énoncé : $u=${a}$ et  $v=${c}$ ,<br>`\n          texteCorr += 'ce qui donne :  '\n          texteCorr += `$a=\\\\dfrac{f(${a})-f(${c})}{${a}-${ecritureParentheseSiNegatif(c)}}=\\\\dfrac{${b}-${ecritureParentheseSiNegatif(d)}}{${a}-${ecritureParentheseSiNegatif(c)}}=\\\\dfrac{${b - d}}{${a - c}}$<br>`\n          texteCorr += `d'où : $a=${texFractionReduite(b - d, a - c)}.$<br>`\n          if (b === d) {\n            texteCorr += '$f$ est une fonction constante, cas particulier des fonctions affines.<br>'\n            texteCorr += `On a donc : $f(x)=${b}$`\n          } else {\n            texteCorr += 'On peut donc déjà déduire que la fonction $f$ s\\'écrit sous la forme : '\n            if ((b - d) / (a - c) === 1) {\n              texteCorr += '$f(x)= x +b.$<br>'\n            }\n            if ((b - d) / (a - c) === -1) {\n              texteCorr += '$f(x)= -x +b.$<br>'\n            }\n            if (b - d !== a - c && b - d !== -a + c) { // cas général\n              texteCorr += `   $f(x)=${texFractionReduite(b - d, a - c)} x +b.$<br>`\n            }\n            texteCorr += 'On cherche $b$ et pour cela on peut utiliser au choix une des deux données de l\\'énoncé :<br>'\n            texteCorr += `On prend par exemple : $f(${a})=${b}$  <br>`\n            texteCorr += 'Comme'\n            if ((b - d) / (a - c) === 1) {\n              texteCorr += '$f(x)= x +b.$<br>'\n            }\n            if ((b - d) / (a - c) === -1) {\n              texteCorr += '$f(x)= -x +b.$<br>'\n            }\n            if (b - d !== a - c && b - d !== -a + c) { // cas général\n              texteCorr += `   $f(x)=${texFractionReduite(b - d, a - c)} x +b.$<br>`\n            }\n            texteCorr += `On en déduit que :$f(${a})=${texFractionReduite(b - d, a - c)} \\\\times ${a} +b=${b}$<br>`\n            texteCorr += `$\\\\phantom{On en deduit que :}\\\\iff b=${b}-${texFractionReduite(e, f)}$<br>`\n            texteCorr += `$\\\\phantom{On en deduit que :}\\\\iff b=${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}$<br> `\n            texteCorr += 'On peut conclure que '\n            if (b - d === a - c) { // cas où a=1\n              if ((b * a - b * c - a * b + a * d) * (a - c) > 0) {\n                texteCorr += `$f(x)= x +${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}.$<br>`\n              } else {\n                if (b * a - b * c === a * b + a * d) { // cas où b=0\n                  texteCorr += '$f(x)= x.$<br>'\n                }\n                texteCorr += `$f(x)= x ${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}.$<br>`\n              }\n            }\n            if (b - d === -a + c) { // cas où a=-1\n              if ((b * a - b * c - a * b + a * d) * (a - c) > 0) { // b>0\n                texteCorr += `$f(x)= -x +${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}.$<br>`\n              } else {\n                if (a * d - b * c === 0) { // cas où b=0\n                  texteCorr += '$f(x)= -x.$<br>'\n                } else texteCorr += `$f(x)= -x ${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}.$<br>`\n              }\n            }\n            if (b - d !== a - c && b - d !== -a + c) { // cas général\n              if ((b * a - b * c - a * b + a * d) * (a - c) > 0) { // cas où b>0\n                texteCorr += `$f(x)=${texFractionReduite(b - d, a - c)}x+  ${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}$`\n              } else { // cas où b<0\n                texteCorr += `$f(x)=${texFractionReduite(b - d, a - c)}x  ${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}$`\n              }\n            }\n          }\n\n          break\n        case 2:\n\n          r = repere2()\n\n          xA = randint(0, 3) * choice([-1, 1])// Abscisse de A\n          yA = a * xA + b// Ordonnée de A\n          xB = randint(0, 3, [xA]) * choice([-1, 1]) // Abscisse de B, différente de celle de A\n          if (a * xB + b > 9) { // On évite de trop grandes valeurs pour yA\n            xB = quotientier(xB, 2)\n          }\n          if (a * xB + b < -9) {\n            xB = quotientier(xB, 2)\n          }\n          if (xB === xA) {\n            xA = xA + 1\n            xB = xB - 1\n          }\n          yB = a * xB + b// Ordonnée de B\n          A = point(xA, yA, 'A', 'left')\n          B = point(xB, yB, 'B', 'left')\n          if (yA === 0) { A = point(xA, yA, 'A', 'above') }// éviter A sur l'axe des abscisses\n          if (xB === 0) { B = point(xB, yB, 'B', 'right') }// éviter A sur l'axe des abscisses\n          if (xA === 0) { A = point(xA, yA, 'A', 'right') }// éviter A sur l'axe des abscisses\n          if (yB === 0) { B = point(xB, yB, 'B', 'above') }// éviter A sur l'axe des abscisses\n\n          t = tracePoint(A, B, 'red') // Variable qui trace les points avec une croix\n          l = labelPoint(A, B)// Variable qui trace les nom s A et B\n          l.color = 'red'\n          texte = 'Déterminer, en détaillant les calculs, l\\'expression algébrique de la fonction affine $f$ dont la représentation<br>'\n          texte += `graphique passe par les points $A(${xA};${yA})$ et $B(${xB};${yB})$ représentés ci-dessous :<br>`\n          texte += mathalea2d({\n            xmin: -6,\n            ymin: -10,\n            xmax: 6,\n            ymax: 10\n          }, r, t, l)\n          a = xA\n          b = yA\n          c = xB\n          d = yB\n          texteCorr = `Les points $A(${xA};${yA})$ et $B(${xB};${yB})$ appartiennent à la courbe représentative de $f$<br>`\n\n          texteCorr += `Comme $A(${xA};${yA})\\\\in \\\\mathcal{C_f}$, on a  $f(${a})=${b}$  et comme $B(${xB};${yB})\\\\in \\\\mathcal{C_f}$, on a $f(${c})=${d}$ <br>`\n          texteCorr += 'Comme $f$ est une fonction affine, on sait d\\'après le cours qu\\'elle va s\\'écrire sous la forme $f(x)= a x+ b$ avec $a$ et $b$ des nombres réels.<br>'\n          texteCorr += 'L\\'objectif est donc de déterminer $a$ et $b$.<br>'\n          texteCorr += 'Or, on sait d\\'après le cours, que dans ces conditions, avec $u\\\\neq v$, on a : '\n          texteCorr += '$a=\\\\dfrac{f(u)-f(v)}{u-v}.$<br>'\n          texteCorr += `On applique cette relation avec les données de l'énoncé : $u=${a}$ et  $v=${c}$ ,<br>`\n          texteCorr += 'ce qui donne : '\n          texteCorr += `$a=\\\\dfrac{f(${a})-f(${c})}{${a}-${ecritureParentheseSiNegatif(c)}}=\\\\dfrac{${b}-${ecritureParentheseSiNegatif(d)}}{${a}-${ecritureParentheseSiNegatif(c)}}=\\\\dfrac{${b - d}}{${a - c}}$<br>`\n          texteCorr += `d'où : $a=${texFractionReduite(b - d, a - c)}.$<br>`\n          if (b === d) {\n            texteCorr += '$f$ est une fonction constante, cas particulier des fonctions affines.<br>'\n            texteCorr += `On a donc : $f(x)=${b}$`\n          } else {\n            texteCorr += 'On peut donc déjà déduire que la fonction $f$ s\\'écrit sous la forme : '\n            if ((b - d) / (a - c) === 1) {\n              texteCorr += '$f(x)= x +b.$<br>'\n            }\n            if ((b - d) / (a - c) === -1) {\n              texteCorr += '$f(x)= -x +b.$<br>'\n            }\n            if (b - d !== a - c && b - d !== -a + c) { // cas général\n              texteCorr += `   $f(x)=${texFractionReduite(b - d, a - c)} x +b.$<br>`\n            }\n            texteCorr += 'On cherche $b$ et pour cela on peut utiliser au choix une des deux données de l\\'énoncé :<br>'\n            texteCorr += `On prend par exemple : $f(${a})=${b}$  <br>`\n            texteCorr += 'Comme'\n            if ((b - d) / (a - c) === 1) {\n              texteCorr += '$f(x)= x +b.$<br>'\n            }\n            if ((b - d) / (a - c) === -1) {\n              texteCorr += '$f(x)= -x +b.$<br>'\n            }\n            if (b - d !== a - c && b - d !== -a + c) { // cas général\n              texteCorr += `   $f(x)=${texFractionReduite(b - d, a - c)} x +b.$<br>`\n            }\n            texteCorr += `On en déduit que :$f(${a})=${texFractionReduite(b - d, a - c)} \\\\times ${a} +b=${b}$<br>`\n            texteCorr += `$\\\\phantom{On en deduit que :}\\\\iff b=${b}-${texFractionReduite(e, f)}$<br>`\n            texteCorr += `$\\\\phantom{On en deduit que :}\\\\iff b=${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}$<br> `\n            texteCorr += 'On peut conclure que '\n            if (b - d === a - c) { // cas où a=1\n              if ((b * a - b * c - a * b + a * d) * (a - c) > 0) {\n                texteCorr += `$f(x)= x +${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}.$<br>`\n              } else {\n                if (b * a - b * c === a * b + a * d) { // cas où b=0\n                  texteCorr += '$f(x)= x.$<br>'\n                }\n                texteCorr += `$f(x)= x ${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}.$<br>`\n              }\n            }\n            if (b - d === -a + c) { // cas où a=-1\n              if ((b * a - b * c - a * b + a * d) * (a - c) > 0) { // b>0\n                texteCorr += `$f(x)= -x +${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}.$<br>`\n              } else {\n                if (a * d - b * c === 0) { // cas où b=0\n                  texteCorr += '$f(x)= -x.$<br>'\n                } else texteCorr += `$f(x)= -x ${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}.$<br>`\n              }\n            }\n            if (b - d !== a - c && b - d !== -a + c) { // cas général\n              if ((b * a - b * c - a * b + a * d) * (a - c) > 0) { // cas où b>0\n                texteCorr += `$f(x)=${texFractionReduite(b - d, a - c)}x+  ${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}$`\n              } else { // cas où b<0\n                texteCorr += `$f(x)=${texFractionReduite(b - d, a - c)}x  ${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}$`\n              }\n            }\n          }\n\n          break\n        case 3:\n\n          xA = randint(0, 3) * choice([-1, 1])// Abscisse de A\n          yA = a * xA + b// Ordonnée de A\n          xB = randint(0, 3, [xA]) * choice([-1, 1]) // Abscisse de B, différente de celle de A\n          if (a * xB + b > 9) { // On évite de trop grandes valeurs pour yA\n            xB = quotientier(xB, 2)\n          }\n          if (a * xB + b < -9) {\n            xB = quotientier(xB, 2)\n          }\n          if (xB === xA) {\n            xA = xA + 1\n            xB = xB - 1\n          }\n          yB = a * xB + b// Ordonnée de B\n          A = point(xA, yA, 'A', 'left')\n          B = point(xB, yB, 'B', 'left')\n          if (yA === 0) { A = point(xA, yA, 'A', 'above') }// éviter A sur l'axe des abscisses\n          if (xB === 0) { B = point(xB, yB, 'B', 'right') }// éviter A sur l'axe des abscisses\n          if (xA === 0) { A = point(xA, yA, 'A', 'right') }// éviter A sur l'axe des abscisses\n          if (yB === 0) { B = point(xB, yB, 'B', 'above') }// éviter A sur l'axe des abscisses\n\n          texte = 'Déterminer, en détaillant les calculs, l\\'expression algébrique de la fonction affine $f$ dont la représentation<br>'\n          texte += `graphique passe par les points $A(${xA};${yA})$ et $B(${xB};${yB})$.<br>`\n\n          texteCorr = `Les points $A(${xA};${yA})$ et $B(${xB};${yB})$ appartiennent à la courbe représentative de $f$<br>`\n\n          texteCorr += `Comme $A(${xA};${yA})\\\\in \\\\mathcal{C_f}$, on a  $f(${a})=${b}$  et comme $B(${xB};${yB})\\\\in \\\\mathcal{C_f}$, on a $f(${c})=${d}$ <br>`\n          texteCorr += 'Comme $f$ est une fonction affine, on sait d\\'après le cours qu\\'elle va s\\'écrire sous la forme $f(x)= a x+ b$ avec $a$ et $b$ des nombres réels.<br>'\n          texteCorr += 'L\\'objectif est donc de déterminer $a$ et $b$.<br>'\n          texteCorr += 'Or, on sait d\\'après le cours, que dans ces conditions, avec $u\\\\neq v$, on a :'\n          texteCorr += '$a=\\\\dfrac{f(u)-f(v)}{u-v}.$<br>'\n          texteCorr += `On applique cette relation avec les données de l'énoncé : $u=${a}$ et  $v=${c}$ ,<br>`\n          texteCorr += 'ce qui donne :'\n          texteCorr += `$a=\\\\dfrac{f(${a})-f(${c})}{${a}-${ecritureParentheseSiNegatif(c)}}=\\\\dfrac{${b}-${ecritureParentheseSiNegatif(d)}}{${a}-${ecritureParentheseSiNegatif(c)}}=\\\\dfrac{${b - d}}{${a - c}}$<br>`\n          texteCorr += `d'où : $a=${texFractionReduite(b - d, a - c)}.$<br>`\n          if (b === d) {\n            texteCorr += '$f$ est une fonction constante, cas particulier des fonctions affines.<br>'\n            texteCorr += `On a donc : $f(x)=${b}$`\n          } else {\n            texteCorr += 'On peut donc déjà déduire que la fonction $f$ s\\'écrit sous la forme : '\n            if ((b - d) / (a - c) === 1) {\n              texteCorr += '$f(x)= x +b.$<br>'\n            }\n            if ((b - d) / (a - c) === -1) {\n              texteCorr += '$f(x)= -x +b.$<br>'\n            }\n            if (b - d !== a - c && b - d !== -a + c) { // cas général\n              texteCorr += `   $f(x)=${texFractionReduite(b - d, a - c)} x +b.$<br>`\n            }\n            texteCorr += 'On cherche $b$ et pour cela on peut utiliser au choix une des deux données de l\\'énoncé :<br>'\n            texteCorr += `On prend par exemple : $f(${a})=${b}$  <br>`\n            texteCorr += 'Comme'\n            if ((b - d) / (a - c) === 1) {\n              texteCorr += '$f(x)= x +b.$<br>'\n            }\n            if ((b - d) / (a - c) === -1) {\n              texteCorr += '$f(x)= -x +b.$<br>'\n            }\n            if (b - d !== a - c && b - d !== -a + c) { // cas général\n              texteCorr += `   $f(x)=${texFractionReduite(b - d, a - c)} x +b.$<br>`\n            }\n            texteCorr += `On en déduit que :$f(${a})=${texFractionReduite(b - d, a - c)} \\\\times ${a} +b=${b}$<br>`\n            texteCorr += `$\\\\phantom{On en deduit que :}\\\\iff b=${b}-${texFractionReduite(e, f)}$<br>`\n            texteCorr += `$\\\\phantom{On en deduit que :}\\\\iff b=${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}$<br> `\n            texteCorr += 'On peut conclure que '\n            if (b - d === a - c) { // cas où a=1\n              if ((b * a - b * c - a * b + a * d) * (a - c) > 0) {\n                texteCorr += `$f(x)= x +${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}.$<br>`\n              } else {\n                if (b * a - b * c === a * b + a * d) { // cas où b=0\n                  texteCorr += '$f(x)= x.$<br>'\n                }\n                texteCorr += `$f(x)= x ${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}.$<br>`\n              }\n            }\n            if (b - d === -a + c) { // cas où a=-1\n              if ((b * a - b * c - a * b + a * d) * (a - c) > 0) { // b>0\n                texteCorr += `$f(x)= -x +${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}.$<br>`\n              } else {\n                if (a * d - b * c === 0) { // cas où b=0\n                  texteCorr += '$f(x)= -x.$<br>'\n                } else texteCorr += `$f(x)= -x ${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}.$<br>`\n              }\n            }\n            if (b - d !== a - c && b - d !== -a + c) { // cas général\n              if ((b * a - b * c - a * b + a * d) * (a - c) > 0) { // cas où b>0\n                texteCorr += `$f(x)=${texFractionReduite(b - d, a - c)}x+  ${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}$`\n              } else { // cas où b<0\n                texteCorr += `$f(x)=${texFractionReduite(b - d, a - c)}x  ${texFractionReduite(b * a - b * c - a * b + a * d, a - c)}$`\n              }\n            }\n          }\n\n          break\n      }\n      if (this.questionJamaisPosee(i, k, a, b, c, d, e)) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 4, '1 :Avec deux images\\n 2 : Avec deux points et un repère\\n 3 : Avec deux points sans repère\\n 4 : Mélange des cas précédents']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Determinerfonctionaffine","Exercice","this","consigne","nbCols","nbColsCorr","spacing","spacingCorr","nbQuestions","sup","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","A","B","r","f","c","t","l","xA","xB","yA","yB","a","b","d","e","k","typesDeQuestions","i","cpt","choice","randint","ecritureParentheseSiNegatif","texFractionReduite","repere2","quotientier","point","tracePoint","labelPoint","color","mathalea2d","xmin","ymin","xmax","ymax","questionJamaisPosee","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}