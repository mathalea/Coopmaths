{"version":3,"file":"js/11553.83708c68783ebada30bb.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N52-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, reduireAxPlusB, texteEnCouleur, choice, ecritureAlgebrique, ecritureParentheseSiNegatif } from '../../modules/outils.js'\nimport { fraction, obtenirListeFractionsIrreductiblesFaciles } from '../../modules/fractions.js'\nexport const titre = 'Résoudre les équations produit-nul'\n\n/**\n * Résoudre des équations (ax+b)(cx+d)=0\n* @author Stéphane Guyon & Jean-claude Lhote\n* 2N52-1, ex 2L12\n* publié le 6/02/2021\n*/\nexport default function EquationsProduitsNuls2 () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Résoudre dans $\\\\mathbb R$ les équations suivantes :'\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.nbQuestions = 3\n  this.sup = 1\n  this.spacingCorr = 3\n  this.nbQuestions = 2\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = true\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles = []\n    if (this.sup < 4) {\n      typesDeQuestionsDisponibles = [parseInt(this.sup)]\n    } else {\n      typesDeQuestionsDisponibles = [1, 2, 3]\n    }\n\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, cpt = 0, a, b, c, d, fractions, index, f1, f2, f3, f4, typesDeQuestions; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      a = randint(-9, 9, 0)\n      b = randint(-9, 9, 0)\n      c = randint(-9, 9, [0, a])\n      d = randint(1, 9, [0, b])\n      switch (typesDeQuestions) {\n        case 1:\n          texte = `$(${reduireAxPlusB(a, b)})(${reduireAxPlusB(c, d)})=0$`\n          texteCorr = `On reconnaît une équation produit-nul, donc on applique la propriété :<br>\n                    ${texteEnCouleur('Un produit est nul si et seulement si au moins un de ses facteurs est nul.')}<br>`\n          texteCorr += texte + '<br>' // optimisation du code\n          texteCorr += `$\\\\iff ${reduireAxPlusB(a, b)}=0$ ou $${reduireAxPlusB(c, d)}=0$<br>`\n          if (this.correctionDetaillee) { // on ajoute les étapes de résolution si la correction détaillée est cochée.\n            texteCorr += `$\\\\iff ${reduireAxPlusB(a, 0)}=${-b}$ ou $ ${reduireAxPlusB(c, 0)}=${-d}$<br>`\n          }\n          f1 = fraction(-b, a)\n          f2 = fraction(-d, c)\n          texteCorr += `$\\\\iff x=${f1.texFraction}$ ou $ x=${f2.texFraction}$<br>On en déduit :  `\n          if (-b / a > -d / c) {\n            texteCorr += `$S=\\\\left\\\\{${f2.texFractionSimplifiee};${f1.texFractionSimplifiee}\\\\right\\\\}$`\n          } else if (-b / a < -d / c) {\n            texteCorr += `$S=\\\\left\\\\{${f1.texFractionSimplifiee};${f2.texFractionSimplifiee}\\\\right\\\\}$`\n          } else texteCorr += `$S=\\\\left\\\\{${f1.texFractionSimplifiee}\\\\right\\\\}$`\n\n          break\n        case 2:\n          fractions = obtenirListeFractionsIrreductiblesFaciles()\n          index = randint(0, fractions.length - 1)\n          f1 = fractions[index]\n          index = randint(0, fractions.length - 1, index)\n          f2 = fractions[index]\n          f3 = f1.inverse().multiplieEntier(-b)\n          f4 = f2.inverse().multiplieEntier(-d)\n          texte = `$(${f1.texFraction}x${ecritureAlgebrique(b)})(${f2.texFraction}x${ecritureAlgebrique(d)})=0$`\n          texteCorr = `On reconnaît une équation produit-nul, donc on applique la propriété :<br>\n                    ${texteEnCouleur('Un produit est nul si et seulement si au moins un de ses facteurs est nul.')}<br>\n                    $(${f1.texFraction}x${ecritureAlgebrique(b)})(${f2.texFraction}x${ecritureAlgebrique(d)})=0$<br>`\n          texteCorr += `$\\\\iff ${f1.texFraction}x${ecritureAlgebrique(b)}=0$ ou $${f2.texFraction}x${ecritureAlgebrique(d)}=0$<br>`\n          if (this.correctionDetaillee) {\n            texteCorr += `$\\\\iff ${f1.texFraction}x=${-b}$ ou $${f2.texFraction}x=${-d}$<br>`\n            texteCorr += `$\\\\iff x=${-b}\\\\div ${f1.texFraction}$ ou $x=${-d}\\\\div ${f2.texFraction}$<br>`\n            texteCorr += `$\\\\iff x=${-b}\\\\times ${f1.inverse().texFraction}$ ou $x=${-d}\\\\times ${f2.inverse().texFraction}$<br>`\n          }\n          texteCorr += `$\\\\iff x=${f3.texFractionSimplifiee}$ ou $ x=${f4.texFractionSimplifiee}$<br>\n                     On en déduit :  `\n          if (f3.differenceFraction(f4).s > 0) {\n            texteCorr += `$S=\\\\left\\\\{${f4.texFractionSimplifiee};${f3.texFractionSimplifiee}\\\\right\\\\}$`\n          } else if (f3.differenceFraction(f4).s < 0) {\n            texteCorr += `$S=\\\\left\\\\{${f3.texFractionSimplifiee};${f4.texFractionSimplifiee}\\\\right\\\\}$`\n          } else texteCorr += `$S=\\\\left\\\\{${f3.texFractionSimplifiee}\\\\right\\\\}$`\n          break\n        case 3: // (ax+f1)(bx+f2)=0\n          fractions = obtenirListeFractionsIrreductiblesFaciles()\n          index = randint(0, fractions.length - 1)\n          f1 = fractions[index].multiplieEntier(choice([-1, 1]))\n          index = randint(0, fractions.length - 1, index)\n          f2 = fractions[index].multiplieEntier(choice([-1, 1]))\n          f3 = f1.entierDivise(-a)\n          f4 = f2.entierDivise(-b)\n          texte = `$(${reduireAxPlusB(a, 0)}${f1.texFractionSignee})(${reduireAxPlusB(b, 0)}${f2.texFractionSignee})=0$`\n          texteCorr = `On reconnaît une équation produit-nul, donc on applique la propriété :<br>\n                        ${texteEnCouleur('Un produit est nul si et seulement si au moins un de ses facteurs est nul.')}<br>\n                        $(${reduireAxPlusB(a, 0)}${f1.texFractionSignee})(${reduireAxPlusB(b, 0)}${f2.texFractionSignee})=0$<br>`\n          texteCorr += `$\\\\iff ${reduireAxPlusB(a, 0)}${f1.texFractionSignee}=0$ ou $${reduireAxPlusB(b, 0)}${f2.texFractionSignee}=0$<br>`\n          if (this.correctionDetaillee) {\n            texteCorr += `$\\\\iff ${reduireAxPlusB(a, 0)}=${f1.multiplieEntier(-1).texFraction}$ ou $${reduireAxPlusB(b, 0)}=${f2.multiplieEntier(-1).texFraction}$<br>`\n            texteCorr += `$\\\\iff x=${f1.multiplieEntier(-1).texFraction}\\\\div ${ecritureParentheseSiNegatif(a)}$ ou $x=${f2.multiplieEntier(-1).texFraction}\\\\div ${ecritureParentheseSiNegatif(b)}$<br>`\n            texteCorr += `$\\\\iff x=${f1.multiplieEntier(-1).texFraction}\\\\times ${fraction(1, a).texFSP}$ ou $x=${f2.multiplieEntier(-1).texFraction}\\\\times ${fraction(1, b).texFSP}$<br>`\n          }\n          texteCorr += `$\\\\iff x=${f3.texFractionSimplifiee}$ ou $ x=${f4.texFractionSimplifiee}$<br>\n                         On en déduit :  `\n          if (f3.differenceFraction(f4).s > 0) {\n            texteCorr += `$S=\\\\left\\\\{${f4.texFractionSimplifiee};${f3.texFractionSimplifiee}\\\\right\\\\}$`\n          } else if (f3.differenceFraction(f4).s < 0) {\n            texteCorr += `$S=\\\\left\\\\{${f3.texFractionSimplifiee};${f4.texFractionSimplifiee}\\\\right\\\\}$`\n          } else texteCorr += `$S=\\\\left\\\\{${f3.texFractionSimplifiee}\\\\right\\\\}$`\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 5, '1 : (ax+b)(cx+d)=0 a,b,c et d entiers\\n 2 : (ax+b)(cx+d)=0 a et c rationnels\\n 3 : (ax+b)(cx+d)=0 b et d rationnels\\n4 : Mélange des cas précédents']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","EquationsProduitsNuls2","Exercice","this","consigne","nbCols","nbColsCorr","spacing","spacingCorr","nbQuestions","sup","correctionDetailleeDisponible","correctionDetaillee","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","parseInt","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","c","d","fractions","index","f1","f2","f3","f4","typesDeQuestions","i","cpt","randint","reduireAxPlusB","texteEnCouleur","fraction","texFraction","texFractionSimplifiee","obtenirListeFractionsIrreductiblesFaciles","length","inverse","multiplieEntier","ecritureAlgebrique","differenceFraction","s","choice","entierDivise","texFractionSignee","ecritureParentheseSiNegatif","texFSP","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}