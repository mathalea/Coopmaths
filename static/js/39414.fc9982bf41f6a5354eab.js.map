{"version":3,"file":"js/39414.fc9982bf41f6a5354eab.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G30.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { homothetie, codeAngle, longueur, barycentre, milieu, latexParPoint, mathalea2d, point, polygone, rotation, codageAngleDroit, nommePolygone, segment } from '../../modules/2d.js'\nimport { calcul, texFraction, quatriemeProportionnelle, texNombre, arrondi, texteEnCouleurEtGras, listeQuestionsToContenu, randint, creerNomDePolygone, choice, arrondiVirgule } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCOpenNum' // type de question AMC\n\nexport const titre = 'Calculer une longueur dans un triangle rectangle en utilisant la trigonométrie'\n\n/**\n * @author Jean-Claude Lhote à partir de 3G30-1 de Rémi Angot\n * 3G30 Exercice remplaçant l'exercice initial utilisant MG32\n * Calculer une longueur en utilisant l'un des trois rapport trigonométrique.\n * * Si this.level=4 alors seul le cosinus sera utilisé.\n * Mars 2021\n */\nexport default function CalculDeLongueur () {\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = false\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = false\n  this.interactif = false\n  if (context.isHtml) {\n    this.spacing = 0\n    this.spacingCorr = 0\n  } else {\n    this.spacing = 2\n    this.spacingCorr = 2\n  }\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let reponse\n\n    const nom = creerNomDePolygone(3)\n    let texte = ''; let texteCorr = ''; const objetsEnonce = []; const objetsCorrection = []; let choixRapportTrigo\n    let ab, bc, ac\n    if (this.level === 4) {\n      choixRapportTrigo = choice(['cosinus', 'invCosinus'])\n    } else {\n      choixRapportTrigo = choice(['cosinus', 'sinus', 'tangente', 'invCosinus', 'invSinus', 'invTangente'])\n    }\n    const angleABC = randint(35, 55)\n    const angleABCr = angleABC * Math.PI / 180\n    if (!context.isHtml && this.sup) {\n      texte += '\\\\begin{minipage}{.7\\\\linewidth}\\n'\n    }\n    switch (choixRapportTrigo) {\n      case 'cosinus': // AB=BCxcos(B)\n        bc = randint(10, 15)\n        ab = calcul(bc * Math.cos(angleABCr))\n        ac = calcul(bc * Math.sin(angleABCr))\n        texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> $${nom[1] + nom[2]}=${bc}$ cm et $\\\\widehat{${nom}}=${angleABC}\\\\degree$.<br>`\n        texte += `Calculer $${nom[0] + nom[1]}$ à $0,1$ cm près.`\n        break\n      case 'sinus':\n        bc = randint(10, 15)\n        ab = calcul(bc * Math.cos(angleABCr))\n        ac = calcul(bc * Math.sin(angleABCr))\n        texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> $${nom[1] + nom[2]}=${bc}$ cm et $\\\\widehat{${nom}}=${angleABC}\\\\degree$.<br>`\n        texte += `Calculer $${nom[0] + nom[2]}$ à $0,1$ cm près.`\n        break\n      case 'tangente':\n        ab = randint(7, 10)\n        ac = calcul(ab * Math.tan(angleABCr))\n        bc = calcul(ab / Math.cos(angleABCr))\n        texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> $${nom[0] + nom[1]}=${ab}$ cm et $\\\\widehat{${nom}}=${angleABC}\\\\degree$.<br>`\n        texte += `Calculer $${nom[0] + nom[2]}$ à $0,1$ cm près.`\n        break\n      case 'invCosinus':\n        ab = randint(7, 10)\n        bc = calcul(ab / Math.cos(angleABCr))\n        ac = calcul(bc * Math.sin(angleABCr))\n        texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> $${nom[0] + nom[1]}=${ab}$ cm et $\\\\widehat{${nom}}=${angleABC}\\\\degree$.<br>`\n        texte += `Calculer $${nom[1] + nom[2]}$ à $0,1$ cm près.`\n        break\n      case 'invSinus':\n        ac = randint(7, 10)\n        bc = calcul(ac / Math.sin(angleABCr))\n        ab = calcul(bc * Math.cos(angleABCr))\n        texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> $${nom[0] + nom[2]}=${ac}$ cm et $\\\\widehat{${nom}}=${angleABC}\\\\degree$.<br>`\n        texte += `Calculer $${nom[1] + nom[2]}$ à $0,1$ cm près.`\n        break\n      case 'invTangente':\n        ac = randint(7, 10)\n        bc = calcul(ac / Math.sin(angleABCr))\n        ab = calcul(bc * Math.cos(angleABCr))\n        texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> $${nom[0] + nom[2]}=${ac}$ cm et $\\\\widehat{${nom}}=${angleABC}\\\\degree$.<br>`\n        texte += `Calculer $${nom[0] + nom[1]}$ à $0,1$ cm près.`\n        break\n    }\n\n    if (!context.isHtml && this.sup) {\n      texte += '\\n\\\\end{minipage}\\n'\n    }\n    const a = point(0, 0)\n    const b = point(ab, 0)\n    const c = point(0, ac)\n    const p1 = polygone(a, b, c)\n    // p1.isVisible = false\n    const p2 = rotation(p1, a, randint(0, 360))\n    const A = p2.listePoints[0]\n    const B = p2.listePoints[1]\n    const C = p2.listePoints[2]\n    const codage = codageAngleDroit(B, A, C)\n    A.nom = nom[0]\n    B.nom = nom[1]\n    C.nom = nom[2]\n    const nomme = nommePolygone(p2, nom)\n    const hypo = segment(C, B)\n    hypo.epaisseur = 2\n    hypo.color = 'blue'\n    //   codageAngle.epaisseur = 3\n    //  codageAngle2.epaisseur = 3\n    const codageDeAngle = codeAngle(A, B, C, 2)\n    const M1 = milieu(A, B)\n    const M2 = milieu(A, C)\n    const M3 = milieu(B, C)\n    const G = barycentre(p2)\n    const m3 = homothetie(M3, G, 1 + 1.5 / longueur(G, M3), 'm3', 'center')\n    const m1 = homothetie(M1, M3, 1 + 1.5 / longueur(M3, M1), 'm1', 'center')\n    const m2 = homothetie(M2, M3, 1 + 1.5 / longueur(M3, M2), 'm2', 'center')\n    let m4\n    let t1, t2, t3\n    switch (choixRapportTrigo) {\n      case 'cosinus': // AB=BCxcos(B)\n        t3 = latexParPoint(`${bc} \\\\text{ cm}`, m3, 'black', 120, 12, '')\n        t2 = latexParPoint('?', m1, 'black', 120, 12, '')\n        m4 = homothetie(G, B, 2.7 / longueur(B, G), 'B2', 'center')\n        t1 = latexParPoint(`${angleABC}\\\\degree`, m4, 'black', 20, 12, '')\n        break\n      case 'sinus':\n        t3 = latexParPoint(`${bc} \\\\text{ cm}`, m3, 'black', 120, 12, '')\n        t2 = latexParPoint('?', m2, 'black', 120, 12, '')\n        m4 = homothetie(G, B, 2.7 / longueur(B, G), 'B2', 'center')\n        t1 = latexParPoint(`${angleABC}\\\\degree`, m4, 'black', 100, 12, '')\n        break\n      case 'tangente':\n        t1 = latexParPoint(`${ab} \\\\text{ cm}`, m1, 'black', 120, 12, '')\n        t2 = latexParPoint('?', m2, 'black', 120, 12, '')\n        m4 = homothetie(G, B, 2.7 / longueur(B, G), 'B2', 'center')\n        t3 = latexParPoint(`${angleABC}\\\\degree`, m4, 'black', 100, 12, '')\n        break\n      case 'invCosinus':\n        t1 = latexParPoint(`${ab} \\\\text{ cm}`, m1, 'black', 120, 12, '')\n        t3 = latexParPoint('?', m3, 'black', 120, 12, '')\n        m4 = homothetie(G, B, 2.7 / longueur(B, G), 'B2', 'center')\n        t2 = latexParPoint(`${angleABC}\\\\degree`, m4, 'black', 100, 12, '')\n        break\n      case 'invSinus':\n        t2 = latexParPoint(`${ac} \\\\text{ cm}`, m2, 'black', 120, 12, '')\n        t3 = latexParPoint('?', m3, 'black', 120, 12, '')\n        m4 = homothetie(G, B, 2.7 / longueur(B, G), 'B2', 'center')\n        t1 = latexParPoint(`${angleABC}\\\\degree`, m4, 'black', 100, 12, '')\n        break\n      case 'invTangente':\n        t2 = latexParPoint(`${ac} \\\\text{ cm}`, m2, 'black', 120, 12, '')\n        t1 = latexParPoint('?', m1, 'black', 120, 12, '')\n        m4 = homothetie(G, B, 2.7 / longueur(B, G), 'B2', 'center')\n        t3 = latexParPoint(`${angleABC}\\\\degree`, m4, 'black', 100, 12, '')\n        break\n    }\n    objetsEnonce.push(p2, codage, nomme, t1, t2, t3, codageDeAngle)\n    objetsCorrection.push(p2, codage, nomme, t1, t2, t3, hypo, codageDeAngle)\n\n    const paramsEnonce = { xmin: Math.min(A.x, B.x, C.x) - 4, ymin: Math.min(A.y, B.y, C.y) - 4, xmax: Math.max(A.x, B.x, C.x) + 2, ymax: Math.max(A.y, B.y, C.y) + 2, pixelsParCm: 20, scale: 0.37, mainlevee: true, amplitude: 0.4 }\n    const paramsCorrection = { xmin: Math.min(A.x, B.x, C.x) - 4, ymin: Math.min(A.y, B.y, C.y) - 4, xmax: Math.max(A.x, B.x, C.x) + 2, ymax: Math.max(A.y, B.y, C.y) + 2, pixelsParCm: 20, scale: 0.35, mainlevee: false }\n    if (!context.isHtml && this.sup) {\n      texte += '\\\\begin{minipage}{.3\\\\linewidth}\\n'\n    }\n    if (this.sup) {\n      texte += mathalea2d(paramsEnonce, objetsEnonce) + '<br>'\n    }\n    if (!context.isHtml && this.correctionDetaillee) {\n      texteCorr += '\\\\begin{minipage}{.4\\\\linewidth}\\n' + mathalea2d(paramsCorrection, objetsCorrection) + '\\n\\\\end{minipage}\\n' + '\\\\begin{minipage}{.7\\\\linewidth}\\n'\n    }\n    if (!context.isHtml && this.sup) {\n      texte += '\\n\\\\end{minipage}\\n'\n    }\n    switch (choixRapportTrigo) {\n      case 'cosinus': // AB=BCxcos(B)\n        texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> le cosinus de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n        texteCorr += `$\\\\cos\\\\left(\\\\widehat{${nom}}\\\\right)=\\\\dfrac{${nom[0] + nom[1]}}{${nom[1] + nom[2]}}$.<br>`\n        texteCorr += 'Avec les données numériques :<br>'\n        texteCorr += `$\\\\dfrac{\\\\cos\\\\left(${angleABC}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(nom[0] + nom[1], bc)}$<br>`\n        texteCorr += `${texteEnCouleurEtGras('Les produits en croix sont égaux, donc ', 'red')}<br>`\n        texteCorr += `$${nom[0] + nom[1]}=${quatriemeProportionnelle('\\\\color{red}{1}', bc, `\\\\cos\\\\left(${angleABC}\\\\degree\\\\right)`)}$`\n        texteCorr += `soit $${nom[0] + nom[1]}\\\\approx${texNombre(arrondi(ab, 1))}$ cm.`\n        reponse = arrondi(ab, 1)\n        break\n      case 'sinus':\n        texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> le sinus de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n        texteCorr += `$\\\\sin \\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(nom[0] + nom[2], nom[1] + nom[2])}$<br>`\n        texteCorr += 'Avec les données numériques :<br>'\n        texteCorr += `$\\\\dfrac{\\\\sin\\\\left(${angleABC}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(nom[0] + nom[2], bc)}$<br>`\n        texteCorr += `${texteEnCouleurEtGras('Les produits en croix sont égaux, donc ', 'red')}<br>`\n        texteCorr += `$${nom[0] + nom[2]}=${quatriemeProportionnelle('\\\\color{red}{1}', bc, `\\\\sin\\\\left(${angleABC}\\\\degree\\\\right)`)}$`\n        texteCorr += `soit $${nom[0] + nom[2]}\\\\approx${texNombre(arrondi(ac, 1))}$ cm.`\n        reponse = arrondi(ac, 1)\n        break\n      case 'tangente':\n        texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> la tangente de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n        texteCorr += `$\\\\tan \\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(nom[0] + nom[2], nom[0] + nom[1])}$<br>`\n        texteCorr += 'Avec les données numériques :<br>'\n        texteCorr += `$\\\\dfrac{\\\\tan\\\\left(${angleABC}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(nom[0] + nom[2], ab)}$<br>`\n        texteCorr += `${texteEnCouleurEtGras('Les produits en croix sont égaux, donc ', 'red')}<br>`\n        texteCorr += `$${nom[0] + nom[2]}=${quatriemeProportionnelle('\\\\color{red}{1}', ab, `\\\\tan\\\\left(${angleABC}\\\\degree\\\\right)`)}$`\n        texteCorr += `soit $${nom[0] + nom[2]}\\\\approx${texNombre(arrondi(ac, 1))}$ cm.`\n        reponse = arrondi(ac, 1)\n        break\n      case 'invCosinus':\n        texteCorr = `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> le cosinus de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n        texteCorr += `$\\\\cos\\\\left(\\\\widehat{${nom}}\\\\right)=\\\\dfrac{${nom[0] + nom[1]}}{${nom[1] + nom[2]}}$.<br>`\n        texteCorr += 'Avec les données numériques :<br>'\n        texteCorr += `$\\\\dfrac{\\\\cos\\\\left(${angleABC}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(ab, nom[1] + nom[2])}$<br>`\n        texteCorr += `${texteEnCouleurEtGras('Les produits en croix sont égaux, donc ', 'red')}<br>`\n        texteCorr += `$${nom[1] + nom[2]}=${quatriemeProportionnelle(`\\\\cos\\\\left(${angleABC}\\\\degree\\\\right)`, ab, '\\\\color{red}{1}')}$`\n        texteCorr += `soit $${nom[1] + nom[2]}\\\\approx${texNombre(arrondi(bc, 1))}$ cm.`\n        reponse = arrondi(bc, 1)\n        break\n      case 'invSinus':\n        texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> le sinus de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n        texteCorr += `$\\\\sin \\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(nom[0] + nom[2], nom[1] + nom[2])}$<br>`\n        texteCorr += 'Avec les données numériques :<br>'\n        texteCorr += `$\\\\dfrac{\\\\sin\\\\left(${angleABC}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(ac, nom[1] + nom[2])}$<br>`\n        texteCorr += `${texteEnCouleurEtGras('Les produits en croix sont égaux, donc ', 'red')}<br>`\n        texteCorr += `$${nom[1] + nom[2]}=${quatriemeProportionnelle(`\\\\sin\\\\left(${angleABC}\\\\degree\\\\right)`, ac, '\\\\color{red}{1}')}$`\n        texteCorr += `soit $${nom[1] + nom[2]}\\\\approx${texNombre(arrondi(bc, 1))}$ cm.`\n        reponse = arrondi(bc, 1)\n        break\n      case 'invTangente':\n        texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> la tangente de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n        texteCorr += `$\\\\tan \\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(nom[0] + nom[2], nom[0] + nom[1])}$<br>`\n        texteCorr += 'Avec les données numériques :<br>'\n        texteCorr += `$\\\\dfrac{\\\\tan\\\\left(${angleABC}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(ac, nom[0] + nom[1])}$<br>`\n        texteCorr += `${texteEnCouleurEtGras('Les produits en croix sont égaux, donc ', 'red')}<br>`\n        texteCorr += `$${nom[0] + nom[1]}=${quatriemeProportionnelle(`\\\\tan\\\\left(${angleABC}\\\\degree\\\\right)`, ac, '\\\\color{red}{1}')}$`\n        texteCorr += `soit $${nom[0] + nom[1]}\\\\approx${texNombre(arrondi(ab, 1))}$ cm.`\n        reponse = arrondi(ab, 1)\n        break\n    }\n    if (!context.isHtml && this.correctionDetaillee) {\n      texteCorr += '\\n\\\\end{minipage}\\n'\n    }\n    /*****************************************************/\n    // Pour AMC\n    if (context.isAmc) {\n      this.autoCorrection[0] = {\n        enonce: texte,\n        propositions: [\n          {\n            texte: texteCorr,\n            statut: 4,\n            feedback: ''\n          }\n        ],\n        reponse: {\n          texte: 'résultat',\n          valeur: [reponse],\n          param: {\n            digits: 3,\n            decimals: 1,\n            signe: false,\n            exposantNbChiffres: 0,\n            exposantSigne: false,\n            approx: 1\n          }\n        }\n      }\n    }\n    if (context.isHtml) {\n      texte += ajouteChampTexteMathLive(this, 0, 'largeur25 inline', { texteApres: ' cm' })\n      setReponse(this, 0, arrondiVirgule(reponse))\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n\n  this.besoinFormulaireCaseACocher = ['Figure à main levée', false]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["interactifReady","interactifType","amcReady","amcType","titre","CalculDeLongueur","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","correctionDetailleeDisponible","correctionDetaillee","interactif","context","spacing","spacingCorr","nouvelleVersion","reponse","autoCorrection","listeQuestions","listeCorrections","nom","creerNomDePolygone","texte","texteCorr","objetsEnonce","objetsCorrection","choixRapportTrigo","ab","bc","ac","level","choice","angleABC","randint","angleABCr","Math","PI","calcul","cos","sin","tan","a","point","b","c","p1","polygone","p2","rotation","A","listePoints","B","C","codage","codageAngleDroit","nomme","nommePolygone","hypo","segment","epaisseur","color","codageDeAngle","codeAngle","M1","milieu","M2","M3","G","barycentre","m3","homothetie","longueur","m1","m2","m4","t1","t2","t3","latexParPoint","push","paramsEnonce","xmin","min","x","ymin","y","xmax","max","ymax","pixelsParCm","scale","mainlevee","amplitude","paramsCorrection","mathalea2d","texFraction","texteEnCouleurEtGras","quatriemeProportionnelle","texNombre","arrondi","enonce","propositions","statut","feedback","valeur","param","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","ajouteChampTexteMathLive","texteApres","setReponse","arrondiVirgule","listeQuestionsToContenu","besoinFormulaireCaseACocher","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}