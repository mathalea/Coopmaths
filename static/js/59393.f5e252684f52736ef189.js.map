{"version":3,"file":"js/59393.f5e252684f52736ef189.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6G24-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,calcul,choisitLettresDifferentes,lettreDepuisChiffre,arcenciel} from '../../modules/outils.js'\nimport {point,tracePoint,labelPoint,droite,codageMediatrice,segment,traceCompas,dansLaCibleCarree,cibleCarree,translation,homothetie,symetrieAxiale,distancePointDroite,longueur,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Construire le symétrique d’un point avec cible auto-corrective'\n\n/**\n * Construction de symétrique avec dispositif d'auto-correction aléatoire\n * Ref 6G24-3 \n * @author Jean-Claude Lhote\n * Publié le 30/11/2020\n */\nexport default function Construire_symetrique_point_6e() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbQuestions = 1;\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.sup = 3;\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let result = [0, 0], texteCorr = \"\", nbpoints = parseInt(this.sup),nontrouve,assezloin,cible\n    let celluleAlea = function (rang) {\n      let lettre = lettreDepuisChiffre(randint(1, rang))\n      let chiffre = Number(randint(1, rang)).toString()\n      return lettre + chiffre\n    }\n    // On prépare la figure...\n    let a = randint(-10, 10), b = randint(-10, 10, a)\n    let d = droite(a, b, 0, '(d)')\n    let A = translation(point(0, 0), homothetie(d.directeur, point(0, 0), -0.5))\n    let B = translation(point(0, 0), homothetie(d.directeur, point(0, 0), 0.5))\n    let marks = ['/', '//', '///', 'x', 'o', 'S', 'V']\n    let noms = choisitLettresDifferentes(nbpoints, 'Q',  true)\n    this.consigne = `Construire le symétrique des points $${noms[0]}$`\n    for (let i = 1; i < nbpoints - 1; i++) {\n      this.consigne += `, $${noms[i]}$`\n    }\n    this.consigne += ` et $${noms[nbpoints - 1]}$ par rapport à $(d)$.`;\n    let cibles = [], M = [], N = [], objetsEnonce = [], objetsCorrection = []  //cibles, M point marqués, N symétrique de M\n    let cellules = []\n    let xMin, yMin, xMax, yMax\n    [xMin, yMin, xMax, yMax] = [0, 0, 0, 0]\n    for (let i = 0; i < nbpoints; i++) { //On place les cibles.\n      N.push(point(calcul(randint(-80, 80, 0) / 10), calcul(randint(-80, 80, 0) / 10), noms[i] + \"\\'\"))\n      nontrouve = true\n      while (distancePointDroite(N[i], d) < 3 || nontrouve) {\n        nontrouve = true\n        if (distancePointDroite(N[i], d) < 3) {\n          N[i].x = calcul(randint(-80, 80, 0) / 10)\n          N[i].y = calcul(randint(-80, 80, 0) / 10)\n        }\n        else {\n          assezloin = true\n          for (let j = 0; j < i; j++) {\n            if (longueur(N[i], N[j]) < 4.5) assezloin = false\n          }\n          if (assezloin == false) {//éloigner les points donc les grilles\n            N[i].x = calcul(randint(-80, 80, 0) / 10)\n            N[i].y = calcul(randint(-80, 80, 0) / 10)\n          }\n          else nontrouve = false\n        }\n      }\n    }\n\n    objetsEnonce.push(d)\n    objetsCorrection.push(d, tracePoint(A, B))\n\n    for (let i = 0; i < nbpoints; i++) {\n      cellules.push(celluleAlea(4))\n      result = dansLaCibleCarree(N[i].x, N[i].y, 4, 0.6, cellules[i])\n      cible = cibleCarree({ x: result[0], y: result[1], rang: 4, num: i + 1, taille: 0.6 })\n      cible.taille = 0.6\n      cible.color = 'orange'\n      cible.opacite = 0.7\n      cibles.push(cible)\n    }\n    for (let i = 0; i < nbpoints; i++) {\n      M.push(symetrieAxiale(N[i], d, noms[i]))\n      objetsEnonce.push(tracePoint(M[i]), labelPoint(M[i]), cibles[i])\n      objetsCorrection.push(tracePoint(M[i], N[i]), labelPoint(M[i], N[i]), cibles[i])\n      objetsCorrection.push(segment(M[i], N[i], arcenciel(i)), codageMediatrice(M[i], N[i], arcenciel(i + 5), marks[i]))\n      objetsCorrection.push(traceCompas(A, N[i], 20), traceCompas(B, N[i], 20))\n      texteCorr += `$${noms[i]}\\'$, le symétrique du point $${noms[i]}$ est dans la case ${cellules[i]} de la grille ${i + 1}.<br>`\n    }\n\n    for (let i = 0; i < nbpoints; i++) {\n      xMin = Math.min(xMin, N[i].x - 3, M[i].x - 3)\n      yMin = Math.min(yMin, N[i].y - 3, M[i].y - 3)\n      xMax = Math.max(xMax, N[i].x + 3, M[i].x + 3)\n      yMax = Math.max(yMax, N[i].y + 3, M[i].y + 3)\n    }\n\n    context.fenetreMathalea2d = [xMin, yMin, xMax, yMax]\n\n    this.listeQuestions.push(mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsEnonce))\n    this.listeCorrections.push(texteCorr + mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsCorrection))\n    listeQuestionsToContenu(this)\n\n    //  let nonchoisi,coords=[],x,y,objetsEnonce=[],objetsCorrection=[],nomd,label_pos\n\n  }\n  this.besoinFormulaireNumerique = ['Nombre de points (1 à 5)', 5, \"1\\n2\\n3\\n4\\n5\"];\n  // this.besoinFormulaire2CaseACocher = [\"Avec des points de part et d'autre\"];\t\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Construire_symetrique_point_6e","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","nontrouve","assezloin","cible","result","texteCorr","nbpoints","parseInt","a","randint","b","d","droite","A","translation","point","homothetie","directeur","B","marks","noms","choisitLettresDifferentes","i","xMin","yMin","xMax","yMax","cibles","M","N","objetsEnonce","objetsCorrection","cellules","push","calcul","distancePointDroite","x","y","j","longueur","tracePoint","rang","lettreDepuisChiffre","Number","toString","dansLaCibleCarree","cibleCarree","num","taille","color","opacite","symetrieAxiale","labelPoint","segment","arcenciel","codageMediatrice","traceCompas","Math","min","max","context","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","indexOf"],"sourceRoot":""}