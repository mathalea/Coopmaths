/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_3e_3Algo1_js"],{

/***/ "./src/js/exercices/3e/3Algo1.js":
/*!***************************************!*\
  !*** ./src/js/exercices/3e/3Algo1.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Instruction_conditionelle)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst titre = 'Instruction conditionelle'\n\n/**\n * * Instructions conditionnelles\n * * numéro de l'exo ex : 3Algo1\n * * publié le  24/11/2020\n * @author Erwan Duplessy\n */\nfunction Instruction_conditionelle() {\n\t'use strict';\n\t_ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\tthis.debug = false;\n\tthis.sup = 1;\n\tthis.nb_questions = 2;\n\n\tthis.titre = titre;\n\tthis.consigne = `Donner les coordonnées de la position finale du lutin.`;\n\tthis.type_exercice = \"Scratch\"\n\tthis.nb_cols = 2;\n\tthis.nb_cols_corr = 1;\n\tthis.nb_questions_modifiable = false;\n\tsortie_html ? this.spacing = 1 : this.spacing = 1;\n\tsortie_html ? this.spacing_corr = 1 : this.spacing_corr = 1;\n\tthis.liste_packages = `scratch3`;\n\t//let type_de_questions_disponibles;\t\n\tthis.nouvelle_version = function () {\n\t\tthis.liste_questions = []; // Liste de questions\n\t\tthis.liste_corrections = []; // Liste de questions corrigées\n\t\tfunction scratchblocks_Tikz(code_svg, code_tikz) {\n\t\t\tif (sortie_html) {\n\t\t\t\treturn code_svg;\n\t\t\t} else {\n\t\t\t\treturn code_tikz;\n\t\t\t};\n\t\t};\n\n\t\tlet texte = \"La position initiale d'un lutin dans un repère est (0,0). Dans le programme, x désigne l'abscisse, et y désigne l'ordonnée d'un lutin. <br>\"; // texte de l'énoncé\n\t\ttexte += `Une variable a été créée, elle s'appelle <code class=\"b\">(var) :: ring</code>. <br>`;\n\t\tlet texte_corr = \" \"; // texte du corrigé\n\t\tlet code_tikz = ``; // code pour dessiner les blocs en tikz\n\t\tlet code_svg = ``; // code pour dessiner les blocs en svg\n\t\tlet nbRepetition = 1; // Nombre de fois où la boucle est répétée. \n\t\tif (this.sup2) {\n\t\t\tnbRepetition = 3;\n\t\t}\n\t\tlet xLutin = 0;\n\t\tlet yLutin = 0;\n\n\t\tcode_tikz += `\\\\medskip \\\\\\\\ \\\\begin{scratch} <br>`;\n\t\tcode_svg += `<pre class='blocks'>`;\n\n\t\tlet n1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 10);\n\t\tlet n2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 10);\n\t\tlet n3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 10);\n\t\tlet n4 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 10);\n\n\t\tcode_tikz += `\\\\blockmove{aller à x: \\ovalnum{0} y: \\ovalnum{0}}`;\n\t\tcode_svg += `quand le drapeau vert pressé <br>`;\n\t\tcode_svg += `Aller à x:(0) y:(0) <br>`;\n\t\tcode_svg += `mettre (var) à (${n1}) <br>`;\n\t\tcode_svg += ` si <(var) < [${n2}]> alors <br>`;\n\t\tcode_svg += ` ajouter (100) à x <br>`;\n\t\tif (this.sup > 1) {\n\t\t\tcode_svg += ` si <(var) > [${n3}]> alors <br>`;\n\t\t\tcode_svg += ` ajouter (50) à x <br>`;\n\t\t\tcode_svg += ` fin <br>`;\n\t\t}\n\t\tcode_svg += ` sinon <br>`;\n\t\tcode_svg += ` ajouter (70) à y <br>`;\n\t\tif (this.sup > 2) {\n\t\t\tcode_svg += ` si <(var) > [${n4}]> alors <br>`;\n\t\t\tcode_svg += ` ajouter (40) à y <br>`;\n\t\t\tcode_svg += ` fin <br>`;\n\t\t}\n\t\tcode_svg += ` fin <br>`;\n\n\t\tcode_svg += `</pre>`;\n\t\tcode_tikz += `\\\\end{scratch}`;\n\n\t\ttexte += scratchblocks_Tikz(code_svg, code_tikz);\n\n\n\t\tif (n1 < n2) {\n\t\t\ttexte_corr += `Comme l'inégalité \"${n1} < ${n2}\" est vraie, alors on ajoute 100 à l'abscisse du lutin. <br>`;\n\t\t\txLutin += 100;\n\t\t\tif (this.sup > 1) {\n\t\t\t\tif (n1 > n3) {\n\t\t\t\t\ttexte_corr += `Comme l'inégalité \"${n1} > ${n3}\" est vraie, alors on ajoute 50 à l'abscisse du lutin. <br>`;\n\t\t\t\t\txLutin += 50;\n\t\t\t\t} else {\n\t\t\t\t\ttexte_corr += `Comme l'inégalité \"${n1} > ${n3}\" est fausse, alors on ne change pas l'abscisse du lutin. <br>`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ttexte_corr += `Comme l'inégalité \"${n1} < ${n2}\" est fausse, alors on ajoute 70 à l'ordonnée du lutin. <br>`;\n\t\t\tyLutin += 70;\n\t\t\tif (this.sup > 2) {\n\t\t\t\tif (n1 > n4) {\n\t\t\t\t\ttexte_corr += `Comme l'inégalité \"${n1} > ${n4}\" est vraie, on ajoute 40 à l'ordonnée du lutin. <br>`;\n\t\t\t\t\tyLutin += 40;\n\t\t\t\t} else {\n\t\t\t\t\ttexte_corr += `Comme l'inégalité \"${n1} > ${n4}\" est fausse, alors on ne change pas l'ordonnée du lutin. <br>`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttexte_corr += ` La position finale est donc : (${xLutin} ; ${yLutin}).`;\n\n\n\t\tthis.liste_questions.push(texte);\n\t\tthis.liste_corrections.push(texte_corr);\n\t\t(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\t};\n\tthis.besoin_formulaire_numerique = [`Variante `, 3, '1 : sans condition imbriquée\\n2 : avec une condition imbriquée\\n3 : avec deux conditions imbriquées'];\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/3e/3Algo1.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);