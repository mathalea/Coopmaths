{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N30.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","interactifType","amcReady","amcType","LireAbscisseDecimale","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","spacingCorr","sup","listePackages","interactif","nouvelleVersion","numeroExercice","typesDeQuestions","autoCorrection","listeQuestions","listeCorrections","contenu","contenuCorrection","parseInt","combinaisonListes","htmlConsigne","abs0","l1","l2","l3","x1","x2","x3","x11","x22","x33","xA","xB","xC","pas1","pas2","i","d","texte","texteCorr","cpt","lettreDepuisChiffre","propositions","statut","feedback","randint","calcul","droiteGraduee2","Unite","Min","Max","axeStyle","pointTaille","pointStyle","labelsPrincipaux","thickSec","thickSecDist","labelListe","texNombre","pointListe","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","context","setReponse","ajouteChampTexteMathLive","enonce","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable"],"mappings":"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","file":"js/92361.e65197f2c7f460c85ed2.js","sourcesContent":["import { combinaisonListes, listeQuestionsToContenu, randint, calcul, htmlConsigne, lettreDepuisChiffre, texNombre } from '../../modules/outils.js'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { droiteGraduee2, mathalea2d } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Lire l’abscisse décimale d’un point'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCOpen'\n\n/**\n * Lire l'abscisse décimale d'un point\n * @author Jean-Claude Lhote et Rémi Angot\n * référence 6N30\n */\nexport default function LireAbscisseDecimale () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = \"Lire l'abscisse de chacun des points suivants.\"\n  this.nbQuestions = 3\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 1\n  this.listePackages = 'tkz-euclide'\n  this.interactif = false\n  this.nouvelleVersion = function (numeroExercice) {\n    this.autoCorrection = []\n    // numeroExercice est 0 pour l'exercice 1\n    let typesDeQuestions\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    if (parseInt(this.sup) === 4) { typesDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions) } else {\n      typesDeQuestions = combinaisonListes(\n        [parseInt(this.sup)],\n        this.nbQuestions\n      )\n    }\n\n    this.contenu = htmlConsigne(this.consigne)\n    for (let i = 0, d = [], abs0, l1, l2, l3, x1, x2, x3, x11, x22, x33, xA, xB, xC, pas1, pas2, texte = '', texteCorr = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      l1 = lettreDepuisChiffre(i * 3 + 1)\n      l2 = lettreDepuisChiffre(i * 3 + 2)\n      l3 = lettreDepuisChiffre(i * 3 + 3)\n      this.autoCorrection[3 * i] = { propositions: [{ statut: 4, feedback: '' }] }\n      this.autoCorrection[3 * i + 1] = { propositions: [{ statut: 4, feedback: '' }] }\n      this.autoCorrection[3 * i + 2] = { propositions: [{ statut: 4, feedback: '' }] }\n      switch (typesDeQuestions[i]) {\n        case 1: // Placer des décimaux sur un axe (1 décimale)\n          abs0 = randint(0, 9)\n          pas1 = 1\n          pas2 = 10\n          break\n\n        case 2: // Placer des décimaux sur un axe (2 décimales)\n          abs0 = randint(0, 90) / 10\n          pas1 = 10\n          pas2 = 10\n          break\n\n        case 3: // Placer des décimaux sur un axe (3 décimales)\n          abs0 = randint(0, 990) / 100\n          pas1 = 100\n          pas2 = 10\n          break\n      }\n      x1 = randint(0, 2)\n      x2 = randint(3, 4)\n      x3 = randint(5, 6)\n      x11 = randint(1, 9)\n      x22 = randint(1, 9)\n      x33 = randint(1, 3)\n      xA = calcul(x1 + x11 / pas2)\n      xB = calcul(x2 + x22 / pas2)\n      xC = calcul(x3 + x33 / pas2)\n      d[2 * i] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        thickSec: true,\n        thickSecDist: 1 / pas2,\n        labelListe: [[0, `${texNombre(abs0)}`], [1, `${texNombre(calcul(abs0 + 1 / pas1))}`]],\n        pointListe: [[xA, l1], [xB, l2], [xC, l3]]\n      })\n      d[2 * i + 1] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        thickSec: true,\n        thickSecDist: 1 / pas2,\n        labelListe: [\n          [0, `${texNombre(abs0)}`],\n          [xA, texNombre(calcul(xA / pas1 + abs0))],\n          [xB, texNombre(calcul(xB / pas1 + abs0))],\n          [xC, texNombre(calcul(xC / pas1 + abs0))]\n        ],\n        pointListe: [[xA, l1], [xB, l2], [xC, l3]]\n\n      })\n\n      texte = mathalea2d({ xmin: -2, ymin: -1, xmax: 30, ymax: 1, pixelsParCm: 20, scale: 0.5 }, d[2 * i])\n      texteCorr = mathalea2d({ xmin: -2, ymin: -2, xmax: 30, ymax: 2, pixelsParCm: 20, scale: 0.5 }, d[2 * i + 1])\n\n      if (this.interactif && context.isHtml) {\n        setReponse(this, 3 * i, calcul(xA / pas1 + abs0))\n        setReponse(this, 3 * i + 1, calcul(xB / pas1 + abs0))\n        setReponse(this, 3 * i + 2, calcul(xC / pas1 + abs0))\n        texte += l1 + ajouteChampTexteMathLive(this, 3 * i)\n        texte += l2 + ajouteChampTexteMathLive(this, 3 * i + 1)\n        texte += l3 + ajouteChampTexteMathLive(this, 3 * i + 2)\n      } else {\n        if (context.isAmc) {\n          this.autoCorrection[i].enonce = texte\n          this.autoCorrection[i].propositions[0].texte = texteCorr\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    4,\n    '1 : Un chiffre après la virgule\\n2 : Deux chiffres après la virgule \\n3 : Trois chiffres après la virgule\\n4 : Mélange'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}