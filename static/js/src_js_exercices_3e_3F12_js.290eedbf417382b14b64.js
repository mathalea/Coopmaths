/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_3e_3F12_js"],{

/***/ "./src/js/exercices/3e/3F12.js":
/*!*************************************!*\
  !*** ./src/js/exercices/3e/3F12.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ fonctions_calculs_d_images)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_macroSvgJs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/macroSvgJs.js */ \"./src/js/modules/macroSvgJs.js\");\n\n\n\nconst titre = 'Fonctions : Calculs d’images';\n/**\n * 3F12 Notion de fonction - Vocabulaire\n * Déterminer à partir de plusieurs modes de représentation l'image d'un nombre\n * @author Sébastien LOZANO\n */\n\nfunction fonctions_calculs_d_images() {\n  'use strict';\n\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\n  this.sup = 1;\n  this.titre = titre; // pas de différence entre la version html et la version latex pour la consigne\n\n  this.consigne = ''; // pas de différence entre la version html et la version latex pour la consigne\n\n  this.consigne += 'Calcule les images avec la méthode demandée.';\n  sortieHtml ? this.spacing = 2 : this.spacing = 1;\n  sortieHtml ? this.spacingCorr = 2 : this.spacingCorr = 1;\n  this.nbQuestions = 4; // this.correctionDetailleeDisponible = true;\n\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.sup = 5;\n  const num_ex = '3F12'; // pour rendre unique les id des SVG, en cas d'utilisation dans plusieurs exercices y faisant appel\n\n  if (sortieHtml) {\n    var pourcentage = '100%'; // pour l'affichage des svg. On a besoin d'une variable globale\n  } else {// sortie LaTeX\n    }\n\n  ;\n\n  this.nouvelleVersion = function (numeroExercice) {\n    let type_de_questions;\n\n    if (sortieHtml) {// les boutons d'aide uniquement pour la version html\n      //\t\t\t this.boutonAide = modalPdf(numeroExercice,\"assets/pdf/FicheFonctions-3F1-act.pdf\",\"Aide mémoire sur les fonctions (Sébastien Lozano)\",\"Aide mémoire\")\n      //\t\t\t this.boutonAide += modalVideo('videoTest','/videos/Fonctions.mp4','Petit conte mathématique','Intro Vidéo');\n    }\n\n    this.listeQuestions = []; // Liste de questions\n\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    let type_de_questions_disponibles = [];\n\n    if (this.sup == 1) {\n      type_de_questions_disponibles = [1]; // prog de calcul\n    } else if (this.sup == 2) {\n      type_de_questions_disponibles = [2]; // diagramme\n    } else if (this.sup == 3) {\n      type_de_questions_disponibles = [3]; // f(x) = ...\n    } else if (this.sup == 4) {\n      type_de_questions_disponibles = [4]; // f : x ---> ...\n    } else if (this.sup == 5) {\n      type_de_questions_disponibles = [1, 2, 3, 4]; // mélange\n    }\n\n    ; // let type_de_questions_disponibles = [1];\n\n    const listeTypeDeQuestions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaisonListesSansChangerOrdre)(type_de_questions_disponibles, this.nbQuestions);\n\n    for (let i = 0, a, b, c, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      type_de_questions = listeTypeDeQuestions[i];\n\n      if (sortieHtml) {\n        const id_unique = `${num_ex}_${i}_${Date.now()}`;\n        var id_du_div = `div_svg${numeroExercice}${id_unique}`;\n        var id_du_div_corr = `div_svg_corr${numeroExercice}${id_unique}`;\n      } // on part sur de l'affine avec coeff positifs, on verra ensuite\n\n\n      a = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 9);\n      b = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 9);\n      c = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 9);\n\n      switch (type_de_questions) {\n        case 1:\n          var j = 0; // pour la sous-numérotation\n\n          texte = 'On donne le programme de calcul suivant qui correspond à une certaine fonction :';\n          texteCorr = 'Avec ce programme de calcul :';\n\n          if (sortieHtml) {\n            texte += `\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<div class=\"ui compact warning message\">\t\t\n\t\t\t\t\t\t\t<p>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t- Choisir un nombre<br>\n\t\t\t\t\t\t\t- Multiplier ce nombre par ${a}<br>\n\t\t\t\t\t\t\t- Ajouter ${b} au résultat obtenu<br>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<br>`; // sous-question a/\n\n            texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ` Appliquer ce programme de calcul au nombre ${c}<br>`;\n            texteCorr += '<br>' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + `\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<div class=\"ui compact warning message\">\t\t\n\t\t\t\t\t\t\t<p>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t- On choisit le nombre ${c}<br>\n\t\t\t\t\t\t\t- On multiplie ce nombre par ${a} : ${a}$\\\\times$ ${c} = ${a * c}<br>\n\t\t\t\t\t\t\t- On ajoute ${b} au résultat obtenu : ${a * c}+${b}=${a * c + b}<br>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t`;\n            j++; // sous-question b/\n\n            texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ' Traduire ce calcul par une phrase contenant le mot image';\n            texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + `L'image de ${c} par cette fonction vaut ${a * c + b}`;\n            texteCorr += `<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par cette fonction`;\n          } else {\n            texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texCadreParOrange)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.itemize)(['Choisir un nombre', `Multiplier ce nombre par ${a}`, `Ajouter ${b} au résultat obtenu`])); // sous-question a/\n\n            texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texEnumerate)([`Appliquer ce programme de calcul au nombre ${c}`, 'Traduire ce calcul par une phrase contenant le mot image'], this.spacing); // texteCorr +=\n\n            texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texEnumerate)([(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texCadreParOrange)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.itemize)([`On choisit le nombre ${c}`, `On multiplie ce nombre par ${a} : $${a} \\\\times ${c} = ${a * c}$ `, `On ajoute ${b} au résultat obtenu : $${a * c}+${b}=${a * c + b}$`])), `L'image de ${c} par cette fonction vaut ${a * c + b}<br>On peut aussi dire que ${a * c + b} est l'image de ${c} par cette fonction`], this.spacing);\n          }\n\n          ;\n          break;\n\n        case 2:\n          var j = 0; // pour la sous-numérotation\n          // les variables a,b,c changent sans refaire un appel à randint\n\n          texte = `Soit $f$ la fonction définie par l'expression algébrique $f(x)=$ ${a}$x+$${b}`;\n\n          if (sortieHtml) {\n            // sous-question a/\n            texte += '<br>' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ` Calculer l'image de ${c}`;\n            texte += '<br>';\n            texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ` Calculons l'image par $f$ de $x= ${c}$ :`;\n            texteCorr += `<br>$f(${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)('\\\\textit{\\\\textbf{x}}')})= ${a} ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)('\\\\textit{\\\\textbf{x}}')}+${b}$`;\n            texteCorr += `<br>$f(${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)})= ${a}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)}+${b}$`;\n            texteCorr += `<br>$f(${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)})= ${a * c}+${b}$`;\n            texteCorr += `<br>$f(${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)})= ${a * c + b}$`;\n            j++; // sous question b/\n\n            texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ' Traduire ce calcul par une phrase contenant le mot image';\n            texteCorr += '<br>' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ` L'image de ${c} par la fonction $f$ vaut ${a * c + b}`;\n            texteCorr += `<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par la fonction $f$`;\n          } else {\n            // sous-question a/ et b/\n            texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texEnumerate)([`Calculer l'image de ${c}`, 'Traduire ce calcul par une phrase contenant le mot image'], this.spacing);\n            texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texEnumerate)([`Calculons l'image par $f$ de $x= ${c}$ :\n\t\t\t\t\t\t\t<br>$f(${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)('\\\\textit{\\\\textbf{x}}')})= ${a} ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)('\\\\textit{\\\\textbf{x}}')}+${b}$\n\t\t\t\t\t\t\t<br>$f(${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)})= ${a}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)}+${b}$\n\t\t\t\t\t\t\t<br>$f(${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)})= ${a * c}+${b}$\n\t\t\t\t\t\t\t<br>$f(${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)})= ${a * c + b}$`, `L'image de ${c} par la fonction $f$ vaut ${a * c + b}\n\t\t\t\t\t\t\t<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par la fonction $f$`], this.spacing);\n          }\n\n          ;\n          break;\n\n        case 3:\n          var j = 0; // pour la sous-numérotation\n          // les variables a,b,c changent sans refaire un appel à randint\n\n          texte = `Soit $g$ la fonction définie par $g:x\\\\longmapsto$ ${a}$x+$${b}`;\n\n          if (sortieHtml) {\n            // sous-question a/\n            texte += '<br>' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ` Calculer l'image de ${c}`;\n            texte += '<br>';\n            texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ` Calculons l'image par $g$ de $x= ${c}$ :`;\n            texteCorr += `<br>$g:${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)('\\\\textit{\\\\textbf{x}}')}\\\\longmapsto ${a} ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)('\\\\textit{\\\\textbf{x}}')}+${b}$`;\n            texteCorr += `<br>$g:${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)}\\\\longmapsto ${a}\\\\times${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)}+${b}$`;\n            texteCorr += `<br>$g:${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)}\\\\longmapsto ${a * c}+${b}$`;\n            texteCorr += `<br>$g:${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)}\\\\longmapsto ${a * c + b}$`;\n            j++; // sous question b/\n\n            texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ' Traduire ce calcul par une phrase contenant le mot image';\n            texteCorr += '<br>' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ` L'image de ${c} par la fonction $g$ vaut ${a * c + b}`;\n            texteCorr += `<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par la fonction $g$`;\n          } else {\n            // sous-question a/ et b/\n            texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texEnumerate)([`Calculer l'image de ${c}`, 'Traduire ce calcul par une phrase contenant le mot image'], this.spacing);\n            texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texEnumerate)([`Calculons l'image par $g$ de $x= ${c}$ :\n\t\t\t\t\t\t\t<br>$g:${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)('\\\\textit{\\\\textbf{x}}')}\\\\longmapsto ${a} ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)('\\\\textit{\\\\textbf{x}}')}+${b}$\n\t\t\t\t\t\t\t<br>$g:${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)}\\\\longmapsto ${a}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)}+${b}$\n\t\t\t\t\t\t\t<br>$g:${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)}\\\\longmapsto ${a * c}+${b}$\n\t\t\t\t\t\t\t<br>$g:${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(c)}\\\\longmapsto ${a * c + b}$`, `L'image de ${c} par la fonction $g$ vaut ${a * c + b}\n\t\t\t\t\t\t\t<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par la fonction $g$`], this.spacing);\n          }\n\n          ;\n          break;\n\n        case 4:\n          texte = '';\n          texteCorr = '';\n          texteCorr += 'Calculer avec un diagramme ';\n          var j = 0; // pour la sous-numérotation\n          // les variables a,b,c changent sans refaire un appel à randint\n\n          texte += 'Soit la fonction $h$ définie par le diagramme ';\n\n          if (sortieHtml) {\n            // sous-question a/\n            texte += `<div id=\"${id_du_div}\" style=\"width: ${pourcentage}\"; height: 50px; display : table \"></div>`;\n            (0,_modules_macroSvgJs_js__WEBPACK_IMPORTED_MODULE_2__.SVG_machine_diag_3F12)(id_du_div, 800, 100, 'h', 'x', [['' + a, a + 'x'], ['' + b, a + 'x+' + b]]);\n            texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ` Calculer l'image de ${c}`;\n            texte += '<br>';\n            texteCorr += '<br>';\n            texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ` Calculons l'image par $h$ de $x=$ ${c} :`;\n            texteCorr += `<div id=\"${id_du_div_corr}\" style=\"width: ${pourcentage}\"; display : table \"></div>`;\n            (0,_modules_macroSvgJs_js__WEBPACK_IMPORTED_MODULE_2__.SVG_machine_diag_3F12)(id_du_div_corr, 800, 100, 'h', '' + c, [['' + a, '' + a * c], ['' + b, '' + (a * c + b)]]);\n            j++; // sous question b/\n\n            texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ' Traduire ce calcul par une phrase contenant le mot image';\n            texteCorr += '<br>' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(j) + ` L'image de ${c} par la fonction $h$ vaut ${a * c + b}`;\n            texteCorr += `<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par la fonction $h$`;\n          } else {\n            texte += '<br>' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tikzMachineDiag)('h', 'x', [['\\\\times ' + a, a + 'x'], ['+' + b, a + 'x+' + b]]); // sous-question a/ et b/\n\n            texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texEnumerate)([`Calculer l'image de ${c}`, 'Traduire ce calcul par une phrase contenant le mot image'], this.spacing);\n            texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texEnumerate)([`Calculons l'image par $g$ de $x=$ ${c} :<br>` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tikzMachineDiag)('h', c, [['\\\\times ' + a, a * c], ['+' + b, a * c + b]]), `L'image de ${c} par la fonction $g$ vaut ${a * c + b}\n\t\t\t\t\t\t \t<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par la fonction $g$`], this.spacing);\n          }\n\n          ;\n          break;\n      }\n\n      ;\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n\n      cpt++;\n    }\n\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeQuestionsToContenu)(this);\n  };\n\n  this.besoinFormulaireNumerique = ['Règle à travailler', 5, \"1 : &Agrave; partir d'un programme de calcul\\n2 : &Agrave; partir de l'expression algébrique sous forme f(x) = ...\\n3 : &Agrave; partir de l'expression algébrique sous forme f : x --> ...\\n4 : &Agrave; partir d'un diagramme\\n5 : Mélange\"];\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/exercices/3e/3F12.js\n");

/***/ })

}]);