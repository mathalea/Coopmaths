{"version":3,"file":"js/29973.d84664599ab4a198e3fe.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5S20.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, shuffle, calcul, texteEnCouleurEtGras } from '../../modules/outils.js'\nimport { point, tracePoint, segment, texteParPosition, fractionParPosition, mathalea2d } from '../../modules/2d.js'\nimport { fraction } from '../../modules/fractions.js'\n\nexport const titre = 'Placer un événement sur une échelle de probabilités'\n\n/**\n * Placer un événement sur une échelle de probabilités.\n * @author Erwan Duplessy\n * Référence 5S20\n */\n// Source : https://pedagogie.ac-guadeloupe.fr/sites/default/files/File/flouvet/ra16_c4_math_probabilite_flash_pdf_69131.pdf\nexport default function PlacerProbabilites () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  context.isHtml ? this.spacing = 2 : this.spacing = 1\n  context.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1\n  this.sup = true\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    const lstEvenenementA = [] // liste des évènements disponibles : p === 0 ou p === 1\n    const lstEvenenementB = [] // liste des évènements disponibles : p < 0.5\n    const lstEvenenementC = [] // liste des évènements disponibles : p = 0.5\n    const lstEvenenementD = [] // liste des évènements disponibles : p > 0.5\n    const nbEvenement = 4 // nombre d'évènements dans l'énoncé\n    let texte = ''\n    // liste de vocabulaire. Le nombre donne la position sur l'axe.\n    const lstEchelle = [['Impossible', 0],\n      ['Improbable', calcul(1 / 6)],\n      ['Peu probable', calcul(2 / 6)],\n      ['Une chance sur deux', calcul(3 / 6)],\n      ['Probable', calcul(4 / 6)],\n      ['Très probable', calcul(5 / 6)],\n      ['Certain', 1]]\n\n    // Evenements impossibles :\n    lstEvenenementA.push(['L’équipe de France de rugby va remporter le prochain match international de football', 0])\n    const animal = choice(['un dragon', \"l'abominable homme des neiges\", 'un chat-garou', 'un dahu', 'un hippocampéléphantocamélos', 'une licorne', 'le Minotaure'])\n    lstEvenenementA.push([`Rencontrer ${animal} en sortant du collège`, 0])\n    lstEvenenementA.push(['Le point M, placé à 4 cm de A, est sur le cercle de centre A et de rayon 7 cm', 0])\n    lstEvenenementA.push(['Le point M, placé à 4 cm de A, est dans le disque de centre A et de rayon 3 cm', 0])\n    lstEvenenementA.push(['En France, on peut trouver des vaches espagnoles qui parlent anglais', 0])\n    lstEvenenementA.push(['Aux USA, on peut trouver des pierres qui roulent et qui amassent de la mousse', 0])\n    // Evenements improbables :\n    lstEvenenementB.push(['Gagner le gros lot au loto', 0.05])\n    lstEvenenementB.push(['Avoir de la neige à Nice en juillet', 0.05])\n    const carte = choice(['un As', 'un Roi', 'une Dame', 'un Valet', 'un 10', 'un 9', 'un 8', 'un 7', 'un 6', 'un 5', 'un 4', 'un 3', 'un 2'])\n    lstEvenenementB.push([`Obtenir ${carte} en prenant une carte au hasard dans un jeu de 52 cartes`, 0.08])\n    // Evenements peu probables :\n    lstEvenenementB.push(['Choisir une balle rouge dans un sac contenant une balle rouge et trois balles vertes', 0.25])\n    // Evenements Une chance sur deux :\n    lstEvenenementC.push(['Obtenir ' + choice(['pile', 'face']) + ' quand on lance une pièce d’un euro', 0.5])\n    lstEvenenementC.push(['Obtenir une carte ' + choice(['rouge', 'noire']) + ' dans un jeu de 52 cartes', 0.5])\n    // Evenements probables :\n    lstEvenenementD.push(['La première voiture que je verrai en sortant du collège sera de marque française', 0.6])\n    // Evenements très probables :\n    lstEvenenementD.push(['Le prochain président de la République Française aura plus de 40 ans', 0.9])\n    // Evenements certains :\n    lstEvenenementA.push(['Le prochain oiseau que je verrai aura des ailes', 1])\n    lstEvenenementA.push(['Le point M, placé à 4 cm de A, est sur le cercle de centre A et de rayon 4 cm', 1])\n    lstEvenenementA.push(['Le point M, placé à 4 cm de A, est dans le disque de centre A et de rayon 5 cm', 1])\n    // Evenement divers :\n    const m = choice([4, 6, 8, 10, 12, 20, 24, 30, 48, 60, 100]) // nombre de faces du dé\n    const n = randint(1, m) // nombre à obtenir\n    lstEvenenementB.push([`Obtenir ${n} avec un dé à ${m} faces`, 1 / m])\n    if ((m - n + 1) / m < 0.5) {\n      lstEvenenementB.push([`Obtenir un nombre supérieur ou égal à ${n} avec un dé à ${m} faces`, (m - n + 1) / m])\n    } else {\n      lstEvenenementD.push([`Obtenir un nombre supérieur ou égal à ${n} avec un dé à ${m} faces`, (m - n + 1) / m])\n    }\n    if (n / m < 0.5) {\n      lstEvenenementB.push([`Obtenir un nombre inférieur ou égal à ${n} avec un dé à ${m} faces`, n / m])\n    } else {\n      lstEvenenementD.push([`Obtenir un nombre inférieur ou égal à ${n} avec un dé à ${m} faces`, n / m])\n    }\n\n    // choix des évènements :\n    let lstEvenenementExo = []\n    lstEvenenementExo.push(choice(lstEvenenementA, lstEvenenementExo)) // p === 0 ou p === 1\n    lstEvenenementExo.push(choice(lstEvenenementB, lstEvenenementExo)) // p < 0.5\n    lstEvenenementExo.push(choice(lstEvenenementC, lstEvenenementExo)) // p = 0.5\n    lstEvenenementExo.push(choice(lstEvenenementD, lstEvenenementExo)) // p > 0.5\n    lstEvenenementExo = shuffle(lstEvenenementExo)\n\n    // Texte de l'énoncé :\n    texte += 'Placer la lettre correspondant à chaque évènement sur l\\'axe des probabilités ci-dessous.<br>'\n    for (let i = 0; i < nbEvenement; i++) {\n      texte += String.fromCharCode(65 + i) + ' : ' + lstEvenenementExo[i][0] + '.<br>'\n    }\n    // Création des objets pour dessiner :\n    const L = 10 // longueur du segment\n\n    const lstObjet = [] // tous les objets qui seront dessinés\n    const h = 0.25 // hauteur trait\n    lstObjet.push(segment(0, 0, L, 0)) // axe\n    lstObjet.push(segment(0, -h, 0, h)) // trait gauche\n    lstObjet.push(segment(L, -h, L, h)) // trait central\n    lstObjet.push(segment(L / 2, -h, L / 2, h)) // trait droit\n    let angle = 60 // inclinaison du texte légende\n    const y = -0.5\n    if (this.sup) {\n      for (let j = 0; j < lstEchelle.length; j++) {\n        lstObjet.push(texteParPosition(lstEchelle[j][0], L * lstEchelle[j][1], y, angle, 'black', 1, 'gauche'))\n      }\n    } else {\n      lstObjet.push(fractionParPosition({ x: L / 2, y: -1, fraction: fraction(1, 2), couleur: 'black' })) // fraction 1/2\n      lstObjet.push(texteParPosition('0', 0, y - 0.25, 0, 'black', 1, 'middle')) // abscisse 0\n      lstObjet.push(texteParPosition('1', L, y - 0.25, 0, 'black', 1, 'middle')) // abscisse 1\n    }\n\n    if (context.isHtml) {\n      texte += '<p style=\"display:block\">'\n    } else {\n      texte += '\\\\begin{center}'\n    }\n    let miny = -2\n    if (this.sup) {\n      miny = -4\n    }\n\n    texte += mathalea2d({ xmin: -1, xmax: L + 3, ymin: miny, ymax: 1, pixelsParCm: 40, scale: 1 }, lstObjet)\n    if (context.isHtml) {\n      texte += '</p>'\n    } else {\n      texte += '\\\\end{center}'\n    }\n\n    // CORRECTION :\n    let texteCorr = ' '\n    const ylst = [0, 0, 0, 0, 0, 0, 0] // ordonnées des textes réponses\n    angle = 0 // inclinaison du texte réponse\n    let p = 0 // probabilité de l'événement\n    let parrondi = 0 // arrondi de la proba au sixième près\n    for (let i = 0; i < nbEvenement; i++) {\n      p = lstEvenenementExo[i][1]\n      parrondi = Math.round(calcul(6 * p)) // échelle arrondie entre 0 et 7 pour éviter la superposition des textes réponses\n      ylst[parrondi] += 0.5 // on augmente l'ordonnée si elle est déjà utilisée\n      const txtSolution = String.fromCharCode(65 + i) // code 65 correspond à 'A'\n      lstObjet.push(texteParPosition(txtSolution, calcul(L * p), ylst[parrondi], 0, 'black', 1, 'middle'))\n      lstObjet.push(tracePoint(point(calcul(L * p), 0), 'blue'))\n    }\n    for (let i = 0; i < nbEvenement; i++) {\n      p = lstEvenenementExo[i][1]\n      if (p === 0) { parrondi = 0 } else if (p < 0.25) { parrondi = 1 } else if (p < 0.5) { parrondi = 2 } else if (p === 0.5) { parrondi = 3 } else if (p < 0.75) { parrondi = 4 } else if (p < 1) { parrondi = 5 } else if (p === 1) { parrondi = 6 };\n      texteCorr += String.fromCharCode(65 + i) + ' : ' + lstEvenenementExo[i][0] + '. ' + texteEnCouleurEtGras(lstEchelle[parrondi][0]) + '.<br>'\n    }\n    if (context.isHtml) {\n      texteCorr += '<p style=\"display:block\">'\n    } else {\n      texteCorr += '\\\\begin{center}'\n    }\n    texteCorr += mathalea2d({ xmin: -1, xmax: L + 3, ymin: miny, ymax: 2, pixelsParCm: 40, scale: 1 }, lstObjet)\n    if (context.isHtml) {\n      texteCorr += '</p>'\n    } else {\n      texteCorr += '\\\\end{center}'\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this) // Espacement de 2 em entre chaque question.\n  }\n  this.besoinFormulaireCaseACocher = ['Changer le type d\\'axe']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","PlacerProbabilites","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","context","spacing","spacingCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","lstEvenenementA","lstEvenenementB","lstEvenenementC","lstEvenenementD","texte","lstEchelle","calcul","push","animal","choice","carte","m","n","randint","lstEvenenementExo","shuffle","i","String","fromCharCode","L","lstObjet","h","segment","angle","y","j","length","texteParPosition","fractionParPosition","x","fraction","couleur","miny","mathalea2d","xmin","xmax","ymin","ymax","pixelsParCm","scale","texteCorr","ylst","p","parrondi","Math","round","txtSolution","tracePoint","point","texteEnCouleurEtGras","listeQuestionsToContenu","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}