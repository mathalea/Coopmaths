{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3F21-2.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","DeterminerFonctionAffine","Exercice","this","consigne","sup","nbQuestionsModifiable","correctionDetailleeDisponible","correctionDetaillee","nbCols","nbColsCorr","tailleDiaporama","video","nouvelleVersion","typeDeQuestionsDisponibles","nbQuestions","listeQuestions","listeCorrections","parseInt","listeTypeDeQuestions","combinaisonListes","console","log","x1","x2","y1","y2","a","b","tA","tB","repere","texte","texteCorr","i","cpt","randint","tracePoint","point","color","repere2","xMin","yMin","Math","min","xMax","yMax","max","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","courbe2","x","calcul","ecritureAlgebrique","ecritureParentheseSiNegatif","fraction","multiplieEntier","ajouteEntier","texFractionSimplifiee","denIrred","texFraction","simplifie","texFractionSignee","num","den","round","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","boutonAide","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/8591.da7c888a6119d158ef5c.js","sourcesContent":["import Exercice from '../ClasseExercice.js'\nimport { listeQuestionsToContenu, calcul, randint, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif } from '../../modules/outils.js'\nimport { fraction } from '../../modules/Fractions.js'\nimport { repere2, courbe2, mathalea2d, tracePoint, point } from '../../modules/2d.js'\nexport const titre = 'Déterminer une fonction affine par la donnée des images de deux nombres'\n\n/**\n * Déterminer la forme algébrique à partir de la donnée de 2 nombres et de leurs images\n * cas 0 : fonction constante\n * cas 1 : f(0) et f(x2) donnés\n * cas 2 : f(x1) et f(x1+1) donnés\n * cas 3 : f(x1) et f(x2) donnés a et b entiers\n * cas 4 : f(x1) et f(x2) donnés a et b rationnels\n * x1, x2, f(x1) et f(x2) sont toujours entiers relatifs\n * @Auteur Jean-Claude Lhote\n * Référence 3F21-2\n*/\nexport default function DeterminerFonctionAffine () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.sup = 1\n  this.nbQuestionsModifiable = false\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = true\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  // this.sup = 1\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.titre = titre\n    this.nbQuestions = 5 // Ici le nombre de questions\n    this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n    this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n    this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    let typeDeQuestionsDisponibles\n    if (parseInt(this.sup) === 1) {\n      typeDeQuestionsDisponibles = [0, 1]\n    } else if (parseInt(this.sup) === 2) {\n      typeDeQuestionsDisponibles = [1, 2, 3]\n    } else {\n      typeDeQuestionsDisponibles = [3, 4]\n    }\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions)\n    console.log(this.sup, typeDeQuestionsDisponibles, listeTypeDeQuestions)\n    for (let i = 0, x1, x2, y1, y2, a, b, tA,tB,repere, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = '' // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texteCorr = '' // Idem pour le texte de la correction.\n\n      switch (listeTypeDeQuestions[i]) {\n        case 0: // fonction constante\n          a = 0\n          b = randint(-10, 10, 0)\n          x1 = randint(-5, -1)\n          x2 = randint(1, 5)\n          y1 = b\n          y2 = b\n          texteCorr = `On remarque que $f(${x1})=f(${x2})=${b}$ donc la droite représentant la fonction $f$ passe par deux points distincts ayant la même ordonnée.<br>`\n          texteCorr += `Elle est donc parallèle à l'axe des abscisses. La fonction $f$ est une fonction constante et $f(x)=${b}$.`\n          if (this.correctionDetaillee) {\n            tA=tracePoint(point(x1,y1))\n            tB=tracePoint(point(x2,y2))\n            tA.color='red'\n            tB.color='red'\n            repere = repere2({ xMin: -5, yMin: Math.min(-1, b-1), xMax: 5, yMax: Math.max(b+1, 2) })\n            texteCorr += `<br>${mathalea2d({ xmin: -5, ymin: Math.min(-1, b-1), xmax: 5, ymax: Math.max(b+1, 2), pixelsParCm: 20, scale: 0.7 }, repere, courbe2(x => a * x + b, { repere: repere, color: 'blue' }),tA,tB)}`\n          }\n          break\n\n        case 1: // f(0)=y1 f(x2)= y2 a et b entiers relatifs.\n          a = randint(-2, 2, 0)\n          b = randint(-5, 5, 0)\n          x1 = 0\n          y1 = b\n          x2 = randint(-5, 5, 0)\n          y2 = calcul(b + a * x2)\n          texteCorr = `Soit $f(x)=ax+b$. Nous savons que $f(0)=${y1}=b$.<br>`\n          texteCorr += `Donc $f(x)=ax${ecritureAlgebrique(y1)}$. En utilisant la donnée $f(${x2})=${y2}$ on obtient : $a \\\\times ${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(b)}=${y2}$ d'où $a \\\\times ${ecritureParentheseSiNegatif(x2)}=${y2}${ecritureAlgebrique(-b)}=${y2 - b}$ donc $a=\\\\dfrac{${y2 - b}}{${x2}}=${a}$.<br>`\n          texteCorr += `Donc $f(x)=${a}x${ecritureAlgebrique(b)}$.`\n          if (this.correctionDetaillee) {\n            tA=tracePoint(point(x1,y1))\n            tB=tracePoint(point(x2,y2))\n            tA.color='red'\n            tB.color='red'\n            repere = repere2({ xMin: -5, yMin: Math.min(-5 * a + b, 5 * a + b), xMax: 5, yMax: Math.max(-5 * a + b, 5 * a + b) })\n            texteCorr += `<br>${mathalea2d({ xmin: -5, ymin: Math.min(-5 * a + b, 5 * a + b), xmax: 5, ymax: Math.max(-5 * a + b, 5 * a + b), pixelsParCm: 20, scale: 0.7 }, repere, courbe2(x => a * x + b, { repere: repere, color: 'blue' }),tA,tB)}`\n          }\n          break\n\n        case 2: // f(x1)=y1 et f(x1+1)=y2\n          a = randint(-5, 5, 0)\n          b = randint(-5, 5, 0)\n          x1 = randint(-5, 5, [-1, 0])\n          y1 = calcul(a * x1 + b)\n          x2 = x1 + 1\n          y2 = calcul(b + a * x2)\n          texteCorr = `Soit $f(x)=ax+b$. On passe de $${x1}$ à $${x2}$ en ajoutant 1, donc la pente $a$ de la droite correspond à $f(${x2})-f(${x1})=${y2}-${ecritureParentheseSiNegatif(y1)}=${y2}${ecritureAlgebrique(-y1)}=${a}$.<br>`\n          texteCorr += `Donc $f(x)=${a}x+b$.<br>En utilisant la donnée $f(${x2})=${y2}$ on obtient : $${a} \\\\times ${ecritureParentheseSiNegatif(x2)}+b=${y2}$ d'où $${a * x2}+b=${y2}$ donc $b=${y2}${ecritureAlgebrique(-a * x2)}=${b}$.<br>`\n          texteCorr += `Donc $f(x)=${a}x${ecritureAlgebrique(b)}$.`\n          if (this.correctionDetaillee) {\n            tA=tracePoint(point(x1,y1))\n            tB=tracePoint(point(x2,y2))\n            tA.color='red'\n            tB.color='red'\n            repere = repere2({ xMin: -5, yMin: Math.min(-5 * a + b, 5 * a + b), xMax: 5, yMax: Math.max(-5 * a + b, 5 * a + b) })\n            texteCorr += `<br>${mathalea2d({ xmin: -5, ymin: Math.min(-5 * a + b, 5 * a + b), xmax: 5, ymax: Math.max(-5 * a + b, 5 * a + b), pixelsParCm: 20, scale: 0.7 }, repere, courbe2(x => a * x + b, { repere: repere, color: 'blue' }),tA,tB)}`\n          }\n          break\n\n        case 3: // f(x1)=y1 f(x2)=y2 a et b entiers\n          a = randint(-5, 5, 0)\n          b = randint(-5, 5, 0)\n          x1 = randint(-5, 5, 0)\n          y1 = calcul(a * x1 + b)\n          x2 = randint(-5, 5, [0, x1])\n          y2 = calcul(b + a * x2)\n          texteCorr = `Soit $f(x)=ax+b$. En utilisant les données de l'énoncé, on obtient : $f(${x1})=${y1}=a \\\\times ${ecritureParentheseSiNegatif(x1)}+b$ et $f(${x2})=${y2}=a \\\\times ${ecritureParentheseSiNegatif(x2)}+b$<br>`\n          texteCorr += `Donc d'une part : $b=${y1}+a\\\\times ${ecritureParentheseSiNegatif(-x1)}$ et d'autre part : $b=${y2}+a\\\\times ${ecritureParentheseSiNegatif(-x2)}$.<br>`\n          texteCorr += `Par identification, on obtient : $${y1}+a\\\\times ${ecritureParentheseSiNegatif(-x1)}=${y2}+a\\\\times ${ecritureParentheseSiNegatif(-x2)}$.<br>`\n          texteCorr += `On en déduit que $${y1}${ecritureAlgebrique(-y2)}=a(${x1}${ecritureAlgebrique(-x2)})$ soit $${y1 - y2}=${x1 - x2}a$.<br>`\n          texteCorr += `Donc $a=\\\\dfrac{${y1 - y2}}{${x1 - x2}}=${a}$.<br>`\n          texteCorr += `Donc $b=${y1}${ecritureAlgebrique(a)}\\\\times ${ecritureParentheseSiNegatif(-x1)}=${y1}${ecritureAlgebrique(-a * x1)}=${b}$.<br>`\n          texteCorr += `Donc $f(x)=${a}x${ecritureAlgebrique(b)}$.`\n          if (this.correctionDetaillee) {\n            tA=tracePoint(point(x1,y1))\n            tB=tracePoint(point(x2,y2))\n            tA.color='red'\n            tB.color='red'\n            repere = repere2({ xMin: -5, yMin: Math.min(-5 * a + b, 5 * a + b), xMax: 5, yMax: Math.max(-5 * a + b, 5 * a + b) })\n            texteCorr += `<br>${mathalea2d({ xmin: -5, ymin: Math.min(-5 * a + b, 5 * a + b), xmax: 5, ymax: Math.max(-5 * a + b, 5 * a + b), pixelsParCm: 20, scale: 0.7 }, repere, courbe2(x => a * x + b, { repere: repere, color: 'blue' }),tA,tB)}`\n          }\n          break\n\n        case 4:\n          x1 = randint(-5, 5, 0)\n          x2 = randint(-5, 5, [0, x1])\n          y1 = randint(-5, 5)\n          y2 = randint(-5, 5)\n          a = fraction(y2 - y1, x2 - x1)\n          b = a.multiplieEntier(-x1).ajouteEntier(y1)\n          console.log(b)\n          texteCorr = `Soit $f(x)=ax+b$. En utilisant les données de l'énoncé, on obtient : $f(${x1})=${y1}=a \\\\times ${ecritureParentheseSiNegatif(x1)}+b$ et $f(${x2})=${y2}=a \\\\times ${ecritureParentheseSiNegatif(x2)}+b$<br>`\n          texteCorr += `Donc d'une part : $b=${y1}+a\\\\times ${ecritureParentheseSiNegatif(-x1)}$ et d'autre part : $b=${y2}+a\\\\times ${ecritureParentheseSiNegatif(-x2)}$.<br>`\n          texteCorr += `Par identification, on obtient : $${y1}+a\\\\times ${ecritureParentheseSiNegatif(-x1)}=${y2}+a\\\\times ${ecritureParentheseSiNegatif(-x2)}$.<br>`\n          texteCorr += `On en déduit que $${y1}${ecritureAlgebrique(-y2)}=a(${x1}${ecritureAlgebrique(-x2)})$ soit $${y1 - y2}=${x1 - x2}a$.<br>`\n          texteCorr += `Donc $a=\\\\dfrac{${y1 - y2}}{${x1 - x2}}=${a.texFractionSimplifiee}$.<br>`\n          texteCorr += `Donc $b=${y1}+${a.texFractionSimplifiee}\\\\times ${ecritureParentheseSiNegatif(-x1)}=${fraction(y1 * a.denIrred, a.denIrred).texFraction}+${a.multiplieEntier(-x1).texFractionSimplifiee}=${b.texFractionSimplifiee}$.<br>`\n          texteCorr += `Donc $f(x)=${a.texFractionSimplifiee}x${b.simplifie().texFractionSignee}$.`\n          if (this.correctionDetaillee) {\n            tA=tracePoint(point(x1,y1))\n            tB=tracePoint(point(x2,y2))\n            tA.color='red'\n            tB.color='red'\n            a=calcul(a.num/a.den)\n            b=calcul(b.num/b.den)\n            repere = repere2({ xMin: -5, yMin: Math.round(Math.min(-5 * a + b, 5 * a + b)), xMax: 5, yMax: Math.round(Math.max(-5 * a + b, 5 * a + b)) })\n            texteCorr += `<br>${mathalea2d({ xmin: -5, ymin: Math.round(Math.min(-5 * a + b, 5 * a + b)), xmax: 5, ymax: Math.round(Math.max(-5 * a + b, 5 * a + b)), pixelsParCm: 20, scale: 0.7 }, repere, courbe2(x => a * x + b, { repere: repere, color: 'blue' }),tA,tB)}`\n          }\n          break\n      }\n      texte = `La fonction $f$ est une fonction affine et on sait que $f(${x1})=${y1}$ et $f(${x2})=${y2}$.<br>`\n      texte += 'Déterminer la forme algébrique de la fonction $f$.'\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Facile\\n2 : Difficile\\n3 : Très difficile']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}