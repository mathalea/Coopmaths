/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_3e_3A10_js"],{

/***/ "./src/js/exercices/3e/3A10.js":
/*!*************************************!*\
  !*** ./src/js/exercices/3e/3A10.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ DivisionEuclidienne_multiplesDiviseurs_Criteres)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst titre = 'Division Euclidienne - Diviseurs - Multiples';\n/**\n * 3A10 - Division Euclidienne; diviseurs, multiples, critères de divisibilité\n * Exercice bilan\n * @author Sébastien Lozano\n */\n\nfunction DivisionEuclidienne_multiplesDiviseurs_Criteres() {\n  'use strict';\n\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\n  this.titre = titre; // pas de différence entre la version html et la version latex pour la consigne\n\n  this.consigne = `Divisions euclidiennes - Diviseurs - Multiples.`; //sortieHtml ? this.spacing = 3 : this.spacing = 2;\n\n  sortieHtml ? this.spacing = 1 : this.spacing = 2; //sortieHtml ? this.spacingCorr = 2 : this.spacingCorr = 1;\n\n  sortieHtml ? this.spacingCorr = 2 : this.spacingCorr = 2;\n  this.nbQuestions = 5; //this.correctionDetailleeDisponible = true;\n\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n\n  this.nouvelleVersion = function (numeroExercice) {\n    let type_de_questions;\n\n    if (sortieHtml) {\n      // les boutons d'aide uniquement pour la version html\n      //this.boutonAide = '';\n      this.boutonAide = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.modalPdf)(numeroExercice, \"assets/pdf/FicheArithmetique-3A10.pdf\", \"Aide mémoire sur la division euclidienne (Sébastien Lozano)\", \"Aide mémoire\"); //this.boutonAide += modalVideo('conteMathsNombresPremiers','/videos/LesNombresPremiers.mp4','Petit conte mathématique','Intro Vidéo');\n    } else {// sortie LaTeX\n      }\n\n    ;\n    this.listeQuestions = []; // Liste de questions\n\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    this.contenu = ''; // Liste de questions\n\n    this.contenuCorrection = ''; // Liste de questions corrigées\n\n    let type_de_questions_disponibles = [1, 2, 3, 4, 5]; //let type_de_questions_disponibles = [1];\n\n    let listeTypeDeQuestions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaisonListesSansChangerOrdre)(type_de_questions_disponibles, this.nbQuestions);\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      type_de_questions = listeTypeDeQuestions[i];\n      var dividende;\n      var diviseur;\n      var quotient;\n      var reste;\n\n      switch (type_de_questions) {\n        case 1:\n          // plus grand reste dans une division euclidienne\n          diviseur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99);\n          texte = `Dire quel est le plus grand reste possible dans une division euclidienne par ${diviseur}.`;\n          texteCorr = `Si on divise par ${diviseur}, il ne peut pas rester plus de ${diviseur - 1}, sinon c'est qu'on peut encore ajouter au moins 1 fois ${diviseur} dans le dividende et donc 1 au quotient.`;\n          break;\n\n        case 2:\n          // quotient et reste d'une division euclidienne donnée\n          diviseur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99);\n          dividende = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1001, 99999);\n          quotient = Math.trunc(dividende / diviseur);\n          reste = dividende % diviseur;\n          texte = `On a ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(diviseur)}$\\\\times$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(quotient)} $+$ ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(reste)}`;\n          texte += `<br>`;\n          texte += `Écrire le quotient et le reste de la division euclidienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${diviseur}.`;\n          texteCorr = `Dans la division euclidienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${diviseur}, le quotient vaut ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(quotient)} et le reste ${reste}.`;\n          break;\n\n        case 3:\n          // caractérisation des multiples et diviseurs par le reste de la division euclidienne\n          dividende = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(101, 9999);\n          let rg_diviseur; // rang du diviseur choisi\n\n          if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(dividende).length % 2 == 0) {\n            //si il y a un nombre pair de diviseurs on prend le (n/2+1) eme\n            rg_diviseur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(dividende).length / 2 + 1;\n          } else {\n            // il y a nbre impair de diviseurs on prend le ((n-1)/2 +1) eme\n            rg_diviseur = ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(dividende).length - 1) / 2 + 1;\n          }\n\n          diviseur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(dividende)[rg_diviseur - 1]; // on choisit le diviseur central de dividende, ATTENTION rang des tableaux commence à 0 \n\n          let candidats_diviseurs = [diviseur - 1, diviseur, diviseur + 1]; // on prend l'entier précédent et le successeur de ce diviseur\n          // Faut-il que je conditionne pour éviter le diviseur 1 ?\n\n          candidats_diviseurs = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)(candidats_diviseurs); // on mélange le tableau\n\n          texte = 'Les trois divisions euclidiennes suivantes sont exactes : <br>';\n          texte += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[0])}$\\\\times$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(Math.trunc(dividende / candidats_diviseurs[0]))} $+$ ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende % candidats_diviseurs[0])}`;\n          texte += `<br>`;\n          texte += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[1])}$\\\\times$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(Math.trunc(dividende / candidats_diviseurs[1]))} $+$ ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende % candidats_diviseurs[1])}`;\n          texte += `<br>`;\n          texte += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[2])}$\\\\times$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(Math.trunc(dividende / candidats_diviseurs[2]))} $+$ ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende % candidats_diviseurs[2])}`;\n          texte += `<br>`;\n          texte += `Sans calculer, dire si les nombres ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[0])}; ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[1])}; ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[2])} sont des diviseurs de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)}. Justifier.`;\n          texteCorr = ``;\n\n          if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.egal)(dividende % candidats_diviseurs[0], 0)) {\n            //egal() est une fonction de JC pour éviter les problèmes de virgule flottante\n            texteCorr += `Le reste de la division euclienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[0])} vaut 0 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[0])} est un diviseur de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)}`;\n          } else {\n            texteCorr += `Le reste de la division euclienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[0])} ne vaut pas 0 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[0])} n'est pas un diviseur de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)}`;\n          }\n\n          texteCorr += `<br>`;\n\n          if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.egal)(dividende % candidats_diviseurs[1], 0)) {\n            //egal() est une fonction de JC pour éviter les problèmes de virgule flottante\n            texteCorr += `Le reste de la division euclienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[1])} vaut 0 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[1])} divise ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)}`;\n          } else {\n            texteCorr += `Le reste de la division euclienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[1])} ne vaut pas 0 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[1])} ne divise pas ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)}`;\n          }\n\n          texteCorr += `<br>`;\n\n          if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.egal)(dividende % candidats_diviseurs[2], 0)) {\n            //egal() est une fonction de JC pour éviter les problèmes de virgule flottante\n            texteCorr += `Le reste de la division euclienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[2])} vaut 0 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} est divisible par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[2])}`;\n          } else {\n            texteCorr += `Le reste de la division euclienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[2])} ne vaut pas 0 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} n'est pas divisible par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[2])}`;\n          }\n\n          texteCorr += `<br>`;\n          break;\n\n        case 4:\n          // vocabulaire diviseurs et multiples\n          // on déclare des tableaux utiles \n          let diviseurs = [];\n          let multiplicateurs = [];\n          let multiples = [];\n          let quotients = [];\n          let textes = [];\n          let textes_corr = []; // on tire au hasard 4 diviseurs différents entre 2 et 999 et 4 multiplicateurs différents entre 2 et 9 \n\n          diviseurs = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, [diviseurs[0]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, [diviseurs[0], diviseurs[1]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, [diviseurs[0], diviseurs[1], diviseurs[2]])];\n          multiplicateurs = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 9), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 9, [multiplicateurs[0]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 9, [multiplicateurs[0], multiplicateurs[1]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 9, [multiplicateurs[0], multiplicateurs[1], multiplicateurs[2]])]; // on calcule les multiples\n\n          for (let j = 0; j < 4; j++) {\n            multiples[j] = diviseurs[j] * multiplicateurs[j];\n            quotients[j] = multiples[j] / diviseurs[j];\n            diviseurs[j] = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(diviseurs[j]);\n            multiples[j] = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(multiples[j]);\n            quotients[j] = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(quotients[j]);\n          }\n\n          ; // on crée les phrases \n\n          textes[0] = `${diviseurs[0]} $\\\\ldots\\\\ldots\\\\ldots\\\\ldots$ ${multiples[0]}`;\n          textes_corr[0] = `${diviseurs[0]} est un diviseur de ${multiples[0]} car ${multiples[0]}=${diviseurs[0]}$\\\\times$${quotients[0]}`;\n          textes[1] = `${diviseurs[1]} $\\\\ldots\\\\ldots\\\\ldots\\\\ldots$ ${multiples[1]}`;\n          textes_corr[1] = `${diviseurs[1]} est un diviseur de ${multiples[1]} car ${multiples[1]}=${diviseurs[1]}$\\\\times$${quotients[1]}`;\n          textes[2] = `${multiples[2]} $\\\\ldots\\\\ldots\\\\ldots\\\\ldots$ ${diviseurs[2]}`;\n          textes_corr[2] = `${multiples[2]} est un multiple de ${diviseurs[2]} car ${multiples[2]}=${diviseurs[2]}$\\\\times$${quotients[2]}`;\n          textes[3] = `${multiples[3]} $\\\\ldots\\\\ldots\\\\ldots\\\\ldots$ ${diviseurs[3]}`;\n          textes_corr[3] = `${multiples[3]} est un multiple de ${diviseurs[3]} car ${multiples[3]}=${diviseurs[3]}$\\\\times$${quotients[3]}`; // on ajoute deux cas ni multiple ni diviseur\n          // on choisit deux nombres\n\n          let n1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, [diviseurs[0], diviseurs[1], diviseurs[2], diviseurs[3]]));\n          let p1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, [diviseurs[0], diviseurs[1], diviseurs[2], diviseurs[3], n1])); // on choisit un autre qui n'est pas dans la liste des diviseurs de n1\n\n          let n2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(n1)));\n          let p2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(p1)));\n          textes[4] = `${n1} $\\\\ldots\\\\ldots\\\\ldots\\\\ldots$ ${n2}`;\n          textes_corr[4] = `${n1} n'est ni un multiple ni un diviseur de ${n2} car ${n1}=${n2}$\\\\times$${Math.trunc(n1 / n2)}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(n1 % n2)} et ${n2}=${n1}$\\\\times$${Math.trunc(n2 / n1)}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(n2 % n1)}`;\n          textes[5] = `${p2} $\\\\ldots\\\\ldots\\\\ldots\\\\ldots$ ${p1}`;\n          textes_corr[5] = `${p2} n'est ni un multiple ni un diviseur de ${p1} car ${p1}=${p2}$\\\\times$${Math.trunc(p1 / p2)}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(p1 % p2)} et ${p2}=${p1}$\\\\times$${Math.trunc(p2 / p1)}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(p2 % p1)}`; // on mélange pour que l'ordre change!\n\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle2tableaux)(textes, textes_corr);\n          texte = `Avec la calculatrice, compléter chaque phrase avec \"est un diviseur de\" ou \"est un multiple de\" ou \"n'est ni un diviseur ni un multiple de\".`;\n          texte += `<br>`;\n          texteCorr = ``;\n\n          for (let j = 0; j < 5; j++) {\n            texte += textes[j];\n            texte += `<br>`;\n            texteCorr += textes_corr[j];\n            texteCorr += `<br>`;\n          }\n\n          ;\n          texte += textes[5]; //texte +=`<br>`;\n\n          texteCorr += textes_corr[5];\n          texteCorr += `<br>`;\n          break;\n\n        case 5:\n          // liste des diviseurs\n          // on définit un tableau pour les choix du nombre dont on veut les diviseurs\n          // 3 parmis 2,99 y compris les premiers et 1 parmis les entiers à 3 chiffres ayant au moins 8 diviseurs, il y en a 223 !\n          let tableau_de_choix = [];\n          tableau_de_choix = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99, [tableau_de_choix[0]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99, [tableau_de_choix[0], tableau_de_choix[1]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99, [tableau_de_choix[0], tableau_de_choix[1], tableau_de_choix[2]])];\n          let tableau_de_choix_3chiffres = [];\n\n          for (let m = 101; m < 999; m++) {\n            if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(m).length > 8) {\n              tableau_de_choix_3chiffres.push(m);\n            }\n\n            ;\n          }\n\n          ; // on ajoute un nombre à trois chiffre avec au moins 8 diviseurs dans les choix possibles\n\n          let rg_Nb_3chiffres = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, tableau_de_choix_3chiffres.length - 1);\n          tableau_de_choix.push(tableau_de_choix_3chiffres[rg_Nb_3chiffres]);\n          let N; // on déclare le nombre dont on va chercher les diviseurs\n\n          let rg_N; // pour tirer le rang du nombre dans le tableau des choix\n\n          rg_N = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, tableau_de_choix.length - 1);\n          N = tableau_de_choix[rg_N];\n          texte = `Écrire la liste de tous les diviseurs de ${N}.`;\n          texteCorr = `Pour trouver la liste des diviseurs de ${N} on cherche tous les produits de deux facteurs qui donnent ${N}. En écrivant toujours le plus petit facteur en premier.<br>`;\n          texteCorr += `Il est suffisant de chercher des diviseurs inférieurs au plus grand nombre dont le carré vaut ${N}, par exemple ici, ${Math.trunc(Math.sqrt(N))}$\\\\times$${Math.trunc(Math.sqrt(N))} = ${Math.trunc(Math.sqrt(N)) * Math.trunc(Math.sqrt(N))}<${N}`;\n          texteCorr += ` et ${Math.trunc(Math.sqrt(N)) + 1}$\\\\times$${Math.trunc(Math.sqrt(N)) + 1} = ${(Math.trunc(Math.sqrt(N)) + 1) * (Math.trunc(Math.sqrt(N)) + 1)}>${N} donc il suffit d'arrêter la recherche de facteur à ${Math.trunc(Math.sqrt(N))}.`;\n          texteCorr += ` En effet, si ${N} est le produit de deux entiers p$\\\\times$q avec p < q alors si p$\\\\times$p > ${N} c'est que q$\\\\times$q < ${N} mais dans ce cas p serait supérieur à q sinon p$\\\\times$q serait inférieur à ${N} ce qui ne doit pas être le cas.<br>`;\n\n          if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N).length % 2 == 0) {\n            //si il y a un nombre pair de diviseurs\n            for (let m = 0; m < (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N).length / 2; m++) {\n              texteCorr += `` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N)[m] + `$\\\\times$` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N)[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N).length - m - 1] + ` = ${N}<br>`;\n            }\n\n            ;\n          } else {\n            for (let m = 0; m < ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N).length - 1) / 2; m++) {\n              texteCorr += `` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N)[m] + `$\\\\times$` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N)[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N).length - m - 1] + `<br>`;\n            }\n\n            ;\n            texteCorr += `` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N).length - 1) / 2] + `$\\\\times$` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N).length - 1) / 2] + ` = ${N}<br>`;\n          }\n\n          ;\n          texteCorr += `Chacun des facteurs de la liste ci-dessus est un diviseur de ${N}.<br>`;\n          texteCorr += `La liste des diviseurs de ${N} est donc `;\n          texteCorr += `1`;\n\n          for (let w = 1; w < (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N).length; w++) {\n            texteCorr += ` ; ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeDiviseurs)(N)[w];\n          }\n\n          ;\n          texteCorr += `.`;\n          break;\n      }\n\n      ;\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n\n      cpt++;\n    }\n\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeQuestionsToContenu)(this);\n  }; //this.besoinFormulaireNumerique = ['Règle à travailler',5,\"1 : Produit de deux puissances de même base\\n2 : Quotient de deux puissances de même base\\n3 : Puissance de puissance\\n4 : Produit de puissances de même exposant\\n5 : Mélange\"]; \n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvZXhlcmNpY2VzLzNlLzNBMTAuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXRoYWxlYS8uL3NyYy9qcy9leGVyY2ljZXMvM2UvM0ExMC5qcz9jMDNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeGVyY2ljZSBmcm9tICcuLi9DbGFzc2VFeGVyY2ljZS5qcyc7XG5pbXBvcnQge2xpc3RlUXVlc3Rpb25zVG9Db250ZW51LGVnYWwscmFuZGludCxzaHVmZmxlLHNodWZmbGUydGFibGVhdXgsY29tYmluYWlzb25MaXN0ZXNTYW5zQ2hhbmdlck9yZHJlLG5vbWJyZV9hdmVjX2VzcGFjZSx0ZXh0ZV9lbl9jb3VsZXVyLG1vZGFsUGRmLGxpc3RlRGl2aXNldXJzfSBmcm9tICcuLi8uLi9tb2R1bGVzL291dGlscy5qcydcblxuZXhwb3J0IGNvbnN0IHRpdHJlID0gJ0RpdmlzaW9uIEV1Y2xpZGllbm5lIC0gRGl2aXNldXJzIC0gTXVsdGlwbGVzJ1xuXG4vKipcbiAqIDNBMTAgLSBEaXZpc2lvbiBFdWNsaWRpZW5uZTsgZGl2aXNldXJzLCBtdWx0aXBsZXMsIGNyaXTDqHJlcyBkZSBkaXZpc2liaWxpdMOpXG4gKiBFeGVyY2ljZSBiaWxhblxuICogQGF1dGhvciBTw6liYXN0aWVuIExvemFub1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEaXZpc2lvbkV1Y2xpZGllbm5lX211bHRpcGxlc0RpdmlzZXVyc19Dcml0ZXJlcygpIHtcblx0J3VzZSBzdHJpY3QnO1xuXHRFeGVyY2ljZS5jYWxsKHRoaXMpOyAvLyBIw6lyaXRhZ2UgZGUgbGEgY2xhc3NlIEV4ZXJjaWNlKClcblx0dGhpcy50aXRyZSA9IHRpdHJlO1xuXHQvLyBwYXMgZGUgZGlmZsOpcmVuY2UgZW50cmUgbGEgdmVyc2lvbiBodG1sIGV0IGxhIHZlcnNpb24gbGF0ZXggcG91ciBsYSBjb25zaWduZVxuXHR0aGlzLmNvbnNpZ25lID0gYERpdmlzaW9ucyBldWNsaWRpZW5uZXMgLSBEaXZpc2V1cnMgLSBNdWx0aXBsZXMuYDtcblx0Ly9zb3J0aWVIdG1sID8gdGhpcy5zcGFjaW5nID0gMyA6IHRoaXMuc3BhY2luZyA9IDI7XG5cdHNvcnRpZUh0bWwgPyB0aGlzLnNwYWNpbmcgPSAxIDogdGhpcy5zcGFjaW5nID0gMjtcblx0Ly9zb3J0aWVIdG1sID8gdGhpcy5zcGFjaW5nQ29yciA9IDIgOiB0aGlzLnNwYWNpbmdDb3JyID0gMTtcblx0c29ydGllSHRtbCA/IHRoaXMuc3BhY2luZ0NvcnIgPSAyIDogdGhpcy5zcGFjaW5nQ29yciA9IDI7XG5cdHRoaXMubmJRdWVzdGlvbnMgPSA1O1xuXHQvL3RoaXMuY29ycmVjdGlvbkRldGFpbGxlZURpc3BvbmlibGUgPSB0cnVlO1xuXHR0aGlzLm5iQ29scyA9IDE7XG5cdHRoaXMubmJDb2xzQ29yciA9IDE7XG5cblx0dGhpcy5ub3V2ZWxsZVZlcnNpb24gPSBmdW5jdGlvbiAobnVtZXJvRXhlcmNpY2UpIHtcblx0XHRsZXQgdHlwZV9kZV9xdWVzdGlvbnM7XG5cdFx0aWYgKHNvcnRpZUh0bWwpIHsgLy8gbGVzIGJvdXRvbnMgZCdhaWRlIHVuaXF1ZW1lbnQgcG91ciBsYSB2ZXJzaW9uIGh0bWxcblx0XHRcdC8vdGhpcy5ib3V0b25BaWRlID0gJyc7XG5cdFx0XHR0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFBkZihudW1lcm9FeGVyY2ljZSwgXCJhc3NldHMvcGRmL0ZpY2hlQXJpdGhtZXRpcXVlLTNBMTAucGRmXCIsIFwiQWlkZSBtw6ltb2lyZSBzdXIgbGEgZGl2aXNpb24gZXVjbGlkaWVubmUgKFPDqWJhc3RpZW4gTG96YW5vKVwiLCBcIkFpZGUgbcOpbW9pcmVcIik7XG5cdFx0XHQvL3RoaXMuYm91dG9uQWlkZSArPSBtb2RhbFZpZGVvKCdjb250ZU1hdGhzTm9tYnJlc1ByZW1pZXJzJywnL3ZpZGVvcy9MZXNOb21icmVzUHJlbWllcnMubXA0JywnUGV0aXQgY29udGUgbWF0aMOpbWF0aXF1ZScsJ0ludHJvIFZpZMOpbycpO1xuXHRcdH0gZWxzZSB7IC8vIHNvcnRpZSBMYVRlWFxuXHRcdH07XG5cblx0XHR0aGlzLmxpc3RlUXVlc3Rpb25zID0gW107IC8vIExpc3RlIGRlIHF1ZXN0aW9uc1xuXHRcdHRoaXMubGlzdGVDb3JyZWN0aW9ucyA9IFtdOyAvLyBMaXN0ZSBkZSBxdWVzdGlvbnMgY29ycmlnw6llc1xuXHRcdHRoaXMuY29udGVudSA9ICcnOyAvLyBMaXN0ZSBkZSBxdWVzdGlvbnNcblx0XHR0aGlzLmNvbnRlbnVDb3JyZWN0aW9uID0gJyc7IC8vIExpc3RlIGRlIHF1ZXN0aW9ucyBjb3JyaWfDqWVzXG5cblx0XHRsZXQgdHlwZV9kZV9xdWVzdGlvbnNfZGlzcG9uaWJsZXMgPSBbMSwgMiwgMywgNCwgNV07XG5cdFx0Ly9sZXQgdHlwZV9kZV9xdWVzdGlvbnNfZGlzcG9uaWJsZXMgPSBbMV07XG5cdFx0bGV0IGxpc3RlVHlwZURlUXVlc3Rpb25zID0gY29tYmluYWlzb25MaXN0ZXNTYW5zQ2hhbmdlck9yZHJlKHR5cGVfZGVfcXVlc3Rpb25zX2Rpc3BvbmlibGVzLCB0aGlzLm5iUXVlc3Rpb25zKTtcblxuXHRcdGZvciAobGV0IGkgPSAwLCB0ZXh0ZSwgdGV4dGVDb3JyLCBjcHQgPSAwOyBpIDwgdGhpcy5uYlF1ZXN0aW9ucyAmJiBjcHQgPCA1MDspIHtcblx0XHRcdHR5cGVfZGVfcXVlc3Rpb25zID0gbGlzdGVUeXBlRGVRdWVzdGlvbnNbaV07XG5cblx0XHRcdHZhciBkaXZpZGVuZGU7XG5cdFx0XHR2YXIgZGl2aXNldXI7XG5cdFx0XHR2YXIgcXVvdGllbnQ7XG5cdFx0XHR2YXIgcmVzdGU7XG5cblx0XHRcdHN3aXRjaCAodHlwZV9kZV9xdWVzdGlvbnMpIHtcblx0XHRcdFx0Y2FzZSAxOiAvLyBwbHVzIGdyYW5kIHJlc3RlIGRhbnMgdW5lIGRpdmlzaW9uIGV1Y2xpZGllbm5lXG5cdFx0XHRcdFx0ZGl2aXNldXIgPSByYW5kaW50KDIsIDk5KTtcblx0XHRcdFx0XHR0ZXh0ZSA9IGBEaXJlIHF1ZWwgZXN0IGxlIHBsdXMgZ3JhbmQgcmVzdGUgcG9zc2libGUgZGFucyB1bmUgZGl2aXNpb24gZXVjbGlkaWVubmUgcGFyICR7ZGl2aXNldXJ9LmA7XG5cdFx0XHRcdFx0dGV4dGVDb3JyID0gYFNpIG9uIGRpdmlzZSBwYXIgJHtkaXZpc2V1cn0sIGlsIG5lIHBldXQgcGFzIHJlc3RlciBwbHVzIGRlICR7ZGl2aXNldXIgLSAxfSwgc2lub24gYydlc3QgcXUnb24gcGV1dCBlbmNvcmUgYWpvdXRlciBhdSBtb2lucyAxIGZvaXMgJHtkaXZpc2V1cn0gZGFucyBsZSBkaXZpZGVuZGUgZXQgZG9uYyAxIGF1IHF1b3RpZW50LmA7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgMjogLy8gcXVvdGllbnQgZXQgcmVzdGUgZCd1bmUgZGl2aXNpb24gZXVjbGlkaWVubmUgZG9ubsOpZVxuXHRcdFx0XHRcdGRpdmlzZXVyID0gcmFuZGludCgyLCA5OSk7XG5cdFx0XHRcdFx0ZGl2aWRlbmRlID0gcmFuZGludCgxMDAxLCA5OTk5OSk7XG5cdFx0XHRcdFx0cXVvdGllbnQgPSBNYXRoLnRydW5jKGRpdmlkZW5kZSAvIGRpdmlzZXVyKTtcblx0XHRcdFx0XHRyZXN0ZSA9IGRpdmlkZW5kZSAlIGRpdmlzZXVyO1xuXG5cdFx0XHRcdFx0dGV4dGUgPSBgT24gYSAke25vbWJyZV9hdmVjX2VzcGFjZShkaXZpZGVuZGUpfT0ke25vbWJyZV9hdmVjX2VzcGFjZShkaXZpc2V1cil9JFxcXFx0aW1lcyQke25vbWJyZV9hdmVjX2VzcGFjZShxdW90aWVudCl9ICQrJCAke25vbWJyZV9hdmVjX2VzcGFjZShyZXN0ZSl9YDtcblx0XHRcdFx0XHR0ZXh0ZSArPSBgPGJyPmA7XG5cdFx0XHRcdFx0dGV4dGUgKz0gYMOJY3JpcmUgbGUgcXVvdGllbnQgZXQgbGUgcmVzdGUgZGUgbGEgZGl2aXNpb24gZXVjbGlkaWVubmUgZGUgJHtub21icmVfYXZlY19lc3BhY2UoZGl2aWRlbmRlKX0gcGFyICR7ZGl2aXNldXJ9LmA7XG5cdFx0XHRcdFx0dGV4dGVDb3JyID0gYERhbnMgbGEgZGl2aXNpb24gZXVjbGlkaWVubmUgZGUgJHtub21icmVfYXZlY19lc3BhY2UoZGl2aWRlbmRlKX0gcGFyICR7ZGl2aXNldXJ9LCBsZSBxdW90aWVudCB2YXV0ICR7bm9tYnJlX2F2ZWNfZXNwYWNlKHF1b3RpZW50KX0gZXQgbGUgcmVzdGUgJHtyZXN0ZX0uYDtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAzOiAvLyBjYXJhY3TDqXJpc2F0aW9uIGRlcyBtdWx0aXBsZXMgZXQgZGl2aXNldXJzIHBhciBsZSByZXN0ZSBkZSBsYSBkaXZpc2lvbiBldWNsaWRpZW5uZVxuXHRcdFx0XHRcdGRpdmlkZW5kZSA9IHJhbmRpbnQoMTAxLCA5OTk5KTtcblx0XHRcdFx0XHRsZXQgcmdfZGl2aXNldXI7IC8vIHJhbmcgZHUgZGl2aXNldXIgY2hvaXNpXG5cdFx0XHRcdFx0aWYgKGxpc3RlRGl2aXNldXJzKGRpdmlkZW5kZSkubGVuZ3RoICUgMiA9PSAwKSB7IC8vc2kgaWwgeSBhIHVuIG5vbWJyZSBwYWlyIGRlIGRpdmlzZXVycyBvbiBwcmVuZCBsZSAobi8yKzEpIGVtZVxuXHRcdFx0XHRcdFx0cmdfZGl2aXNldXIgPSBsaXN0ZURpdmlzZXVycyhkaXZpZGVuZGUpLmxlbmd0aCAvIDIgKyAxO1xuXHRcdFx0XHRcdH0gZWxzZSB7IC8vIGlsIHkgYSBuYnJlIGltcGFpciBkZSBkaXZpc2V1cnMgb24gcHJlbmQgbGUgKChuLTEpLzIgKzEpIGVtZVxuXHRcdFx0XHRcdFx0cmdfZGl2aXNldXIgPSAobGlzdGVEaXZpc2V1cnMoZGl2aWRlbmRlKS5sZW5ndGggLSAxKSAvIDIgKyAxO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRkaXZpc2V1ciA9IGxpc3RlRGl2aXNldXJzKGRpdmlkZW5kZSlbcmdfZGl2aXNldXIgLSAxXTsgLy8gb24gY2hvaXNpdCBsZSBkaXZpc2V1ciBjZW50cmFsIGRlIGRpdmlkZW5kZSwgQVRURU5USU9OIHJhbmcgZGVzIHRhYmxlYXV4IGNvbW1lbmNlIMOgIDAgXG5cdFx0XHRcdFx0bGV0IGNhbmRpZGF0c19kaXZpc2V1cnMgPSBbZGl2aXNldXIgLSAxLCBkaXZpc2V1ciwgZGl2aXNldXIgKyAxXTsgLy8gb24gcHJlbmQgbCdlbnRpZXIgcHLDqWPDqWRlbnQgZXQgbGUgc3VjY2Vzc2V1ciBkZSBjZSBkaXZpc2V1clxuXG5cdFx0XHRcdFx0Ly8gRmF1dC1pbCBxdWUgamUgY29uZGl0aW9ubmUgcG91ciDDqXZpdGVyIGxlIGRpdmlzZXVyIDEgP1xuXHRcdFx0XHRcdGNhbmRpZGF0c19kaXZpc2V1cnMgPSBzaHVmZmxlKGNhbmRpZGF0c19kaXZpc2V1cnMpOyAvLyBvbiBtw6lsYW5nZSBsZSB0YWJsZWF1XG5cdFx0XHRcdFx0dGV4dGUgPSAnTGVzIHRyb2lzIGRpdmlzaW9ucyBldWNsaWRpZW5uZXMgc3VpdmFudGVzIHNvbnQgZXhhY3RlcyA6IDxicj4nO1xuXHRcdFx0XHRcdHRleHRlICs9IGAke25vbWJyZV9hdmVjX2VzcGFjZShkaXZpZGVuZGUpfSA9ICR7bm9tYnJlX2F2ZWNfZXNwYWNlKGNhbmRpZGF0c19kaXZpc2V1cnNbMF0pfSRcXFxcdGltZXMkJHtub21icmVfYXZlY19lc3BhY2UoTWF0aC50cnVuYyhkaXZpZGVuZGUgLyBjYW5kaWRhdHNfZGl2aXNldXJzWzBdKSl9ICQrJCAke25vbWJyZV9hdmVjX2VzcGFjZShkaXZpZGVuZGUgJSBjYW5kaWRhdHNfZGl2aXNldXJzWzBdKX1gO1xuXHRcdFx0XHRcdHRleHRlICs9IGA8YnI+YDtcblx0XHRcdFx0XHR0ZXh0ZSArPSBgJHtub21icmVfYXZlY19lc3BhY2UoZGl2aWRlbmRlKX0gPSAke25vbWJyZV9hdmVjX2VzcGFjZShjYW5kaWRhdHNfZGl2aXNldXJzWzFdKX0kXFxcXHRpbWVzJCR7bm9tYnJlX2F2ZWNfZXNwYWNlKE1hdGgudHJ1bmMoZGl2aWRlbmRlIC8gY2FuZGlkYXRzX2RpdmlzZXVyc1sxXSkpfSAkKyQgJHtub21icmVfYXZlY19lc3BhY2UoZGl2aWRlbmRlICUgY2FuZGlkYXRzX2RpdmlzZXVyc1sxXSl9YDtcblx0XHRcdFx0XHR0ZXh0ZSArPSBgPGJyPmA7XG5cdFx0XHRcdFx0dGV4dGUgKz0gYCR7bm9tYnJlX2F2ZWNfZXNwYWNlKGRpdmlkZW5kZSl9ID0gJHtub21icmVfYXZlY19lc3BhY2UoY2FuZGlkYXRzX2RpdmlzZXVyc1syXSl9JFxcXFx0aW1lcyQke25vbWJyZV9hdmVjX2VzcGFjZShNYXRoLnRydW5jKGRpdmlkZW5kZSAvIGNhbmRpZGF0c19kaXZpc2V1cnNbMl0pKX0gJCskICR7bm9tYnJlX2F2ZWNfZXNwYWNlKGRpdmlkZW5kZSAlIGNhbmRpZGF0c19kaXZpc2V1cnNbMl0pfWA7XG5cdFx0XHRcdFx0dGV4dGUgKz0gYDxicj5gO1xuXHRcdFx0XHRcdHRleHRlICs9IGBTYW5zIGNhbGN1bGVyLCBkaXJlIHNpIGxlcyBub21icmVzICR7bm9tYnJlX2F2ZWNfZXNwYWNlKGNhbmRpZGF0c19kaXZpc2V1cnNbMF0pfTsgJHtub21icmVfYXZlY19lc3BhY2UoY2FuZGlkYXRzX2RpdmlzZXVyc1sxXSl9OyAke25vbWJyZV9hdmVjX2VzcGFjZShjYW5kaWRhdHNfZGl2aXNldXJzWzJdKX0gc29udCBkZXMgZGl2aXNldXJzIGRlICR7bm9tYnJlX2F2ZWNfZXNwYWNlKGRpdmlkZW5kZSl9LiBKdXN0aWZpZXIuYDtcblx0XHRcdFx0XHR0ZXh0ZUNvcnIgPSBgYDtcblx0XHRcdFx0XHRpZiAoZWdhbChkaXZpZGVuZGUgJSBjYW5kaWRhdHNfZGl2aXNldXJzWzBdLCAwKSkgeyAvL2VnYWwoKSBlc3QgdW5lIGZvbmN0aW9uIGRlIEpDIHBvdXIgw6l2aXRlciBsZXMgcHJvYmzDqG1lcyBkZSB2aXJndWxlIGZsb3R0YW50ZVxuXHRcdFx0XHRcdFx0dGV4dGVDb3JyICs9IGBMZSByZXN0ZSBkZSBsYSBkaXZpc2lvbiBldWNsaWVubmUgZGUgJHtub21icmVfYXZlY19lc3BhY2UoZGl2aWRlbmRlKX0gcGFyICR7bm9tYnJlX2F2ZWNfZXNwYWNlKGNhbmRpZGF0c19kaXZpc2V1cnNbMF0pfSB2YXV0IDAgZG9uYyAke25vbWJyZV9hdmVjX2VzcGFjZShjYW5kaWRhdHNfZGl2aXNldXJzWzBdKX0gZXN0IHVuIGRpdmlzZXVyIGRlICR7bm9tYnJlX2F2ZWNfZXNwYWNlKGRpdmlkZW5kZSl9YDtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dGV4dGVDb3JyICs9IGBMZSByZXN0ZSBkZSBsYSBkaXZpc2lvbiBldWNsaWVubmUgZGUgJHtub21icmVfYXZlY19lc3BhY2UoZGl2aWRlbmRlKX0gcGFyICR7bm9tYnJlX2F2ZWNfZXNwYWNlKGNhbmRpZGF0c19kaXZpc2V1cnNbMF0pfSBuZSB2YXV0IHBhcyAwIGRvbmMgJHtub21icmVfYXZlY19lc3BhY2UoY2FuZGlkYXRzX2RpdmlzZXVyc1swXSl9IG4nZXN0IHBhcyB1biBkaXZpc2V1ciBkZSAke25vbWJyZV9hdmVjX2VzcGFjZShkaXZpZGVuZGUpfWA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRleHRlQ29yciArPSBgPGJyPmA7XG5cdFx0XHRcdFx0aWYgKGVnYWwoZGl2aWRlbmRlICUgY2FuZGlkYXRzX2RpdmlzZXVyc1sxXSwgMCkpIHsgLy9lZ2FsKCkgZXN0IHVuZSBmb25jdGlvbiBkZSBKQyBwb3VyIMOpdml0ZXIgbGVzIHByb2Jsw6htZXMgZGUgdmlyZ3VsZSBmbG90dGFudGVcblx0XHRcdFx0XHRcdHRleHRlQ29yciArPSBgTGUgcmVzdGUgZGUgbGEgZGl2aXNpb24gZXVjbGllbm5lIGRlICR7bm9tYnJlX2F2ZWNfZXNwYWNlKGRpdmlkZW5kZSl9IHBhciAke25vbWJyZV9hdmVjX2VzcGFjZShjYW5kaWRhdHNfZGl2aXNldXJzWzFdKX0gdmF1dCAwIGRvbmMgJHtub21icmVfYXZlY19lc3BhY2UoY2FuZGlkYXRzX2RpdmlzZXVyc1sxXSl9IGRpdmlzZSAke25vbWJyZV9hdmVjX2VzcGFjZShkaXZpZGVuZGUpfWA7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRleHRlQ29yciArPSBgTGUgcmVzdGUgZGUgbGEgZGl2aXNpb24gZXVjbGllbm5lIGRlICR7bm9tYnJlX2F2ZWNfZXNwYWNlKGRpdmlkZW5kZSl9IHBhciAke25vbWJyZV9hdmVjX2VzcGFjZShjYW5kaWRhdHNfZGl2aXNldXJzWzFdKX0gbmUgdmF1dCBwYXMgMCBkb25jICR7bm9tYnJlX2F2ZWNfZXNwYWNlKGNhbmRpZGF0c19kaXZpc2V1cnNbMV0pfSBuZSBkaXZpc2UgcGFzICR7bm9tYnJlX2F2ZWNfZXNwYWNlKGRpdmlkZW5kZSl9YDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dGV4dGVDb3JyICs9IGA8YnI+YDtcblx0XHRcdFx0XHRpZiAoZWdhbChkaXZpZGVuZGUgJSBjYW5kaWRhdHNfZGl2aXNldXJzWzJdLCAwKSkgeyAvL2VnYWwoKSBlc3QgdW5lIGZvbmN0aW9uIGRlIEpDIHBvdXIgw6l2aXRlciBsZXMgcHJvYmzDqG1lcyBkZSB2aXJndWxlIGZsb3R0YW50ZVxuXHRcdFx0XHRcdFx0dGV4dGVDb3JyICs9IGBMZSByZXN0ZSBkZSBsYSBkaXZpc2lvbiBldWNsaWVubmUgZGUgJHtub21icmVfYXZlY19lc3BhY2UoZGl2aWRlbmRlKX0gcGFyICR7bm9tYnJlX2F2ZWNfZXNwYWNlKGNhbmRpZGF0c19kaXZpc2V1cnNbMl0pfSB2YXV0IDAgZG9uYyAke25vbWJyZV9hdmVjX2VzcGFjZShkaXZpZGVuZGUpfSBlc3QgZGl2aXNpYmxlIHBhciAke25vbWJyZV9hdmVjX2VzcGFjZShjYW5kaWRhdHNfZGl2aXNldXJzWzJdKX1gO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHR0ZXh0ZUNvcnIgKz0gYExlIHJlc3RlIGRlIGxhIGRpdmlzaW9uIGV1Y2xpZW5uZSBkZSAke25vbWJyZV9hdmVjX2VzcGFjZShkaXZpZGVuZGUpfSBwYXIgJHtub21icmVfYXZlY19lc3BhY2UoY2FuZGlkYXRzX2RpdmlzZXVyc1syXSl9IG5lIHZhdXQgcGFzIDAgZG9uYyAke25vbWJyZV9hdmVjX2VzcGFjZShkaXZpZGVuZGUpfSBuJ2VzdCBwYXMgZGl2aXNpYmxlIHBhciAke25vbWJyZV9hdmVjX2VzcGFjZShjYW5kaWRhdHNfZGl2aXNldXJzWzJdKX1gO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR0ZXh0ZUNvcnIgKz0gYDxicj5gO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIDQ6IC8vIHZvY2FidWxhaXJlIGRpdmlzZXVycyBldCBtdWx0aXBsZXNcblx0XHRcdFx0XHQvLyBvbiBkw6ljbGFyZSBkZXMgdGFibGVhdXggdXRpbGVzIFxuXHRcdFx0XHRcdGxldCBkaXZpc2V1cnMgPSBbXTtcblx0XHRcdFx0XHRsZXQgbXVsdGlwbGljYXRldXJzID0gW107XG5cdFx0XHRcdFx0bGV0IG11bHRpcGxlcyA9IFtdO1xuXHRcdFx0XHRcdGxldCBxdW90aWVudHMgPSBbXTtcblx0XHRcdFx0XHRsZXQgdGV4dGVzID0gW107XG5cdFx0XHRcdFx0bGV0IHRleHRlc19jb3JyID0gW107XG5cdFx0XHRcdFx0Ly8gb24gdGlyZSBhdSBoYXNhcmQgNCBkaXZpc2V1cnMgZGlmZsOpcmVudHMgZW50cmUgMiBldCA5OTkgZXQgNCBtdWx0aXBsaWNhdGV1cnMgZGlmZsOpcmVudHMgZW50cmUgMiBldCA5IFxuXHRcdFx0XHRcdGRpdmlzZXVycyA9IFtyYW5kaW50KDIsIDk5OSksIHJhbmRpbnQoMiwgOTk5LCBbZGl2aXNldXJzWzBdXSksIHJhbmRpbnQoMiwgOTk5LCBbZGl2aXNldXJzWzBdLCBkaXZpc2V1cnNbMV1dKSwgcmFuZGludCgyLCA5OTksIFtkaXZpc2V1cnNbMF0sIGRpdmlzZXVyc1sxXSwgZGl2aXNldXJzWzJdXSldO1xuXHRcdFx0XHRcdG11bHRpcGxpY2F0ZXVycyA9IFtyYW5kaW50KDIsIDkpLCByYW5kaW50KDIsIDksIFttdWx0aXBsaWNhdGV1cnNbMF1dKSwgcmFuZGludCgyLCA5LCBbbXVsdGlwbGljYXRldXJzWzBdLCBtdWx0aXBsaWNhdGV1cnNbMV1dKSwgcmFuZGludCgyLCA5LCBbbXVsdGlwbGljYXRldXJzWzBdLCBtdWx0aXBsaWNhdGV1cnNbMV0sIG11bHRpcGxpY2F0ZXVyc1syXV0pXTtcblx0XHRcdFx0XHQvLyBvbiBjYWxjdWxlIGxlcyBtdWx0aXBsZXNcblx0XHRcdFx0XHRmb3IgKGxldCBqID0gMDsgaiA8IDQ7IGorKykge1xuXHRcdFx0XHRcdFx0bXVsdGlwbGVzW2pdID0gZGl2aXNldXJzW2pdICogbXVsdGlwbGljYXRldXJzW2pdO1xuXHRcdFx0XHRcdFx0cXVvdGllbnRzW2pdID0gbXVsdGlwbGVzW2pdIC8gZGl2aXNldXJzW2pdO1xuXHRcdFx0XHRcdFx0ZGl2aXNldXJzW2pdID0gbm9tYnJlX2F2ZWNfZXNwYWNlKGRpdmlzZXVyc1tqXSk7XG5cdFx0XHRcdFx0XHRtdWx0aXBsZXNbal0gPSBub21icmVfYXZlY19lc3BhY2UobXVsdGlwbGVzW2pdKTtcblx0XHRcdFx0XHRcdHF1b3RpZW50c1tqXSA9IG5vbWJyZV9hdmVjX2VzcGFjZShxdW90aWVudHNbal0pO1xuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0Ly8gb24gY3LDqWUgbGVzIHBocmFzZXMgXG5cdFx0XHRcdFx0dGV4dGVzWzBdID0gYCR7ZGl2aXNldXJzWzBdfSAkXFxcXGxkb3RzXFxcXGxkb3RzXFxcXGxkb3RzXFxcXGxkb3RzJCAke211bHRpcGxlc1swXX1gO1xuXHRcdFx0XHRcdHRleHRlc19jb3JyWzBdID0gYCR7ZGl2aXNldXJzWzBdfSBlc3QgdW4gZGl2aXNldXIgZGUgJHttdWx0aXBsZXNbMF19IGNhciAke211bHRpcGxlc1swXX09JHtkaXZpc2V1cnNbMF19JFxcXFx0aW1lcyQke3F1b3RpZW50c1swXX1gO1xuXHRcdFx0XHRcdHRleHRlc1sxXSA9IGAke2RpdmlzZXVyc1sxXX0gJFxcXFxsZG90c1xcXFxsZG90c1xcXFxsZG90c1xcXFxsZG90cyQgJHttdWx0aXBsZXNbMV19YDtcblx0XHRcdFx0XHR0ZXh0ZXNfY29yclsxXSA9IGAke2RpdmlzZXVyc1sxXX0gZXN0IHVuIGRpdmlzZXVyIGRlICR7bXVsdGlwbGVzWzFdfSBjYXIgJHttdWx0aXBsZXNbMV19PSR7ZGl2aXNldXJzWzFdfSRcXFxcdGltZXMkJHtxdW90aWVudHNbMV19YDtcblx0XHRcdFx0XHR0ZXh0ZXNbMl0gPSBgJHttdWx0aXBsZXNbMl19ICRcXFxcbGRvdHNcXFxcbGRvdHNcXFxcbGRvdHNcXFxcbGRvdHMkICR7ZGl2aXNldXJzWzJdfWA7XG5cdFx0XHRcdFx0dGV4dGVzX2NvcnJbMl0gPSBgJHttdWx0aXBsZXNbMl19IGVzdCB1biBtdWx0aXBsZSBkZSAke2RpdmlzZXVyc1syXX0gY2FyICR7bXVsdGlwbGVzWzJdfT0ke2RpdmlzZXVyc1syXX0kXFxcXHRpbWVzJCR7cXVvdGllbnRzWzJdfWA7XG5cdFx0XHRcdFx0dGV4dGVzWzNdID0gYCR7bXVsdGlwbGVzWzNdfSAkXFxcXGxkb3RzXFxcXGxkb3RzXFxcXGxkb3RzXFxcXGxkb3RzJCAke2RpdmlzZXVyc1szXX1gO1xuXHRcdFx0XHRcdHRleHRlc19jb3JyWzNdID0gYCR7bXVsdGlwbGVzWzNdfSBlc3QgdW4gbXVsdGlwbGUgZGUgJHtkaXZpc2V1cnNbM119IGNhciAke211bHRpcGxlc1szXX09JHtkaXZpc2V1cnNbM119JFxcXFx0aW1lcyQke3F1b3RpZW50c1szXX1gO1xuXHRcdFx0XHRcdC8vIG9uIGFqb3V0ZSBkZXV4IGNhcyBuaSBtdWx0aXBsZSBuaSBkaXZpc2V1clxuXHRcdFx0XHRcdC8vIG9uIGNob2lzaXQgZGV1eCBub21icmVzXG5cdFx0XHRcdFx0bGV0IG4xID0gbm9tYnJlX2F2ZWNfZXNwYWNlKHJhbmRpbnQoMiwgOTk5LCBbZGl2aXNldXJzWzBdLCBkaXZpc2V1cnNbMV0sIGRpdmlzZXVyc1syXSwgZGl2aXNldXJzWzNdXSkpO1xuXHRcdFx0XHRcdGxldCBwMSA9IG5vbWJyZV9hdmVjX2VzcGFjZShyYW5kaW50KDIsIDk5OSwgW2RpdmlzZXVyc1swXSwgZGl2aXNldXJzWzFdLCBkaXZpc2V1cnNbMl0sIGRpdmlzZXVyc1szXSwgbjFdKSk7XG5cdFx0XHRcdFx0Ly8gb24gY2hvaXNpdCB1biBhdXRyZSBxdWkgbidlc3QgcGFzIGRhbnMgbGEgbGlzdGUgZGVzIGRpdmlzZXVycyBkZSBuMVxuXHRcdFx0XHRcdGxldCBuMiA9IG5vbWJyZV9hdmVjX2VzcGFjZShyYW5kaW50KDIsIDk5OSwgbGlzdGVEaXZpc2V1cnMobjEpKSk7XG5cdFx0XHRcdFx0bGV0IHAyID0gbm9tYnJlX2F2ZWNfZXNwYWNlKHJhbmRpbnQoMiwgOTk5LCBsaXN0ZURpdmlzZXVycyhwMSkpKTtcblx0XHRcdFx0XHR0ZXh0ZXNbNF0gPSBgJHtuMX0gJFxcXFxsZG90c1xcXFxsZG90c1xcXFxsZG90c1xcXFxsZG90cyQgJHtuMn1gO1xuXHRcdFx0XHRcdHRleHRlc19jb3JyWzRdID0gYCR7bjF9IG4nZXN0IG5pIHVuIG11bHRpcGxlIG5pIHVuIGRpdmlzZXVyIGRlICR7bjJ9IGNhciAke24xfT0ke24yfSRcXFxcdGltZXMkJHtNYXRoLnRydW5jKG4xIC8gbjIpfSske3RleHRlX2VuX2NvdWxldXIobjEgJSBuMil9IGV0ICR7bjJ9PSR7bjF9JFxcXFx0aW1lcyQke01hdGgudHJ1bmMobjIgLyBuMSl9KyR7dGV4dGVfZW5fY291bGV1cihuMiAlIG4xKX1gO1xuXHRcdFx0XHRcdHRleHRlc1s1XSA9IGAke3AyfSAkXFxcXGxkb3RzXFxcXGxkb3RzXFxcXGxkb3RzXFxcXGxkb3RzJCAke3AxfWA7XG5cdFx0XHRcdFx0dGV4dGVzX2NvcnJbNV0gPSBgJHtwMn0gbidlc3QgbmkgdW4gbXVsdGlwbGUgbmkgdW4gZGl2aXNldXIgZGUgJHtwMX0gY2FyICR7cDF9PSR7cDJ9JFxcXFx0aW1lcyQke01hdGgudHJ1bmMocDEgLyBwMil9KyR7dGV4dGVfZW5fY291bGV1cihwMSAlIHAyKX0gZXQgJHtwMn09JHtwMX0kXFxcXHRpbWVzJCR7TWF0aC50cnVuYyhwMiAvIHAxKX0rJHt0ZXh0ZV9lbl9jb3VsZXVyKHAyICUgcDEpfWA7XG5cdFx0XHRcdFx0Ly8gb24gbcOpbGFuZ2UgcG91ciBxdWUgbCdvcmRyZSBjaGFuZ2UhXG5cdFx0XHRcdFx0c2h1ZmZsZTJ0YWJsZWF1eCh0ZXh0ZXMsIHRleHRlc19jb3JyKTtcblx0XHRcdFx0XHR0ZXh0ZSA9IGBBdmVjIGxhIGNhbGN1bGF0cmljZSwgY29tcGzDqXRlciBjaGFxdWUgcGhyYXNlIGF2ZWMgXCJlc3QgdW4gZGl2aXNldXIgZGVcIiBvdSBcImVzdCB1biBtdWx0aXBsZSBkZVwiIG91IFwibidlc3QgbmkgdW4gZGl2aXNldXIgbmkgdW4gbXVsdGlwbGUgZGVcIi5gO1xuXHRcdFx0XHRcdHRleHRlICs9IGA8YnI+YDtcblx0XHRcdFx0XHR0ZXh0ZUNvcnIgPSBgYDtcblx0XHRcdFx0XHRmb3IgKGxldCBqID0gMDsgaiA8IDU7IGorKykge1xuXHRcdFx0XHRcdFx0dGV4dGUgKz0gdGV4dGVzW2pdO1xuXHRcdFx0XHRcdFx0dGV4dGUgKz0gYDxicj5gO1xuXHRcdFx0XHRcdFx0dGV4dGVDb3JyICs9IHRleHRlc19jb3JyW2pdO1xuXHRcdFx0XHRcdFx0dGV4dGVDb3JyICs9IGA8YnI+YDtcblx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdHRleHRlICs9IHRleHRlc1s1XTtcblx0XHRcdFx0XHQvL3RleHRlICs9YDxicj5gO1xuXHRcdFx0XHRcdHRleHRlQ29yciArPSB0ZXh0ZXNfY29ycls1XTtcblx0XHRcdFx0XHR0ZXh0ZUNvcnIgKz0gYDxicj5gO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIDU6IC8vIGxpc3RlIGRlcyBkaXZpc2V1cnNcblx0XHRcdFx0XHQvLyBvbiBkw6lmaW5pdCB1biB0YWJsZWF1IHBvdXIgbGVzIGNob2l4IGR1IG5vbWJyZSBkb250IG9uIHZldXQgbGVzIGRpdmlzZXVyc1xuXHRcdFx0XHRcdC8vIDMgcGFybWlzIDIsOTkgeSBjb21wcmlzIGxlcyBwcmVtaWVycyBldCAxIHBhcm1pcyBsZXMgZW50aWVycyDDoCAzIGNoaWZmcmVzIGF5YW50IGF1IG1vaW5zIDggZGl2aXNldXJzLCBpbCB5IGVuIGEgMjIzICFcblx0XHRcdFx0XHRsZXQgdGFibGVhdV9kZV9jaG9peCA9IFtdO1xuXHRcdFx0XHRcdHRhYmxlYXVfZGVfY2hvaXggPSBbcmFuZGludCgyLCA5OSksIHJhbmRpbnQoMiwgOTksIFt0YWJsZWF1X2RlX2Nob2l4WzBdXSksIHJhbmRpbnQoMiwgOTksIFt0YWJsZWF1X2RlX2Nob2l4WzBdLCB0YWJsZWF1X2RlX2Nob2l4WzFdXSksIHJhbmRpbnQoMiwgOTksIFt0YWJsZWF1X2RlX2Nob2l4WzBdLCB0YWJsZWF1X2RlX2Nob2l4WzFdLCB0YWJsZWF1X2RlX2Nob2l4WzJdXSldO1xuXHRcdFx0XHRcdGxldCB0YWJsZWF1X2RlX2Nob2l4XzNjaGlmZnJlcyA9IFtdO1xuXHRcdFx0XHRcdGZvciAobGV0IG0gPSAxMDE7IG0gPCA5OTk7IG0rKykge1xuXHRcdFx0XHRcdFx0aWYgKGxpc3RlRGl2aXNldXJzKG0pLmxlbmd0aCA+IDgpIHtcblx0XHRcdFx0XHRcdFx0dGFibGVhdV9kZV9jaG9peF8zY2hpZmZyZXMucHVzaChtKTtcblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0XHQvLyBvbiBham91dGUgdW4gbm9tYnJlIMOgIHRyb2lzIGNoaWZmcmUgYXZlYyBhdSBtb2lucyA4IGRpdmlzZXVycyBkYW5zIGxlcyBjaG9peCBwb3NzaWJsZXNcblx0XHRcdFx0XHRsZXQgcmdfTmJfM2NoaWZmcmVzID0gcmFuZGludCgwLCAodGFibGVhdV9kZV9jaG9peF8zY2hpZmZyZXMubGVuZ3RoIC0gMSkpO1xuXHRcdFx0XHRcdHRhYmxlYXVfZGVfY2hvaXgucHVzaCh0YWJsZWF1X2RlX2Nob2l4XzNjaGlmZnJlc1tyZ19OYl8zY2hpZmZyZXNdKTtcblx0XHRcdFx0XHRsZXQgTjsgLy8gb24gZMOpY2xhcmUgbGUgbm9tYnJlIGRvbnQgb24gdmEgY2hlcmNoZXIgbGVzIGRpdmlzZXVyc1xuXHRcdFx0XHRcdGxldCByZ19OOyAvLyBwb3VyIHRpcmVyIGxlIHJhbmcgZHUgbm9tYnJlIGRhbnMgbGUgdGFibGVhdSBkZXMgY2hvaXhcblx0XHRcdFx0XHRyZ19OID0gcmFuZGludCgwLCAodGFibGVhdV9kZV9jaG9peC5sZW5ndGggLSAxKSk7XG5cdFx0XHRcdFx0TiA9IHRhYmxlYXVfZGVfY2hvaXhbcmdfTl07XG5cdFx0XHRcdFx0dGV4dGUgPSBgw4ljcmlyZSBsYSBsaXN0ZSBkZSB0b3VzIGxlcyBkaXZpc2V1cnMgZGUgJHtOfS5gO1xuXHRcdFx0XHRcdHRleHRlQ29yciA9IGBQb3VyIHRyb3V2ZXIgbGEgbGlzdGUgZGVzIGRpdmlzZXVycyBkZSAke059IG9uIGNoZXJjaGUgdG91cyBsZXMgcHJvZHVpdHMgZGUgZGV1eCBmYWN0ZXVycyBxdWkgZG9ubmVudCAke059LiBFbiDDqWNyaXZhbnQgdG91am91cnMgbGUgcGx1cyBwZXRpdCBmYWN0ZXVyIGVuIHByZW1pZXIuPGJyPmA7XG5cdFx0XHRcdFx0dGV4dGVDb3JyICs9IGBJbCBlc3Qgc3VmZmlzYW50IGRlIGNoZXJjaGVyIGRlcyBkaXZpc2V1cnMgaW5mw6lyaWV1cnMgYXUgcGx1cyBncmFuZCBub21icmUgZG9udCBsZSBjYXJyw6kgdmF1dCAke059LCBwYXIgZXhlbXBsZSBpY2ksICR7TWF0aC50cnVuYyhNYXRoLnNxcnQoTikpfSRcXFxcdGltZXMkJHtNYXRoLnRydW5jKE1hdGguc3FydChOKSl9ID0gJHtNYXRoLnRydW5jKE1hdGguc3FydChOKSkgKiBNYXRoLnRydW5jKE1hdGguc3FydChOKSl9PCR7Tn1gO1xuXHRcdFx0XHRcdHRleHRlQ29yciArPSBgIGV0ICR7TWF0aC50cnVuYyhNYXRoLnNxcnQoTikpICsgMX0kXFxcXHRpbWVzJCR7TWF0aC50cnVuYyhNYXRoLnNxcnQoTikpICsgMX0gPSAkeyhNYXRoLnRydW5jKE1hdGguc3FydChOKSkgKyAxKSAqIChNYXRoLnRydW5jKE1hdGguc3FydChOKSkgKyAxKX0+JHtOfSBkb25jIGlsIHN1ZmZpdCBkJ2FycsOqdGVyIGxhIHJlY2hlcmNoZSBkZSBmYWN0ZXVyIMOgICR7TWF0aC50cnVuYyhNYXRoLnNxcnQoTikpfS5gO1xuXHRcdFx0XHRcdHRleHRlQ29yciArPSBgIEVuIGVmZmV0LCBzaSAke059IGVzdCBsZSBwcm9kdWl0IGRlIGRldXggZW50aWVycyBwJFxcXFx0aW1lcyRxIGF2ZWMgcCA8IHEgYWxvcnMgc2kgcCRcXFxcdGltZXMkcCA+ICR7Tn0gYydlc3QgcXVlIHEkXFxcXHRpbWVzJHEgPCAke059IG1haXMgZGFucyBjZSBjYXMgcCBzZXJhaXQgc3Vww6lyaWV1ciDDoCBxIHNpbm9uIHAkXFxcXHRpbWVzJHEgc2VyYWl0IGluZsOpcmlldXIgw6AgJHtOfSBjZSBxdWkgbmUgZG9pdCBwYXMgw6p0cmUgbGUgY2FzLjxicj5gO1xuXHRcdFx0XHRcdGlmIChsaXN0ZURpdmlzZXVycyhOKS5sZW5ndGggJSAyID09IDApIHsgLy9zaSBpbCB5IGEgdW4gbm9tYnJlIHBhaXIgZGUgZGl2aXNldXJzXG5cdFx0XHRcdFx0XHRmb3IgKGxldCBtID0gMDsgbSA8IChsaXN0ZURpdmlzZXVycyhOKS5sZW5ndGggLyAyKTsgbSsrKSB7XG5cdFx0XHRcdFx0XHRcdHRleHRlQ29yciArPSBgYCArIGxpc3RlRGl2aXNldXJzKE4pW21dICsgYCRcXFxcdGltZXMkYCArIGxpc3RlRGl2aXNldXJzKE4pWyhsaXN0ZURpdmlzZXVycyhOKS5sZW5ndGggLSBtIC0gMSldICsgYCA9ICR7Tn08YnI+YDtcblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGZvciAobGV0IG0gPSAwOyBtIDwgKChsaXN0ZURpdmlzZXVycyhOKS5sZW5ndGggLSAxKSAvIDIpOyBtKyspIHtcblx0XHRcdFx0XHRcdFx0dGV4dGVDb3JyICs9IGBgICsgbGlzdGVEaXZpc2V1cnMoTilbbV0gKyBgJFxcXFx0aW1lcyRgICsgbGlzdGVEaXZpc2V1cnMoTilbKGxpc3RlRGl2aXNldXJzKE4pLmxlbmd0aCAtIG0gLSAxKV0gKyBgPGJyPmA7XG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0dGV4dGVDb3JyICs9IGBgICsgbGlzdGVEaXZpc2V1cnMoTilbKGxpc3RlRGl2aXNldXJzKE4pLmxlbmd0aCAtIDEpIC8gMl0gKyBgJFxcXFx0aW1lcyRgICsgbGlzdGVEaXZpc2V1cnMoTilbKGxpc3RlRGl2aXNldXJzKE4pLmxlbmd0aCAtIDEpIC8gMl0gKyBgID0gJHtOfTxicj5gO1xuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0dGV4dGVDb3JyICs9IGBDaGFjdW4gZGVzIGZhY3RldXJzIGRlIGxhIGxpc3RlIGNpLWRlc3N1cyBlc3QgdW4gZGl2aXNldXIgZGUgJHtOfS48YnI+YDtcblx0XHRcdFx0XHR0ZXh0ZUNvcnIgKz0gYExhIGxpc3RlIGRlcyBkaXZpc2V1cnMgZGUgJHtOfSBlc3QgZG9uYyBgO1xuXHRcdFx0XHRcdHRleHRlQ29yciArPSBgMWA7XG5cdFx0XHRcdFx0Zm9yIChsZXQgdyA9IDE7IHcgPCBsaXN0ZURpdmlzZXVycyhOKS5sZW5ndGg7IHcrKykge1xuXHRcdFx0XHRcdFx0dGV4dGVDb3JyICs9IGAgOyBgICsgbGlzdGVEaXZpc2V1cnMoTilbd107XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0XHR0ZXh0ZUNvcnIgKz0gYC5gO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0fTtcblxuXHRcdFx0aWYgKHRoaXMubGlzdGVRdWVzdGlvbnMuaW5kZXhPZih0ZXh0ZSkgPT0gLTEpIHsgLy8gU2kgbGEgcXVlc3Rpb24gbidhIGphbWFpcyDDqXTDqSBwb3PDqWUsIG9uIGVuIGNyw6nDqSB1bmUgYXV0cmVcblx0XHRcdFx0dGhpcy5saXN0ZVF1ZXN0aW9ucy5wdXNoKHRleHRlKTtcblx0XHRcdFx0dGhpcy5saXN0ZUNvcnJlY3Rpb25zLnB1c2godGV4dGVDb3JyKTtcblx0XHRcdFx0aSsrO1xuXHRcdFx0fVxuXHRcdFx0Y3B0Kys7XG5cdFx0fVxuXG5cdFx0bGlzdGVRdWVzdGlvbnNUb0NvbnRlbnUodGhpcyk7XG5cdH07XG5cdC8vdGhpcy5iZXNvaW5Gb3JtdWxhaXJlTnVtZXJpcXVlID0gWydSw6hnbGUgw6AgdHJhdmFpbGxlcicsNSxcIjEgOiBQcm9kdWl0IGRlIGRldXggcHVpc3NhbmNlcyBkZSBtw6ptZSBiYXNlXFxuMiA6IFF1b3RpZW50IGRlIGRldXggcHVpc3NhbmNlcyBkZSBtw6ptZSBiYXNlXFxuMyA6IFB1aXNzYW5jZSBkZSBwdWlzc2FuY2VcXG40IDogUHJvZHVpdCBkZSBwdWlzc2FuY2VzIGRlIG3Dqm1lIGV4cG9zYW50XFxuNSA6IE3DqWxhbmdlXCJdOyBcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQURBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBekpBO0FBQ0E7QUF5SkE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/exercices/3e/3A10.js\n");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice() {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigneCorrection = '';\n  this.listeQuestions = [];\n  this.listeCorrections = [];\n  this.introduction = '';\n  this.contenu = '';\n  this.contenuCorrection = '';\n  this.nbQuestions = 10;\n  this.nbCols = 2;\n  this.nbColsCorr = 2;\n  this.spacing = 1;\n  this.spacingCorr = 1;\n  this.beamer = false;\n  this.besoinFormulaireNumerique = false; // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n\n  this.besoinFormulaireTexte = false; // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n\n  this.besoinFormulaireCaseACocher = false; // Sinon this.besoinFormulaireCaseACocher = [texte];\n\n  this.consigneModifiable = true;\n  this.nbQuestionsModifiable = true;\n  this.nbColsModifiable = true;\n  this.nbColsCorrModifiable = true;\n  this.spacingModifiable = true;\n  this.spacingCorrModifiable = true;\n  this.correctionDetailleeDisponible = false;\n  this.correctionDetaillee = true;\n  this.video = '';\n  this.boutonAide = false;\n  this.tailleDiaporama = 50; // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  this.pasDeVersionLatex = false;\n  this.qcm = false; // Pour les exercices de type QCM : contient un tableau.\n\n  this.qcmDisponible = false; // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n\n  this.modeQcm = false; // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false; // pas d'interface par défaut pour les figures MG32\n\n  this.nouvelleVersion = function (numeroExercice) {};\n\n  this.listePackages = []; // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWF0aGFsZWEvLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzP2RiNDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogIENsYXNzZSBwYXJlbnRlIGRlIHRvdXMgbGVzIGV4ZXJjaWNlc1xuICpcbiAqIEBBdXRldXIgUsOpbWkgQW5nb3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRXhlcmNpY2UgKCkge1xuICAvLyBDbGFzc2UgcGFyZW50ZSBkZSB0b3VzIGxlcyBleGVyY2ljZXMgcXVpIHNlcm9udCBjcsOpw6lzXG4gIHRoaXMudGl0cmUgPSAnJ1xuICB0aGlzLmNvbnNpZ25lID0gJydcbiAgdGhpcy5jb25zaWduZUNvcnJlY3Rpb24gPSAnJ1xuICB0aGlzLmxpc3RlUXVlc3Rpb25zID0gW11cbiAgdGhpcy5saXN0ZUNvcnJlY3Rpb25zID0gW11cbiAgdGhpcy5pbnRyb2R1Y3Rpb24gPSAnJ1xuICB0aGlzLmNvbnRlbnUgPSAnJ1xuICB0aGlzLmNvbnRlbnVDb3JyZWN0aW9uID0gJydcbiAgdGhpcy5uYlF1ZXN0aW9ucyA9IDEwXG4gIHRoaXMubmJDb2xzID0gMlxuICB0aGlzLm5iQ29sc0NvcnIgPSAyXG4gIHRoaXMuc3BhY2luZyA9IDFcbiAgdGhpcy5zcGFjaW5nQ29yciA9IDFcbiAgdGhpcy5iZWFtZXIgPSBmYWxzZVxuXG4gIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IGZhbHNlIC8vIFNpbm9uIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IFt0ZXh0ZSxtYXgsdG9vbHRpcCBmYWN1bHRhdGlmXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlVGV4dGUgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVUZXh0ZSA9IFt0ZXh0ZSx0b29sdGlwXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlQ2FzZUFDb2NoZXIgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVDYXNlQUNvY2hlciA9IFt0ZXh0ZV07XG4gIHRoaXMuY29uc2lnbmVNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iUXVlc3Rpb25zTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5uYkNvbHNNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iQ29sc0NvcnJNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdDb3JyTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5jb3JyZWN0aW9uRGV0YWlsbGVlRGlzcG9uaWJsZSA9IGZhbHNlXG4gIHRoaXMuY29ycmVjdGlvbkRldGFpbGxlZSA9IHRydWVcbiAgdGhpcy52aWRlbyA9ICcnXG4gIHRoaXMuYm91dG9uQWlkZSA9IGZhbHNlXG4gIHRoaXMudGFpbGxlRGlhcG9yYW1hID0gNTAgLy8gVGFpbGxlIGVuIHBpeGVscyBwb3VyIGxlIGNhbGN1bCBjaHJvbm9tw6l0csOpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsVGV4dGVDb3VydChudW1lcm9FeGVyY2ljZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFRleHRlTG9uZyhudW1lcm9FeGVyY2ljZSx0aXRyZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFlvdXR1YmUobnVtZXJvRXhlcmNpY2UsaWRfeW91dHViZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlIC0gVmlkw6lvXCIsaWNvbmU9XCJ5b3V0dWJlXCIpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsUGRmKG51bWVyb0V4ZXJjaWNlLHVybF9wZGYsdGV4dGU9XCJBaWRlXCIsbGFiZWxfYm91dG9uPVwiQWlkZSAtIFBERlwiLGljb25lPVwiZmlsZSBwZGZcIilcbiAgLy8gdGhpcy52c3BhY2UgPSAtMSAvL0Fqb3V0ZSB1biBcXHZzcGFjZXstMWNtfSBhdmFudCBsJ8Opbm9uY8OpIGNlIHF1aSBwZXV0IMOqdHJlIHByYXRpcXVlIHBvdXIgZGVzIGV4ZXJjaWNlcyBhdmVjIGRlcyBmaWd1cmVzLlxuICB0aGlzLnBhc0RlVmVyc2lvbkxhdGV4ID0gZmFsc2VcbiAgdGhpcy5xY20gPSBmYWxzZSAvLyBQb3VyIGxlcyBleGVyY2ljZXMgZGUgdHlwZSBRQ00gOiBjb250aWVudCB1biB0YWJsZWF1LlxuICB0aGlzLnFjbURpc3BvbmlibGUgPSBmYWxzZSAvLyBQb3VyIGFqb3V0ZXIgdW5lIGNhc2Ugw6AgY29jaGVyIE1vZGUgUUNNIHF1aSBwZXJtZXQgZGUgY2hhbmdlciBsZSBzdGF0dXQgZGUgdGhpcy5tb2RlUWNtXG4gIHRoaXMubW9kZVFjbSA9IGZhbHNlIC8vIFBvdXIgY2hvaXNpciBsYSB2ZXJzaW9uIFFDTSBvdSBsYSB2ZXJzaW9uIGNsYXNzaXF1ZSAoZmFsc2UgPSB2ZXJzaW9uIGNsYXNzaXF1ZSlcblxuICB0aGlzLm1nMzJFZGl0YWJsZSA9IGZhbHNlIC8vIHBhcyBkJ2ludGVyZmFjZSBwYXIgZMOpZmF1dCBwb3VyIGxlcyBmaWd1cmVzIE1HMzJcbiAgdGhpcy5ub3V2ZWxsZVZlcnNpb24gPSBmdW5jdGlvbiAobnVtZXJvRXhlcmNpY2UpIHt9XG4gIHRoaXMubGlzdGVQYWNrYWdlcyA9IFtdIC8vIHN0cmluZyBvdSBsaXN0ZSBkZSBzdHJpbmcgYXZlYyBsZSBub20gZGVzIHBhY2thZ2VzIHNww6ljaWZpcXVlcyDDoCBham91dGVyIGRhbnMgbGUgcHLDqWFtYnVsZVxuICAvLyB0aGlzLnR5cGVFeGVyY2ljZSA9IFwiTUczMlwiO1xuICAvLyB0aGlzLmRpbWVuc2lvbnNEaXZNZzMyID0gWzUwMCwgNDUwXTtcbiAgLy8gdGhpcy50eXBlRXhlcmNpY2UgPSBcIlNjcmF0Y2hcIlxuICAvLyB0aGlzLnFjbT1bXCJRdWVscyBzb250IGxlcyBub21icmVzIHBhaXJzID9cIixbNywxMiwzNCwyNSwxOF0sWzAsMSwxLDAsMV1dID0+W1wiTGEgcXVlc3Rpb25cIixbbGVzIHLDqXBvbnNlc10sW2Jvbm5lPTEgZXQgbWF1dmFpc2U9MF1dXG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/exercices/ClasseExercice.js\n");

/***/ })

}]);