(self.webpackChunkmathalea=self.webpackChunkmathalea||[]).push([[53695,25523],{25523:(e,t,n)=>{"use strict";function r(){this.titre="",this.boutonAide=!1,this.consigne="",this.consigneCorrection="",this.introduction="",this.listeQuestions=[],this.listeCorrections=[],this.contenu="",this.contenuCorrection="",this.autoCorrection=[],this.tableauSolutionsDuQcm=[],this.spacing=1,this.spacingCorr=1,this.pasDeVersionLatex=!1,this.listePackages=[],this.consigneModifiable=!0,this.nbQuestionsModifiable=!0,this.nbCols=1,this.nbColsCorr=1,this.nbColsModifiable=!0,this.nbColsCorrModifiable=!0,this.spacingModifiable=!0,this.spacingCorrModifiable=!0,this.beamer=!1,this.tailleDiaporama=1,this.nbQuestions=10,this.pointsParQuestions=1,this.correctionDetailleeDisponible=!1,this.correctionDetaillee=!0,this.correctionIsCachee=!1,this.video="",this.interactif=!1,this.interactifObligatoire=!1,this.besoinFormulaireNumerique=!1,this.besoinFormulaireTexte=!1,this.besoinFormulaireCaseACocher=!1,this.besoinFormulaire2Numerique=!1,this.besoinFormulaire2Texte=!1,this.besoinFormulaire2CaseACocher=!1,this.besoinFormulaire3Numerique=!1,this.besoinFormulaire3Texte=!1,this.besoinFormulaire3CaseACocher=!1,this.besoinFormulaire4Numerique=!1,this.besoinFormulaire4Texte=!1,this.besoinFormulaire4CaseACocher=!1,this.mg32Editable=!1,this.listeArguments=[],this.nouvelleVersion=function(e){},this.questionJamaisPosee=function(e,...t){0===e&&(this.listeArguments=[]);let n="";for(const r of t)void 0!==r&&(n+=r.toString());return!(this.listeArguments.indexOf(n)>-1)&&(this.listeArguments.push(n),!0)}}n.r(t),n.d(t,{default:()=>r})},53695:(e,t,n)=>{"use strict";n.r(t),n.d(t,{dateDePublication:()=>ke,default:()=>Je,titre:()=>Ye});var r=n(25523),a=n(22380),o=n(25482),i=n(6622),s=n(77139),c=n(77074),u=n(56018),l=n(35282),g=n(31432),h=n.n(g);const d={changeFormatFunctionMap:{}},p={"+":"Combine","-":"Combine","*":"Multiply","/":"Divide"},T={"=":"equal to",">":"greater than",">=":"greater than or equal to","<":"less than","<=":"less than or equal to"};function b(e){return e.filter((e=>e.changeGroup))}function E(e){if(e.oldNode)return b(e.oldNode);if(e.oldEquation){return[...b(e.oldEquation.leftNode),...b(e.oldEquation.rightNode)]}return null}function m(e){if(e.newNode)return b(e.newNode);if(e.newEquation){return[...b(e.newEquation.leftNode),...b(e.newEquation.rightNode)]}return null}function x(e,t=!1){e.forEach((e=>{e.changeGroup=void 0}));let n=e.map((e=>e.toTex()));return t||(n=[...new Set(n)]),0===n.length?"":1===n.length?n[0]:`${n.slice(0,-1).join(", ")} \\text{ and } ${n.slice(-1)}`}d.formatChange=function(e){if(!(e.changeType in d.changeFormatFunctionMap))return console.error(e.changeType+" does not have a change function!"),e.changeType;let t=(0,d.changeFormatFunctionMap[e.changeType])(e);return t||`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.ABSOLUTE_VALUE]=function(e){const t=E(e);if(1!==t.length)return null;const n=t[0];if(!h().isFunction(n,"abs"))return null;return`\\text{Take the absolute value of } ${n.args[0].toTex()}`},d.changeFormatFunctionMap[l.ChangeTypes.ADD_COEFFICIENT_OF_ONE]=function(e){const t=E(e),n=m(e);if(0===t.length||n.length!==t.length)return null;return`\\text{Rewrite } ${x(t)} \\text{ as } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.ADD_EXPONENT_OF_ONE]=function(e){const t=E(e),n=m(e);if(0===t.length||n.length!==t.length)return null;return`\\text{Rewrite } ${x(t)} \\text{ as } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.ADD_FRACTIONS]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;const r=t[0];if(!h().isOperator(r)||"+"!==r.op||r.args.length>3)return null;return`\\text{Add } ${x(r.args,!0)} \\text{ to get } ${n[0].toTex()}`},d.changeFormatFunctionMap[l.ChangeTypes.ADD_NUMERATORS]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.ADD_POLYNOMIAL_TERMS]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;const r=t[0];if(!h().isOperator(r)||"+"!==r.op)return null;return`\\text{Add } ${x(r.args,!0)} \\text{ to get } ${n[0].toTex()}`},d.changeFormatFunctionMap[l.ChangeTypes.ADD_TO_BOTH_SIDES]=function(e){const t=m(e);if(2!==t.length)return null;return`\\text{Add } ${t[0].toTex()} \\text{ to both sides}`},d.changeFormatFunctionMap[l.ChangeTypes.BREAK_UP_FRACTION]=function(e){const t=E(e);if(1!==t.length)return null;return`\\text{Break up the fraction } ${x(t)}`},d.changeFormatFunctionMap[l.ChangeTypes.CANCEL_EXPONENT]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.CANCEL_EXPONENT_AND_ROOT]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.CANCEL_MINUSES]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.CANCEL_ROOT]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.CANCEL_TERMS]=function(e){const t=E(e);if(1!==t.length)return null;return`\\text{Cancel } ${x(t)} \\text{ from the numerator and denominator}`},d.changeFormatFunctionMap[l.ChangeTypes.COLLECT_AND_COMBINE_LIKE_TERMS]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.COLLECT_EXPONENTS]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.COLLECT_LIKE_TERMS]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.COMBINE_NUMERATORS]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.COMBINE_UNDER_ROOT]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.COMMON_DENOMINATOR]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.CONVERT_INTEGER_TO_FRACTION]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`\\text{Change } ${x(t)} \\text{ to } ${x(n)} \\text{ so that it has a shared denominator}`},d.changeFormatFunctionMap[l.ChangeTypes.CONVERT_MULTIPLICATION_TO_EXPONENT]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`\\text{Rewrite } ${x(t)} \\text{ as } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.DISTRIBUTE]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.DISTRIBUTE_NEGATIVE_ONE]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.DISTRIBUTE_NTH_ROOT]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.DIVIDE_FRACTION_FOR_ADDITION]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`\\text{Divide } ${x(t)} \\text{ so it's in the decimal form } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.DIVIDE_FROM_BOTH_SIDES]=function(e){const t=m(e);if(2!==t.length)return null;return`\\text{Divide both sides by } ${t[0].toTex()}`},d.changeFormatFunctionMap[l.ChangeTypes.DIVISION_BY_NEGATIVE_ONE]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`${x(t)} \\text{ divided by -1 is } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.DIVISION_BY_ONE]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`${x(t)} \\text{ divided by 1 is } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.EVALUATE_DISTRIBUTED_NTH_ROOT]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.FACTOR_INTO_PRIMES]=function(e){const t=E(e),n=m(e);if(1!==t.length||n.length<t.length||n.length>5)return null;return`\\text{Factor } ${x(t)} \\text{ into its prime factors: } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.GROUP_COEFFICIENTS]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.GROUP_TERMS_BY_ROOT]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.MULTIPLY_BOTH_SIDES_BY_INVERSE_FRACTION]=function(e){const t=m(e);if(2!==t.length)return null;return`\\text{Multiply both sides by the inverse } ${t[0].toTex()}`},d.changeFormatFunctionMap[l.ChangeTypes.MULTIPLY_BOTH_SIDES_BY_NEGATIVE_ONE]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.MULTIPLY_BY_INVERSE]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`\\text{Rewrite } ${x(t,!0)} \\text{ as } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.MULTIPLY_BY_ZERO]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`\\text{Rewrite } ${x(t)} \\text{ as } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.MULTIPLY_COEFFICIENTS]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;const r=t[0];if(!h().isOperator(r)||"*"!==r.op)return null;return`\\text{Multiply the coefficients } ${x(t,!0)} \\text{ to get } ${n[0].toTex()}`},d.changeFormatFunctionMap[l.ChangeTypes.MULTIPLY_DENOMINATORS]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.MULTIPLY_FRACTIONS]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;const r=t[0];if(!h().isOperator(r)||"*"!==r.op)return null;return`\\text{Multiply } ${x(r.args,!0)} \\text{ to get } ${n[0].toTex()}`},d.changeFormatFunctionMap[l.ChangeTypes.MULTIPLY_NUMERATORS]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.MULTIPLY_POLYNOMIAL_TERMS]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;const r=t[0];if(!h().isOperator(r)||"*"!==r.op)return null;return`\\text{Multiply } ${x(r.args,!0)} \\text{ to get } ${n[0].toTex()}`},d.changeFormatFunctionMap[l.ChangeTypes.MULTIPLY_TO_BOTH_SIDES]=function(e){const t=m(e);if(2!==t.length)return null;return`\\text{Multiply both sides by } ${t[0].toTex()}`},d.changeFormatFunctionMap[l.ChangeTypes.NO_CHANGE]=function(){return null},d.changeFormatFunctionMap[l.ChangeTypes.NTH_ROOT_VALUE]=function(e){const t=E(e);if(1!==t.length)return null;return`\\text{Take the root of } ${x(t)}`},d.changeFormatFunctionMap[l.ChangeTypes.REARRANGE_COEFF]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.REDUCE_EXPONENT_BY_ZERO]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`\\text{Rewrite } ${x(t)} \\text{ as } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.REDUCE_ZERO_NUMERATOR]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`\\text{Rewrite } ${x(t)} \\text{ as } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.REMOVE_ADDING_ZERO]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.REMOVE_EXPONENT_BY_ONE]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`\\text{Rewrite } ${x(t)} \\text{ as } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.REMOVE_MULTIPLYING_BY_NEGATIVE_ONE]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`\\text{Rewrite } ${x(t)} \\text{ as } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.REMOVE_MULTIPLYING_BY_ONE]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`\\text{Rewrite } ${x(t)} \\text{ as } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.RESOLVE_DOUBLE_MINUS]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.SIMPLIFY_ARITHMETIC]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;const r=t[0];if(!h().isOperator(r)||-1==="+-*/^".indexOf(r.op))return null;const a=x(r.args,!0),o=n[0].toTex();return`\\text{${p[r.op]} } ${a} \\text{ to get } ${o}`},d.changeFormatFunctionMap[l.ChangeTypes.SIMPLIFY_DIVISION]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`\\text{Rewrite } ${x(t)} \\text{ as } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.SIMPLIFY_FRACTION]=function(e){const t=E(e),n=m(e);if(1!==t.length||1!==n.length)return null;return`\\text{Simplify } ${x(t)} \\text{ to } ${x(n)}`},d.changeFormatFunctionMap[l.ChangeTypes.SIMPLIFY_LEFT_SIDE]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.SIMPLIFY_RIGHT_SIDE]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.SIMPLIFY_SIGNS]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.SIMPLIFY_TERMS]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.STATEMENT_IS_FALSE]=function(e){const t=e.newEquation.comparator;return`\\text{The left side is not ${T[t]} the right side}`},d.changeFormatFunctionMap[l.ChangeTypes.STATEMENT_IS_TRUE]=function(e){const t=e.newEquation.comparator;return`\\text{The left side is ${T[t]} the right side}`},d.changeFormatFunctionMap[l.ChangeTypes.SUBTRACT_FROM_BOTH_SIDES]=function(e){const t=m(e);if(2!==t.length)return null;return`\\text{Subtract } ${t[0].toTex()} \\text{ from both sides}`},d.changeFormatFunctionMap[l.ChangeTypes.SWAP_SIDES]=function(e){return`\\text{${d.ChangeText[e.changeType]}}`},d.changeFormatFunctionMap[l.ChangeTypes.UNARY_MINUS_TO_NEGATIVE_ONE]=function(e){const t=E(e),n=m(e);if(0===t.length||n.length!==t.length)return null;return`\\text{Rewrite } ${x(t)} \\text{ as } ${x(n)}`},d.ChangeText={ABSOLUTE_VALUE:"Take the absolute value",ADD_COEFFICIENT_OF_ONE:"Rewrite term to have a coefficient of 1",ADD_EXPONENT_OF_ONE:"Rewrite term to have an exponent of 1",ADD_FRACTIONS:"Add the fractions together",ADD_NUMERATORS:"Add the terms in the numerator",ADD_POLYNOMIAL_TERMS:"Add the polynomial terms together",ADD_TO_BOTH_SIDES:"Add the term to both sides",BREAK_UP_FRACTION:"Break up the fraction",CANCEL_EXPONENT:"Cancel the exponent",CANCEL_EXPONENT_AND_ROOT:"Cancel the exponent and the root",CANCEL_MINUSES:"Cancel the negatives in the numerator and denominator",CANCEL_ROOT:"Cancel the root",CANCEL_TERMS:"Cancel like terms in the numerator and denominator",COLLECT_AND_COMBINE_LIKE_TERMS:"Collect and combine like terms",COLLECT_EXPONENTS:"Collect the exponents",COLLECT_LIKE_TERMS:"Identify the like terms and group them together",COMBINE_NUMERATORS:"Combine the numerators with a shared denominator",COMMON_DENOMINATOR:"Multiply the terms so they share a common denominator",COMBINE_UNDER_ROOT:"Combine terms with the same root",CONVERT_INTEGER_TO_FRACTION:"Change the number to a fraction with the same denominator",CONVERT_MULTIPLICATION_TO_EXPONENT:"Change repeatedly multiplying a term to an exponent",DISTRIBUTE:"Distribute into the parentheses",DISTRIBUTE_NEGATIVE_ONE:"Distribute -1 into the parentheses",DISTRIBUTE_NTH_ROOT:"Distribute the root into each term",DIVIDE_FRACTION_FOR_ADDITION:"Divide any fractions to convert it to decimal form",DIVIDE_FROM_BOTH_SIDES:"Divide the term from both sides",DIVISION_BY_NEGATIVE_ONE:"Rewrite any term divided by -1 as the negative of the term",DIVISION_BY_ONE:"Rewrite any term divided by 1 as just the term",EVALUATE_DISTRIBUTED_NTH_ROOT:"Take the root of all the terms",FACTOR_INTO_PRIMES:"Factor the number into its prime factors",GROUP_COEFFICIENTS:"Group the coefficients together",GROUP_TERMS_BY_ROOT:"Group repeating factors",MULTIPLY_BOTH_SIDES_BY_INVERSE_FRACTION:"Multiply both sides by the inverse of the fraction",MULTIPLY_BOTH_SIDES_BY_NEGATIVE_ONE:"Multiply both sides by -1",MULTIPLY_BY_INVERSE:"Rewrite division as multiplication by the inverse",MULTIPLY_BY_ZERO:"Rewrite any term multiplied by 0 as 0",MULTIPLY_COEFFICIENTS:"Multiply the coefficients together",MULTIPLY_DENOMINATORS:"Multiply the terms in the denominators",MULTIPLY_FRACTIONS:"Multiply the fractions together",MULTIPLY_NUMERATORS:"Multiply the terms in the numerators",MULTIPLY_POLYNOMIAL_TERMS:"Multiply the polynomial terms together",MULTIPLY_TO_BOTH_SIDES:"Multiply the term to both sides",NTH_ROOT_VALUE:"Take the root of the number",NO_CHANGE:"No change",REARRANGE_COEFF:"Move the coefficient to the front of the term",REDUCE_ZERO_NUMERATOR:"Rewrite zero divided by anything as zero",REMOVE_EXPONENT_BY_ONE:"Rewrite any term to the power of 1 as itself",REDUCE_EXPONENT_BY_ZERO:"Rewrite any term to the power of 0 as 1",REMOVE_ADDING_ZERO:"Remove zero when adding",REMOVE_MULTIPLYING_BY_NEGATIVE_ONE:"Rewrite any term multiplied by -1 as the negative of the term",REMOVE_MULTIPLYING_BY_ONE:"Rewrite any term multiplied 1 as just the term",RESOLVE_DOUBLE_MINUS:"Change subtracting a negative to addition",SIMPLIFY_ARITHMETIC:"Evaluate the arithmetic",SIMPLIFY_DIVISION:"Rewrite the chain of division",SIMPLIFY_FRACTION:"Simplify by dividing the top and bottom by the greatest common denominator",SIMPLIFY_LEFT_SIDE:"Simplify the left hand side",SIMPLIFY_RIGHT_SIDE:"Simplify the right hand side",SIMPLIFY_SIGNS:"Move the negative sign to the numerator",SIMPLIFY_TERMS:"Simplify after distributing",STATEMENT_IS_FALSE:"The statement is False",STATEMENT_IS_TRUE:"The statement is True",SUBTRACT_FROM_BOTH_SIDES:"Subtract the term from both sides",SWAP_SIDES:"Swap sides",UNARY_MINUS_TO_NEGATIVE_ONE:"Rewrite minus as a coefficient of -1"};n(13786);let I,_,S,f,O,C,N,M,F,R,y,$,A,L,D,w,P,v,U,Y,k,B,q,V,G,j,H,X,Q,Z,K,z,W,J,ee,te,ne,re,ae,oe,ie,se,ce,ue,le,ge,he,de,pe,Te,be,Ee,me,xe,Ie,_e,Se,fe,Oe,Ce,Ne,Me,Fe,Re,ye,$e,Ae,Le,De,we,Pe,ve=e=>e;const Ue=(0,i.U)(s.$);Ue.config({number:"Fraction"});const Ye="Calculs algébriques",ke="02/01/2021";function Be(e,t=!1){return t&&(console.log("node.toString({ parenthesis: 'keep' })",e.toString({parenthesis:"keep"})),console.log("node",e)),e=(e=(e=(e=(0,c.Qc)(e.toString({parenthesis:"keep"}))).transform((function(e,t,n){return e.isOperatorNode&&"/"===e.op&&(e.args[0].isParenthesisNode&&(e.args[0]=e.args[0].content),e.args[1].isParenthesisNode&&(e.args[1]=e.args[1].content)),e.isOperatorNode&&"+"===e.op&&(e.args[0].isParenthesisNode&&(e.args[0]=e.args[0].content),e.args[1].isParenthesisNode&&(e.args[1]=e.args[1].content)),e.isOperatorNode&&"-"===e.op&&(e.args[0].isParenthesisNode&&(e.args[0]=e.args[0].content),"unaryMinus"!==e.fn&&e.args[1].isParenthesisNode&&e.args[1].content.isOperatorNode&&("/"===e.args[1].content.op||"*"===e.args[1].content.op&&(!e.args[1].content.args[0].isOperatorNode||e.args[1].content.args[0].isOperatorNode&&"unaryMinus"!==e.args[1].content.args[0].fn))&&(e.args[1]=e.args[1].content)),e.isOperatorNode&&"*"===e.op&&(e.args[0].isParenthesisNode&&(!e.args[0].content.isOperatorNode||e.args[0].content.isOperatorNode&&"/"===e.args[0].content.op)&&(e.args[0]=e.args[0].content,e.implicit=!1),e.args[1].isParenthesisNode&&(!e.args[1].content.isOperatorNode||e.args[1].content.isOperatorNode&&"/"===e.args[1].content.op)&&(e.args[1]=e.args[1].content,e.implicit=!1)),e}))).transform((function(e,t,n){if("OperatorNode"===e.type)switch(e.op){case"+":if("-"===e.args[1].op)return new c.$X("-","subtract",[e.args[0],e.args[1].args[0]]);if("*"===e.args[1].op&&"-"===e.args[1].args[0].op){const t=new c.$X("*","multiply",[e.args[1].args[0].args[0],e.args[1].args[1]]);return new c.$X("-","subtract",[e.args[0],t])}if("/"===e.args[1].op){if(e.args[1].args[0].isOperatorNode&&"unaryMinus"===e.args[1].args[0].fn){if(!e.args[1].args[1].isOperatorNode||e.args[1].args[1].isOperatorNode&&"unaryMinus"!==e.args[1].args[1].fn){const t=new c.$X("/","divide",[e.args[1].args[0].args[0],e.args[1].args[1]]);return new c.$X("-","subtract",[e.args[0],t])}return e}return e}return e;case"/":if(null===n||n.isParenthesisNode||"*"===n.op){if(e.args[0].isOperatorNode&&"unaryMinus"===e.args[0].fn){if(!e.args[1].isOperatorNode||e.args[1].isOperatorNode&&"unaryMinus"!==e.args[1].fn){const t=new c.$X("/","divide",[e.args[0].args[0],e.args[1]]);return new c.$X("-","unaryMinus",[t])}return e}return e}return e;default:return e}return e}))).transform((function(e,n,r){if(t&&(console.log("********",e.toString(),"********\n",e),console.log(" * node.fn : ",e.fn),null!==r&&console.log(" * parent.op : ",r.op),void 0!==e.args&&console.log(" * node.args[0].type : ",e.args[0].type),void 0!==e.args&&e.args.length>1&&console.log(" * node.args[1].type : ",e.args[1].type),void 0!==e.args&&console.log(" * node.args[0].op : ",e.args[0].op),void 0!==e.args&&e.args.length>1&&console.log(" * node.args[1].op : ",e.args[1].op)),"OperatorNode"===e.type)switch(e.op){case"*":return"unaryMinus"===e.args[1].fn?(e.args[1]=new c.Dd(e.args[1]),e):(e.args[1].isConstantNode||e.args[1].isOperatorNode&&"/"===e.args[1].op||e.args[1].isSymbolNode&&e.args[0].isOperatorNode&&void 0!==e.args[0].args[1]&&e.args[0].args[1].isSymbolNode||e.args[0].isSymbolNode&&e.args[1].isSymbolNode||(e.implicit=!0),e);case"+":if("-"===e.args[1].op)return new c.$X("-","subtract",[e.args[0],e.args[1].args[0]]);if("/"===e.args[1].op){if(e.args[1].args[0].isOperatorNode&&"unaryMinus"===e.args[1].args[0].fn){if(!e.args[1].args[1].isOperatorNode||e.args[1].args[1].isOperatorNode&&"unaryMinus"!==e.args[1].args[1].fn){const t=new c.$X("/","divide",[e.args[1].args[0].args[0],e.args[1].args[1]]);return new c.$X("-","subtract",[e.args[0],t])}return e}return e}return e;case"/":if(null===r||r.isParenthesisNode||"*"===r.op){if(e.args[0].isOperatorNode&&"unaryMinus"===e.args[0].fn){if(!e.args[1].isOperatorNode||e.args[1].isOperatorNode&&"unaryMinus"!==e.args[1].fn){const t=new c.$X("/","divide",[e.args[0].args[0],e.args[1]]);return new c.$X("-","unaryMinus",[t])}return e}return e}return e;default:return e}return e})),t&&(console.log("***********RESULTATS***********\n node.toString() : ",e.toString()),console.log("node.toTex() : ",e.toTex()),console.log("node.toTex() avec formattage : ",e.toTex({parenthesis:"auto"}).replaceAll("\\cdot","\\times")),console.log("node.toTex() : ",e)),e.toTex({parenthesis:"keep"}).replaceAll("\\cdot","\\times").replaceAll(".","{,}").replaceAll("\\frac","\\dfrac")}function qe(e="(a*x+b)*(c*x-d)",t={a:1,b:2,c:3,d:-6},n=!1){return(0,c.og)(e,[{l:"1*n",r:"n"},{l:"-1*n",r:"-n"},{l:"n/1",r:"n"},{l:"c/c",r:"1"},{l:"0*v",r:"0"},{l:"0+v",r:"v"}],t)}function Ve(e={a:!1,b:!1,c:!0,d:"fraction(a,10)+fraction(b,100)",test:"b!=0 and b>a>c"},t=!1){const n={};let r=0,a=!0;do{r++;for(const t of Object.keys(e))"boolean"==typeof e[t]?n[t]=(0,c.ku)("(pickRandom([-1,1]))^(n)*randomInt(1,10)",{n:e[t]}):"test"!==t&&(n[t]=(0,c.ku)(e[t],n));void 0!==e.test&&(a=(0,c.ku)(e.test,n))}while(!a&&r<1e3);return 1e3===r&&window.notify("Attention ! 1000 essais dépassés.\n Trop de contraintes.\n Le résultat ne vérifiera pas le test."),n}function Ge(e,t=[]){return e.forEach((function(e,n){return 0===e.substeps.length&&t.push(e),Ge(e.substeps,t)})),t}function je(e="4/3+5/6",t=!1,n=!1){const r=Ge(t?(0,l.factor)(e):(0,l.simplifyExpression)(e));n&&(console.log("* steps :"),console.log(r));let a=0;const o=[];let i="";r.forEach((function(e,t){const r=e.changeType;null!==e.oldNode&&(e.oldNode.toString()===e.newNode.toString()?"REMOVE_ADDING_ZEROS"!==r&&(a=(a+1)%2):a=0);const s=null!==e.oldNode?Be(e.oldNode):"",c=Be(e.newNode);n&&(console.log(r),console.log(c.toString())),0===t&&(i=`${s}`),n&&console.log(c);const u={COLLECT_LIKE_TERMS:String.raw(I||(I=ve`\text{Regrouper les termes}`)),MULTIPLY_DENOMINATORS:String.raw(_||(_=ve`\text{Calculer les dénominateurs}`)),ADD_EXPONENT_OF_ONE:String.raw(S||(S=ve`\text{Ajouter l'exposant 1}`)),COLLECT_POLYNOMIAL_EXPONENTS:String.raw(f||(f=ve`\text{Ajouter l'exposant 1}`))};let l={COMMON_DENOMINATOR:String.raw(O||(O=ve`\text{Obtenir le même dénominateur}`)),MULTIPLY_NUMERATORS:String.raw(C||(C=ve`\text{Calculer}`)),COMBINE_NUMERATORS:String.raw(N||(N=ve`\text{Combiner les numérateurs}`)),ADD_NUMERATORS:String.raw(M||(M=ve`\text{Additionner les numérateurs}`)),ADD_COEFFICIENT_OF_ONE:String.raw(F||(F=ve`\text{Ajouter le coefficient }1`)),GROUP_COEFFICIENTS:String.raw(R||(R=ve`\text{Regrouper les coefficients}`)),FIND_GCD:String.raw(y||(y=ve`\text{Trouver le plus grand diviseur commun.}`)),CANCEL_GCD:String.raw($||($=ve`\text{Simplifier par le PGCD.}`))};n&&(l=Object.assign(l,{STATEMENT_IS_FALSE:String.raw(A||(A=ve`\text{L'égalité est fausse}`)),STATEMENT_IS_TRUE:String.raw(L||(L=ve`\text{L'égalité est vraie}`)),DISTRIBUTE:String.raw(D||(D=ve`\text{Distribution}`)),SIMPLIFY_RIGHT_SIDE:String.raw(w||(w=ve`\text{Simplifier le membre de droite}`)),SIMPLIFY_LEFT_SIDE:String.raw(P||(P=ve`\text{Simplifier le membre de gauche}`)),COLLECT_AND_COMBINE_LIKE_TERMS:String.raw(v||(v=ve`\text{Regrouper et réduire les termes de même nature}`)),SIMPLIFY_ARITHMETIC:String.raw(U||(U=ve`\text{Calcul arithmétique}`)),SIMPLIFY_FRACTION:String.raw(Y||(Y=ve`\text{Simplifier une fraction}`)),REMOVE_MULTIPLYING_BY_NEGATIVE_ONE:String.raw(k||(k=ve`\text{Calculer la multiplication par }-1`)),REMOVE_ADDING_ZERO:String.raw(B||(B=ve`\text{Enlever des zéros}`)),SWAP_SIDES:String.raw(q||(q=ve`\text{Echanger les deux membres}`)),CANCEL_MINUSES:String.raw(V||(V=ve`\text{Annuler les signes moins}`)),FIND_ROOTS:String.raw(G||(G=ve`\text{Trouver la (ou les) solution(s)}`)),SIMPLIFY_SIGNS:String.raw(j||(j=ve`\text{Simplifier le signe}`)),MULTIPLY_BY_ZERO:String.raw(H||(H=ve`\text{Multiplication par zéro}`)),ADD_FRACTIONS:String.raw(X||(X=ve`\text{Additionner des fractions}`)),BREAK_UP_FRACTION:String.raw(Q||(Q=ve`\text{Séparer une fraction}`)),CANCEL_TERMS:String.raw(Z||(Z=ve`\text{Annuler les termes}`)),REMOVE_MULTIPLYING_BY_ONE:String.raw(K||(K=ve`\text{Retirer la multiplication par } 1`))})),void 0===l[r]&&(l[r]=""),void 0===u[r]&&o.push(String.raw(z||(z=ve`&=${0}&&\tiny${0}`),c,l[r])),n&&console.log("changement",l[r])}));let s=String.raw(W||(W=ve`Simplifier $${0}$.`),i);const c=String.raw(J||(J=ve`Simplifier $${0}$.
  <br>
  $\begin{aligned}
  ${0}${0}
  \end{aligned}$
  `),i,i,o.join("\\\\"));return n&&(s=c),{texte:s,texteCorr:c}}function He(e="a*x+b=c*x-d",t={a:!1,b:!1,c:!1,d:!1,test:"a>b or true"},n=!1){const r=["<=",">=","=","<",">"],a=Ve(t,n);for(const l of Object.keys(a))a[l]=(0,u.Rxh)(a[l]);let o,i;for(let u=0;u<r.length;u++){const t=r[u];i=e.split(t),2===i.length&&(o=t)}i=e.split(o);const s=qe(i[0],a,n).toString(),c=qe(i[1],a,n).toString();return n&&console.log("Equation à résoudre : ",`${s}${o}${c}`),`${s}${o}${c}`}function Xe(e="5(x-7)=3(x+1)",t=!1){const n=["<=",">=","=","<",">"];let r,a,o;for(let c=0;c<n.length;c++){const t=n[c];a=e.split(t),2===a.length&&(r=t)}a=e.split(r);const i=(0,l.solveEquation)(e);t&&(console.log("* steps :"),console.log(i));const s=[];let u=0;i.forEach((function(e,n){const r=e.changeType;null!==e.oldEquation&&(e.oldEquation.leftNode.toString()===e.newEquation.leftNode.toString()||e.oldEquation.rightNode.toString()===e.newEquation.rightNode.toString()?"REMOVE_ADDING_ZEROS"!==r&&(u=(u+1)%3):u=0);const a=null!==e.oldEquation?Be(e.oldEquation.leftNode):"";let i=Be(e.newEquation.leftNode);const l=null!==e.oldEquation?Be(e.oldEquation.rightNode):"";let g=Be(e.newEquation.rightNode);t&&(console.log(r),console.log(i.toString()+e.newEquation.comparator+g.toString())),0===n&&(o=`${a}${e.newEquation.comparator}${l}`);const h=2===u?"black":"red";i=`{\\color{${h}}${i.replace(a,`{\\color{black}${a}}`)}}`,g=`{\\color{${h}}${g.replace(l,`{\\color{black}${l}}`)}}`,t&&console.log(i+e.newEquation.comparator+g);const d=m(e).length>0?Be((0,c.Qc)(m(e)[0].toString(),{parenthesis:"auto"})):"";let p={MULTIPLY_BOTH_SIDES_BY_NEGATIVE_ONE:String.raw(ee||(ee=ve`\text{Multiplier les deux membres par }-1`)),SUBTRACT_FROM_BOTH_SIDES:String.raw(te||(te=ve`\text{Soustraire }${0}\text{ à chaque membre}`),d),ADD_TO_BOTH_SIDES:String.raw(ne||(ne=ve`\text{Ajouter }${0}\text{ à chaque membre}`),d),MULTIPLY_TO_BOTH_SIDES:String.raw(re||(re=ve`\text{Multiplier chaque membre par }${0}`),d),DIVIDE_FROM_BOTH_SIDES:String.raw(ae||(ae=ve`\text{Diviser chaque membre par }${0}`),d),MULTIPLY_BOTH_SIDES_BY_INVERSE_FRACTION:String.raw(oe||(oe=ve`\text{Multiplier chaque membre par }${0}`),d)};t&&(p=Object.assign(p,{STATEMENT_IS_FALSE:String.raw(ie||(ie=ve`\text{L'égalité est fausse}`)),STATEMENT_IS_TRUE:String.raw(se||(se=ve`\text{L'égalité est vraie}`)),DISTRIBUTE:String.raw(ce||(ce=ve`\text{Distribution}`)),SIMPLIFY_RIGHT_SIDE:String.raw(ue||(ue=ve`\text{Simplifier le membre de droite}`)),SIMPLIFY_LEFT_SIDE:String.raw(le||(le=ve`\text{Simplifier le membre de gauche}`)),COLLECT_AND_COMBINE_LIKE_TERMS:String.raw(ge||(ge=ve`\text{Regrouper et réduire les termes de même nature}`)),SIMPLIFY_ARITHMETIC:String.raw(he||(he=ve`\text{Calcul arithmétique}`)),SIMPLIFY_FRACTION:String.raw(de||(de=ve`\text{Simplifier une fraction}`)),REMOVE_MULTIPLYING_BY_NEGATIVE_ONE:String.raw(pe||(pe=ve`\text{Calculer la multiplication par }-1`)),REMOVE_ADDING_ZERO:String.raw(Te||(Te=ve`\text{Enlever des zéros}`)),SWAP_SIDES:String.raw(be||(be=ve`\text{Echanger les deux membres}`)),CANCEL_MINUSES:String.raw(Ee||(Ee=ve`\text{Annuler les signes moins}`)),FIND_ROOTS:String.raw(me||(me=ve`\text{Trouver la (ou les) solution(s)}`)),SIMPLIFY_SIGNS:String.raw(xe||(xe=ve`\text{Simplifier le signe}`)),MULTIPLY_BY_ZERO:String.raw(Ie||(Ie=ve`\text{Multiplication par zéro}`)),ADD_FRACTIONS:String.raw(_e||(_e=ve`\text{Additionner des fractions}`)),BREAK_UP_FRACTION:String.raw(Se||(Se=ve`\text{Séparer une fraction}`)),CANCEL_TERMS:String.raw(fe||(fe=ve`\text{Annuler les termes}`)),REMOVE_MULTIPLYING_BY_ONE:String.raw(Oe||(Oe=ve`\text{Retirer la multiplication par } 1`))})),void 0===p[r]&&(p[r]=""),2===u?(u=0,s.pop(),"REMOVE_ADDING_ZERO"!==r&&s.push(String.raw(Ce||(Ce=ve`${0}&${0}${0}&&${0}`),i,e.newEquation.comparator,g,p[r]))):"REMOVE_ADDING_ZERO"!==r&&s.push(String.raw(Ne||(Ne=ve`${0}&${0}${0}&&${0}`),i,e.newEquation.comparator,g,p[r])),t&&console.log("changement",p[r])}));let g=String.raw(Me||(Me=ve`Résoudre $${0}$.`),o);const h=String.raw(Fe||(Fe=ve`Résoudre $${0}$.
  <br>
  $\begin{aligned}
  ${0}
  \end{aligned}$
  `),o,s.join("\\\\"));return t&&(g=h),{texte:g,texteCorr:h}}function Qe(e=["+","-","*","/","^2","2*x","3*x","-2*x","-3*x","x^2","-x^2","x","-x","*x","/x"],t,n=!1){const r=c.og.rules;r[13]={l:"n",r:"n"},r[14]={l:"n",r:"n"};const a={};a.symbolsOp=Object.values(e);const o=["+","-","*","/","^2","2*x","3*x","-2*x","-3*x","x^2","-x^2","x","-x","*x","/x"],i=["+","-","*","/","^","+","+","-","-","+","-","+","-","*","/"],s=["add","subtract","multiply","divide","pow","add","add","subtract","subtract","add","subtract","add","subtract","multiply","divide"],l={add:"subtract",subtract:"add",multiply:"divide",divide:"multiply"},g={add:"-",subtract:"+",multiply:"/",divide:"*"},h=["Ajouter ","Soustraire ","Multiplier par ","Diviser par ","Elever au carré","Ajouter le double du nombre choisi","Ajouter le triple du nombre choisi","Soustraire le double du nombre choisi","Soustraire le triple du nombre choisi","Ajouter le carré du nombre choisi","Soustraire le carré du nombre choisi","Ajouter le nombre choisi","Soustraire le nombre choisi","Multiplier par le nombre choisi","Diviser par le nombre choisi"],d=["Soustraire ","Ajouter ","Diviser par ","Multiplier par ","Prendre la racine carré","Soustraire le double du nombre choisi","Soustraire le triple du nombre choisi","Ajouter le double du nombre choisi","Ajouter le triple du nombre choisi","Soustraire le carré du nombre choisi","Ajouter le carré du nombre choisi","Soustraire le nombre choisi","Ajouter le nombre choisi","Diviser par le nombre choisi","Multiplier par le nombre choisi"],p=[1,2,3,4,5,6,7,8,9],T=[2,3,4,5,6,7,8,9];a.namesOp=Object.values(a.symbolsOp),a.debutsPhrase=Object.values(a.symbolsOp),a.debutsPhraseInv=Object.values(a.symbolsOp),a.op=Object.values(a.symbolsOp),a.namesOp.forEach((function(e,t){a.namesOp[t]=s[o.indexOf(e)]})),a.debutsPhrase.forEach((function(e,t){a.debutsPhrase[t]=h[o.indexOf(e)]})),a.debutsPhraseInv.forEach((function(e,t){a.debutsPhraseInv[t]=d[o.indexOf(e)]})),a.op.forEach((function(e,t){a.op[t]=i[o.indexOf(e)]}));const b=[new c.jN("x")],E=[],m=["Choisir un nombre."],x=["x"],I=[new c.jN("x")],_=["x"],S=["x"],f=["x"],O=["On obtient le nombre choisi."],C=[t=(0,c.og)(Ue.format(t))],N=[t];let M;const F=a.symbolsOp.length+1;for(let $=1;$<F;$++){const e=$-1;let o=a.symbolsOp[e];const i=a.namesOp[e],s=a.debutsPhrase[e],h=a.debutsPhraseInv[e],d=a.op[e];let R="";switch(o){case"/":case"*":case"+":M=new c.oy((0,u.sDj)(T));break;case"^":M=new c.oy(2);break;case"-":M=new c.oy((0,u.sDj)(p));break;default:"-"===o[0]&&(o=o.replace("-","")),M=(0,c.Qc)(o)}I.push(M),M.isConstantNode&&(R=`$${M.toString()}$`);let y=(0,c.og)(b[$-1].toString({parenthesis:"keep"}),r);b.push(new c.$X(d,i,[new c.Dd(y),M])),x.push(Be(b[$],n)),y=(0,c.og)(b[$].toString({parenthesis:"auto"}),r),E.push(new c.$X(g[i],l[i],[new c.Dd(y),M])),S.push(Be(E[$-1],n)),_.push(Be(y,n));const A=(0,c.Qc)(E[$-1].toString({parenthesis:"auto"}));f.push(Be(A,n)),m.push(s+R),O.push(h+R),$===a.symbolsOp.length&&(x.push(Be(b[$],n)),_.push(Be(y,n)),S.push(Be(E[$-1],n)),f.push(Be(y,n)),m.push("Ecrire le résultat"),O.push("Résultat du programme")),$===F?(N.push(N[$-1]),C.push(N[$-1])):$>0&&(N.push(new c.$X(a.op[e],i,[C[$-1],(0,c.og)(M,[{l:"n",r:"n"}],{x:t})])),C.push((0,c.og)(N[$],{x:t})))}const R=[C[F-1]],y=[C[F-1]];for(let u=1;u<F;u++){const e=u-1,n=a.namesOp[F-2-e];u===F?(y.push(y[u]),R.push(y[u])):u<F&&(y.push(new c.$X(g[n],l[n],[R[u-1],(0,c.og)(I[F-u],[{l:"n",r:"n"}],{x:t})])),R.push((0,c.og)(y[u],{x:t})))}return{phrases:m,steps:x,stepsSimplified:_,stepsInv:S,stepsSimplifiedInv:f,phrasesInv:O,nodes:b,stepProg:e,calculIntermediaire:N,resultatIntermediaire:C,calculIntermediaireInv:y,resultatIntermediaireInv:R}}function Ze(e=["+","-","*","/","^2","2*x","3*x","-2*x","-3*x","x^2","-x^2","x","-x","*x","/x"],t,n=!1){const r=Qe(e,t,n),a=Object.values(r.phrases);a.forEach((function(e,t){a[t]="&\\bullet~\\text{"+r.phrases[t]+"}&",r.phrases[t]="&\\bullet~\\text{"+r.phrases[t]+"}",a[t]+="&"+r.steps[t],r.steps[t]!==r.stepsSimplified[t]&&(a[t]+="&="+r.stepsSimplified[t])}));let o=String.raw(Re||(Re=ve` Voici un programme de calcul.
          <br>
          $\begin{aligned}
          ${0}
          \end{aligned}$
          <br>
          Notons $x$ le nombre choisi.
          <br>
          Ecrire le résultat du programme de calcul en fonction de $x$.
          `),r.phrases.join("\\\\"));const i=String.raw(ye||(ye=ve`Solution détaillée
          <br>
          $\begin{aligned}
          ${0}
          \end{aligned}$`),a.join("\\\\"));return n&&(o=`${o}<br>${i}`),{texte:o,texteCorr:i}}function Ke(e=["+","-","*","/","^2","2*x","3*x","-2*x","-3*x","x^2","-x^2","x","-x","*x","/x"],t,n=!1){const r=Qe(e,t,n),a=Object.values(r.phrases);a.forEach((function(e,t){a[t]="&\\bullet~\\text{"+r.phrases[t]+"}&",r.phrases[t]="&\\bullet~\\text{"+r.phrases[t]+"}",a[t]+="&"+r.steps[t],r.steps[t]!==r.stepsSimplified[t]&&(a[t]+="&="+r.stepsSimplified[t])}));let o=String.raw($e||($e=ve`Voici une expression. Ecrire le programme de calcul correspondant.
          <br>
          $${0}$
          `),r.stepsSimplified[r.stepsSimplified.length-1]);const i=String.raw(Ae||(Ae=ve`Solution détaillée
          <br>
          $\begin{aligned}
          ${0}
          \end{aligned}$`),a.join("\\\\"));return n&&(o=`${o}<br>${i}`),{texte:o,texteCorr:i}}function ze(e=["+","-","*","/","^2","2*x","3*x","-2*x","-3*x","x^2","-x^2","x","-x","*x","/x"],t,n=!1){const r=Qe(e,t,n),a=Object.values(r.phrases),o=Object.values(r.phrases),i=a.length;a.forEach((function(e,t){a[t]="&\\bullet~\\text{"+r.phrases[t]+"}&",r.phrases[t]="&\\bullet~\\text{"+r.phrases[t]+"}",a[t]+="&"+r.steps[t],o[t]="&\\bullet~\\text{"+r.phrasesInv[t]+"}&",r.phrasesInv[t]="&\\bullet~\\text{"+r.phrasesInv[t]+"}",0===t?o[t]+="&"+Be(r.resultatIntermediaireInv[i-2]):t<a.length-1?o[t]+="&"+Be(r.calculIntermediaireInv[i-1-t])+"&&="+Be(r.resultatIntermediaireInv[i-1-t]):o[t]+="&"+Be(r.resultatIntermediaireInv[0])})),t=(0,c.og)(Ue.format(t));let s=String.raw(Le||(Le=ve`On obtient le nombre $${0}$ avec le programme suivant.
          <br>
          $\begin{aligned}
          ${0}
          \end{aligned}$
          <br>
          Quel était le nombre choisi ?
          `),Be(r.resultatIntermediaireInv[0]),r.phrases.join("\\\\"));const u=String.raw(De||(De=ve`Solution détaillée
          <br>
          $\begin{aligned}
          ${0}
          \end{aligned}$
          <br>
          Le nombre choisi était donc $${0}$.
          `),o.reverse().join("\\\\"),Be(t));return n&&(s=`${s}<br>${u}`),{texte:s,texteCorr:u}}function We(e=["+","-","*","/","^2","2*x","3*x","-2*x","-3*x","x^2","-x^2","x","-x","*x","/x"],t,n=!1){const r=Qe(e,t,n),a=Object.values(r.phrases);a.forEach((function(e,t){a[t]="&\\bullet~\\text{"+r.phrases[t]+"}&",r.phrases[t]="&\\bullet~\\text{"+r.phrases[t]+"}",0===t?a[t]+="&"+Be(r.resultatIntermediaire[0]):t<a.length-1?a[t]+="&"+Be(r.calculIntermediaire[t])+"&&="+Be(r.resultatIntermediaire[t]):a[t]+="&"+Be(r.resultatIntermediaire[t-1])})),t=(0,c.og)(Ue.format(t));let o=String.raw(we||(we=ve`Choisir le nombre $${0}$ et effectuer le programme de calcul suivant.
          <br>
          $\begin{aligned}
          ${0}
          \end{aligned}$
          <br>
          `),Be(t),r.phrases.join("\\\\"));const i=String.raw(Pe||(Pe=ve`Solution détaillée
          <br>
          $\begin{aligned}
          ${0}
          \end{aligned}$`),a.join("\\\\"));return n&&(o=`${o}<br>${i}`),{texte:o,texteCorr:i}}function Je(){r.default.call(this);const e=["0 : Mélange des types de questions","1 : Programme de calcul : 3 étapes, quatre opérations, cube, carré.","2 : Programme de calcul : 4 étapes, quatre opérations, cube, carré.","3 : Programme de calcul : 5 étapes, quatre opérations, cube, carré.","4 : Programme de calcul : 5 étapes, quatre opérations.","5 : Résoudre une équation","6 : Résoudre une équation","7 : Résoudre une équation","8 : Résoudre une équation","9 : Résoudre une équation","10 : Résoudre une équation","11 : Résoudre une équation","12 : Résoudre une équation","13 : Résoudre une équation","14 : Résoudre une équation","15 : Résoudre une équation","16 : Résoudre une équation","17 : Résoudre une équation","18 : Résoudre une équation","19 : Calculer","20 : Calculer","21 : Calculer","22 : Calculer","23 : Calculer","24 : Calculer","25 : Calculer","26 : Calculer","27 : Calculer","28 : Calculer","29 : Calculer","30 : Calculer","31 : Calculer","32 : Calculer","33 : Calculer","34 : Calculer","35 : Calculer","36 : Calculer","37 : Calculer","38 : Calculer","39 : Calculer","40 : Calculer","41 : Calculer","42 : Calculer","43 : Calculer","44 : Calculer","45 : Calculer","46 : Calculer","47 : Calculer","48 : Calculer","49 : Calculer","50 : Calculer","51 : Calculer","52 : Calculer","53 : Calculer","54 : Calculer","55 : Calculer","56 : Calculer","57 : Calculer","58 : Calculer","59 : Calculer","60 : Calculer","61 : Calculer","62 : Calculer","63 : Calculer","64 : Calculer"];this.nbQuestions=0,this.besoinFormulaireNumerique=["Type de question",this.nbQuestions,e.join("\n")],this.consigne="",this.nbCols=0,this.nbColsCorr=0,this.tailleDiaporama=1,this.video="",this.correctionDetailleeDisponible=!0,this.correctionDetaillee=!0,a.Do.isHtml?this.spacing=2.5:this.spacing=1.5,a.Do.isHtml?this.spacingCorr=2.5:this.spacingCorr=1.5,this.sup=0,this.nouvelleVersion=function(t,n=!1){this.nbQuestions=this.NbQuestions>0?this.nbQuestions:0!==this.sup?1:e.length-1,this.listeQuestions=[],this.listeCorrections=[],this.autoCorrection=[];let r=0;for(let e,a=0,o=0;a<this.nbQuestions&&o<100;){switch(r=0===this.sup?o+1:this.sup,n&&console.log(`\n        ********************************\n        Exercice ${a+1} Case ${r}\n        ********************************`),r){case 1:case 34:e=Ze(["+","*"],(0,c.Qc)(1),n);break;case 2:e=Ze(["*","+"],(0,c.Qc)(1),n);break;case 3:e=Ze(["+","*","-"],(0,c.Qc)(1),n);break;case 4:e=Ze(["-","*","2*x"],(0,c.Qc)(1),n);break;case 5:e=Xe(He("a*x+b=c*x+d",{a:!1,b:!1,c:!1,d:!1,test:"a!=c"}),n);break;case 6:e=Xe(He("a*x+b=c*x+d",{a:!1,b:!0,c:!1,d:!0,test:"a!=c"}),n);break;case 7:e=Xe(He("a*x+b=c*x+d",{a:!0,b:!0,c:!1,d:!0,test:"a!=c"}),n);break;case 8:e=Xe(He("x/a=b/c",{a:!1,b:!0,c:!1,test:"a!= 1 and abs(b)%c!=0"}),n);break;case 9:e=Xe(He("-x/a=b/c",{a:!1,b:!0,c:!1,test:"abs(b)%c!=0"}),n);break;case 10:e=Xe(He("a/x=b/c",{a:!0,b:!0,c:!1,test:"abs(b)%c!=0"}),n);break;case 11:e=Xe(He("(a*x+b)/c=d/e",{a:!0,b:!0,c:!1,d:!0,e:!1,test:"c>1 and a%c!=0 and abs(d)%e!=0"}),n);break;case 12:e=Xe(He("a*x+b/c=d/e",{a:!0,b:!0,c:!1,d:!0,e:!1,test:"c>1 and abs(d)%e!=0 and abs(b)%c!=0"}),n);break;case 13:e=Xe(He("a/(b*x+c)=d/e",{a:!0,b:!0,c:!0,d:!0,e:!1,test:"abs(d)%e!=0"}),n);break;case 14:e=Xe(He("A*x+B=C*x+D",{s:"fraction(randomInt(-9, 9))+fraction(randomInt(-10, 10), 10)",a:"fraction(randomInt(-9, 9))+fraction(randomInt(-10, 10), 10)",b:"fraction(randomInt(-9, 9))+fraction(randomInt(-10, 10), 10)",c:"fraction(randomInt(-9, 9))+fraction(randomInt(-10, 10), 10)",A:"a+b",B:"c",C:"b",D:"a*s+c",test:"A!=0 and D!=0"}),n);break;case 15:e=Xe(He("a*(b*x+c)=d*x+e",{a:!0,b:!0,c:!0,d:!0,e:!1,test:"a!=1 and a*b!=d"}),n);break;case 16:e=Xe(He("a*x+b*y=c",{a:!0,b:!0,c:!0}),n);break;case 17:e=Xe(He("a*x^2+b=a*x*(x+c)",{a:!0,b:!0,c:!0}),n);break;case 18:e=Xe(He("x/a=y",{a:!1,test:"a!=1"}),n);break;case 19:e=je(qe("a/b+c/d",Ve({a:!1,b:"randomInt(2,100)",c:!1,d:"randomInt(2,100)",test:"(d%b==0 or b%d==0) and gcd(a,b)==1 and gcd(c,d)==1"})).toString(),!1,n);break;case 20:e=je(qe("a*x+b*x",Ve({a:"randomInt(2,100)",b:"randomInt(2,100)"})).toString(),!1,n);break;case 21:e=je(qe("a*x+b*x-c*x",Ve({a:"randomInt(2,100)",b:"randomInt(2,100)",c:"randomInt(2,100)",test:"a+b>=c"})).toString(),!1,n);break;case 22:e=je(qe("a/b*x+c/d*x",Ve({a:!1,b:"randomInt(2,100)",c:!1,d:"randomInt(2,100)",test:"(d%b==0 or b%d==0) and gcd(a,b)==1 and gcd(c,d)==1"})).toString(),!1,n);break;case 23:e=je(qe("a*x^2+b*x+c*x^2",Ve({a:"randomInt(1,20)",b:"randomInt(1,20)",c:"randomInt(1,20)"})).toString(),!1,n);break;case 24:e=je(qe("a*x^2+b*x+c",Ve({a:"randomInt(1,15)^2",c:"randomInt(1,15)^2",b:"2*sqrt(a)*sqrt(c)"})).toString(),!0,n);break;case 25:e=je(qe("a*x^2-b*x+c",Ve({a:"randomInt(1,15)^2",c:"randomInt(1,15)^2",b:"2*sqrt(a)*sqrt(c)"})).toString(),!0,n);break;case 26:e=je(qe("a*x^2-b",Ve({a:"randomInt(1,15)^2",b:"randomInt(1,15)^2"})).toString(),!0,n);break;case 27:case 28:e=Ke(["-","*","2*x"],(0,c.Qc)(1),n);break;case 29:e=je(qe("a+c/d",Ve({a:!1,b:"randomInt(2,100)",c:!1,d:"randomInt(2,100)",test:"c!=d and c%d!=0"})).toString(),!1,n);break;case 30:e=je(qe("a-c/d",Ve({a:!1,b:"randomInt(2,100)",c:!1,d:"randomInt(2,100)",test:"c!=d and c%d!=0 and a-c/d>0"})).toString(),!1,n);break;case 31:e=je(qe("a/b-c/d",Ve({a:!1,b:"randomInt(2,100)",c:!1,d:"randomInt(2,100)",test:"gcd(a,b)==1 and gcd(c,d)==1 and d!=b and (d%b==0 or b%d==0) and a/b-c/d>0"})).toString(),!1,n);break;case 32:e=Xe(He("a*x+b>c*x+d",{a:!1,b:!1,c:!1,d:!1,test:"a!=c"}),n);break;case 33:e=Xe(He("a*x^2+b*x+c=0",{s:!0,t:!0,a:!0,b:"a*(-s-t)",c:"a*s*t"},n),n);break;case 35:e=Ke(["*","+"],(0,c.Qc)(1),n);break;case 36:e=Ze(["*","2*x"],(0,c.Qc)(1),n);break;case 37:e=Ze(["-","-2*x"],(0,c.Qc)(1),n);break;case 38:e=Ze(["-","/","x"],(0,c.Qc)(1),n);break;case 39:e=We(["-","/","x","*","x^2"],Ve({a:!0,b:!1,c:"fraction(a,b)",test:"a%b!=0"}).c,n);break;case 40:e=ze(["-","/","*","+"],Ve({a:!0,b:!1,c:"fraction(a,b)",test:"a%b!=0"}).c,n);break;case 41:e=ze(["-"],Ve({a:!1}).a,n);break;case 42:e=ze(["-","*"],Ve({a:!1}).a,n);break;case 43:e=je(qe("(a/b)*(c/d)",Ve({a:!1,b:"randomInt(2,100)",c:!1,d:"randomInt(2,100)",test:"gcd(a,b)==1 and gcd(c,d)==1 and d!=b and (d%b==0 or b%d==0) and a/b-c/d>0"})).toString(),!1,n);break;case 44:e=je(qe("a*x+b*x",Ve({a:"round(random(1,10),1)",b:"round(random(-10,10),1)",test:"b!=0 and a+b>0"})).toString(),!1,n);break;case 45:e=je(qe("a*x*b",Ve({a:!1,b:!1,test:"a>1 and b>1"})).toString(),!1,n);break;case 46:case 47:e=je(qe("a*x*b+c*x",Ve({a:!1,b:!1,c:!0,test:"b>1 and a>1 and a*b+c>0"})).toString(),!1,n);break;case 48:e=je(qe("x*a*x*b",Ve({a:!1,b:!1,test:"b>1 and a>1"})).toString(),!1,n);break;case 49:e=je(qe("x*a*x+b*x^2",Ve({a:!1,b:!0,test:"a>1 and a+b>0"})).toString(),!1,n);break;case 50:e=je(qe("a*x*b*x*c*x+d*x^2",Ve({a:!1,b:!1,c:!1,d:!0,test:"a>1 and b>1 and c>1"})).toString(),!1,n);break;case 51:e=Ze(["+","/","-x^2"],(0,c.Qc)(1),n);break;case 52:e=Ze(["*","-x","/"],(0,c.Qc)(1),n);break;case 53:e=Ze(["/","-x","*"],(0,c.Qc)(1),n);break;case 54:e=We(["+","*","-"],Ve({a:!0}).a,n);break;case 55:e=ze(["*","-","/"],Ve({a:!0}).a,n);break;case 56:e=ze(["+","*","-"],Ve({a:!0}).a,n);break;case 57:e=je(qe("a/b+c/d",Ve({a:!0,b:"randomInt(2,100)",c:!0,d:"randomInt(2,100)",test:"(d%b==0 or b%d==0) and gcd(abs(a),b)==1 and gcd(abs(c),d)==1"})).toString(),!1,n);break;case 58:e=je(qe("a+c/d",Ve({a:!0,b:"randomInt(2,100)",c:!0,d:"randomInt(2,100)",test:"c!=d and c%d!=0"})).toString(),!1,n);break;case 59:e=je(qe("a*x+b*x",Ve({a:"round(random(-10,10),1)",b:"round(random(-10,10),1)",test:"b!=0 and a!=0"})).toString(),!1,n);break;case 60:e=je(qe("a*x*b",Ve({a:!0,b:!0,test:"a!= 1 and b!=1"})).toString(),!1,n);break;case 61:e=je(qe("a*x*b+c*x",Ve({a:!0,b:!0,c:!0,test:"a!= 1 and b!=1"})).toString(),!1,n);break;case 62:e=je(qe("x*a*x*b",Ve({a:!0,b:!0,test:"a!=1 and b!=1"})).toString(),!1,n);break;case 63:e=je(qe("x*a*x+b*x^2",Ve({a:!0,b:!0,test:"a!=1 and b!=1"})).toString(),!1,n);break;case 64:e=je(qe("a*x*b*x*c*x+d*x^2",Ve({a:!0,b:!0,c:!0,d:!0,test:"a!= 1 and b!=1 and c!=1"})).toString(),!1,n)}this.questionJamaisPosee(a,r)&&(this.listeQuestions.push(e.texte),this.listeCorrections.push(e.texteCorr),a++),o++}(0,o.K1R)(this)}}},31432:e=>{const t={isOperator:function(e,t=null){return"OperatorNode"===e.type&&"unaryMinus"!==e.fn&&"*+-/^".includes(e.op)&&(!t||e.op===t)},isParenthesis:function(e){return"ParenthesisNode"===e.type},isUnaryMinus:function(e){return"OperatorNode"===e.type&&"unaryMinus"===e.fn},isFunction:function(e,t=null){return"FunctionNode"===e.type&&(!t||e.fn.name===t)},isSymbol:function(e,n=!1){return"SymbolNode"===e.type||!(!n||!t.isUnaryMinus(e))&&t.isSymbol(e.args[0],!1)},isConstant:function(e,n=!1){if("ConstantNode"===e.type)return!0;if(n&&t.isUnaryMinus(e)){if(t.isConstant(e.args[0],!1)){return parseFloat(e.args[0].value)>=0}return!1}return!1},isConstantFraction:function(e,n=!1){return!!t.isOperator(e,"/")&&e.args.every((e=>t.isConstant(e,n)))},isConstantOrConstantFraction:function(e,n=!1){return!(!t.isConstant(e,n)&&!t.isConstantFraction(e,n))},isIntegerFraction:function(e,n=!1){if(!t.isConstantFraction(e,n))return!1;let r=e.args[0],a=e.args[1];return n&&(t.isUnaryMinus(r)&&(r=r.args[0]),t.isUnaryMinus(a)&&(a=a.args[0])),Number.isInteger(parseFloat(r.value))&&Number.isInteger(parseFloat(a.value))}};e.exports=t}}]);
//# sourceMappingURL=53695.3019d98985cdaaa6b6a0.js.map