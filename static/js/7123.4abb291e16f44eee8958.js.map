{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6M11-1.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Perimetre_ou_aire_de_carres_rectangles_triangles","Exercice","this","consigne","spacing","nbCols","nbColsCorr","sortieHtml","spacingCorr","nbQuestions","nbQuestionsModifiable","nouvelleVersion","numeroExercice","texte","texteCorr","nom","creerNomDePolygone","listeQuestions","listeCorrections","c","randint","L","l","a","b","c2","Math","sqrt","pIJK","calcul","A","point","B","rotation","C","D","carre","polygoneAvecNom","E","F","pointAdistance","G","similitude","H","translation","vecteur","rectangle","I","J","K","triangle","mathalea2d","xmin","xmax","ymin","ymax","pixelsParCm","scale","mainlevee","codageAngleDroit","codeSegments","afficheLongueurSegment","texNombre","toFixed","push","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/7123.4abb291e16f44eee8958.js","sourcesContent":["/* eslint-disable camelcase */\nimport { mathalea2d, codageAngleDroit, codeSegments, pointAdistance, polygoneAvecNom, point, translation, vecteur, rotation, similitude, afficheLongueurSegment } from '../../modules/2d.js'\nimport Exercice from '../ClasseExercice.js'\nimport { listeQuestionsToContenu, randint, texNombre, creerNomDePolygone, calcul } from '../../modules/outils.js'\n\nexport const titre = 'Périmètres et aires carrés, rectangles et triangles rectangles'\n\n/**\n * Un carré, un rectangle et un triangle rectangle sont tracés.\n *\n * Il faut calculer les aires et périmètres.\n *\n * Pas de version LaTeX\n * @Auteur Rémi Angot\n * Référence 6M11-1\n */\nexport default function Perimetre_ou_aire_de_carres_rectangles_triangles () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Calculer le périmètre et l'aire des 3 figures suivantes\"\n  this.spacing = 2\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  // eslint-disable-next-line no-undef\n  sortieHtml ? (this.spacingCorr = 3) : (this.spacingCorr = 2)\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n\n  this.nouvelleVersion = function (numeroExercice) {\n    let texte = ''; let texteCorr = ''\n    const nom = creerNomDePolygone(11, 'Q')\n    this.listeQuestions = []\n    this.listeCorrections = [] // Liste de questions corrigées\n    const c = randint(2, 6)\n    const L = randint(2, 5)\n    const l = randint(2, 5, L)\n    const a = randint(2, 5)\n    const b = randint(2, 5)\n    const c2 = Math.sqrt(a * a + b * b)\n    const pIJK = calcul(a + b + c2, 1)\n    const A = point(0, 0, nom[0])\n    const B = rotation(point(c, 0), A, randint(-15, 15), nom[1])\n    const C = rotation(A, B, -90, nom[2])\n    const D = rotation(B, A, 90, nom[3])\n    const carre = polygoneAvecNom(A, B, C, D)\n    const E = point(8, 0, nom[4])\n    const F = pointAdistance(E, L, randint(-15, 15), nom[5])\n    const G = similitude(E, F, -90, l / L, nom[6])\n    const H = translation(G, vecteur(F, E), nom[7])\n    const rectangle = polygoneAvecNom(E, F, G, H)\n    const I = point(15, 0, nom[8])\n    const J = pointAdistance(I, a, randint(-25, 25), nom[9])\n    const K = similitude(I, J, -90, b / a, nom[10])\n    const triangle = polygoneAvecNom(I, J, K)\n    texte = mathalea2d({ xmin: -2, xmax: 22, ymin: -3, ymax: 7, pixelsParCm: 20, scale: 0.75, mainlevee: false },\n      carre, codageAngleDroit(A, B, C), codageAngleDroit(A, D, C), codageAngleDroit(D, C, B), codageAngleDroit(B, A, D), codeSegments('//', 'blue', [A, B, C, D, A]), afficheLongueurSegment(B, A),\n      rectangle, codageAngleDroit(E, F, G), codageAngleDroit(F, G, H), codageAngleDroit(G, H, E), codageAngleDroit(H, E, F), codeSegments('/', 'red', E, F, G, H), codeSegments('||', 'blue', F, G, H, E), afficheLongueurSegment(F, E), afficheLongueurSegment(G, F),\n      triangle, codageAngleDroit(I, J, K), afficheLongueurSegment(J, I), afficheLongueurSegment(K, J), afficheLongueurSegment(I, K)\n    )\n\n    texteCorr = `$\\\\mathcal{P}_{${nom[0] + nom[1] + nom[2] + nom[3]}}=${c}~\\\\text{cm}+${c}~\\\\text{cm}+${c}~\\\\text{cm}+${c}~\\\\text{cm}=${4 * c\n      }~\\\\text{cm}$`\n    texteCorr += `<br>$\\\\mathcal{A}_{${nom[0] + nom[1] + nom[2] + nom[3]}}=${c}~\\\\text{cm}\\\\times${c}~\\\\text{cm}=${c * c\n      }~\\\\text{cm}^2$`\n    texteCorr += `<br>$\\\\mathcal{P}_{${nom[4] + nom[5] + nom[6] + nom[7]}}=${L}~\\\\text{cm}+${l}~\\\\text{cm}+${L}~\\\\text{cm}+${l}~\\\\text{cm}=${2 * L + 2 * l\n      }~\\\\text{cm}$`\n    texteCorr += `<br>$\\\\mathcal{A}_{${nom[4] + nom[5] + nom[6] + nom[7]}}=${L}~\\\\text{cm}\\\\times${l}~\\\\text{cm}=${L * l\n      }~\\\\text{cm}^2$`\n    texteCorr += `<br>$\\\\mathcal{P}_{${nom[8] + nom[9] + nom[10]}}=${a}~\\\\text{cm}+${b}~\\\\text{cm}+${texNombre(\n      c2.toFixed(1)\n    )}~\\\\text{cm}=${texNombre(pIJK)}~\\\\text{cm}$`\n    texteCorr += `<br>$\\\\mathcal{A}_{${nom[8] + nom[9] + nom[10]}}=${a}~\\\\text{cm}\\\\times${b}~\\\\text{cm}\\\\div2=${texNombre(\n      calcul((a * b) / 2)\n    )}~\\\\text{cm}^2$`\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3,\"1 : Périmètres\\n\\\n  // 2 : Aires\\n3 : Périmètres et aires\"];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}