(self.webpackChunkmathalea=self.webpackChunkmathalea||[]).push([[3136,7567],{67567:(e,r,o)=>{"use strict";function n(){this.titre="",this.consigne="",this.consigne_correction="",this.liste_questions=[],this.liste_corrections=[],this.introduction="",this.contenu="",this.contenu_correction="",this.nb_questions=10,this.nb_cols=2,this.nb_cols_corr=2,this.spacing=1,this.spacing_corr=1,this.beamer=!1,this.besoin_formulaire_numerique=!1,this.besoin_formulaire_texte=!1,this.besoin_formulaire_case_a_cocher=!1,this.consigne_modifiable=!0,this.nb_questions_modifiable=!0,this.nb_cols_modifiable=!0,this.nb_cols_corr_modifiable=!0,this.spacing_modifiable=!0,this.spacing_corr_modifiable=!0,this.correction_detaillee_disponible=!1,this.correction_detaillee=!0,this.video="",this.bouton_aide=!1,this.tailleDiaporama=50,this.pas_de_version_LaTeX=!1,this.QCM=!1,this.QCM_disponible=!1,this.ModeQCM=!1,this.MG32editable=!1,this.nouvelle_version=function(e){},this.liste_packages=[]}o.r(r),o.d(r,{default:()=>n})},13136:(e,r,o)=>{"use strict";o.r(r),o.d(r,{titre:()=>c,default:()=>s});var n=o(67567),t=o(24477),i=o(41118);const c="Re-Problèmes additifs et de comparaison sur les rationnels";function s(){let e;n.default.call(this),this.debug=!1,this.sup=1,this.video="",this.debug,this.nb_questions=2,this.titre=c,this.consigne="Justifier vos réponses aux problèmes suivants.",this.nb_cols=1,this.nb_cols_corr=1,sortie_html?this.spacing=2:this.spacing=1.5,sortie_html?this.spacing_corr=3:this.spacing_corr=1.15,this.nouvelle_version=function(){e=this.debug?[1,2,3,4,5]:[(0,t.q$q)([1,2]),(0,t.q$q)([3,4,5])];let r=(0,t.LG7)(e,this.nb_questions);this.liste_questions=[],this.liste_corrections=[];let o,n,c,s,a,$,l,u,f,d,m,p,x,F,b,h,g,q,v,_,M,j,D,P,C=[[40,2,20,4,10,5,8],[60,2,30,3,20,4,15,5,12,6,10],[80,2,40,4,20,5,16,8,10]],R=[],L=[];for(let e,k,Z=0,T=[],I=0;Z<this.nb_questions&&I<50;){for(L=[],T=C[(0,t.nSR)(0,C.length-1)],q=(0,i.Pj)(1,2),v=(0,i.Pj)(1,2),_=(0,i.Pj)(1,2);q.num==v.num||q.num==_.num||v.num==_.num||q.superieurlarge((0,i.Pj)(1,2))||v.superieurlarge((0,i.Pj)(1,2));)p=(0,t.nSR)(1,6),b=(0,t.q$q)(T),x=(0,t.nSR)(2,10,p),h=(0,t.q$q)(T,b),F=b*h-p*h-x*b,g=b*h,q=(0,i.Pj)(p,b).simplifie(),v=(0,i.Pj)(x,h).simplifie(),_=(0,i.Pj)(F,g).simplifie();for(L.push({prenoms:[(0,t.nHh)()],fractions:[q,"VTT",v,"ski de fond",_,"pied"],enonce:"",question:"Pour quelle discipline, la distance est-elle la plus grande ?",correction:""});o==n||o==c||n==c;)o=(0,t.sTI)(),n=(0,t.sTI)(),c=(0,t.sTI)();L.push({prenoms:[],fractions:[q,o,v,n,_,c],enonce:"",question:"Qui a été élue ?",correction:""}),s=new Date,a=s.getFullYear(),L[0].enonce+="Le triathlon des neiges de la vallée des loups comprend trois épreuves qui s'enchaînent : VTT, ski de fond et course à pied.",L[0].enonce+=`<br>${L[0].prenoms[0]}, un passionné de cette épreuve, s'entraîne régulièrement sur le même circuit. `,L[0].enonce+=`<br>À chaque entraînement, il parcourt le circuit de la façon suivante : $${L[0].fractions[0].texFraction}$ à ${L[0].fractions[1]}, `,L[0].enonce+=`$${L[0].fractions[2].texFraction}$ à ${L[0].fractions[3]} et le reste à ${L[0].fractions[5]}.`,L[1].enonce=`À l'élection de Miss Math ${a}, ${L[1].fractions[1]} a remporté $${L[1].fractions[0].texFraction}$ des suffrages, `,L[1].enonce+=`${L[1].fractions[3]} $${L[1].fractions[2].texFraction}$ et `,L[1].enonce+=`${L[1].fractions[5]} tous les autres.`,$=(0,i.yy)(q,v,_),f=(0,t.Dmi)($.listeMemeDenominateur),d=(0,t.Dmi)($.listeRangeeMemeDenominateur),m=(0,t.Dmi)($.listeRangee),u=$.listeMemeDenominateur[0].den;for(let e=0;e<2;e++)L[e].correction="Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>",$.liste[0].den==$.liste[1].den?L[e].correction+="Les fractions de l'énoncé ont déjà le même dénominateur.<br>":(L[e].correction+="Réduisons les fractions de l'énoncé au même dénominateur :  ",L[e].correction+=`$${$.liste[0].texFraction}$ `,$.liste[0].den!==u?L[e].correction+=`$= ${$.listeMemeDenominateur[0].texFraction}$ et `:L[e].correction+=" et ",L[e].correction+=`$${$.liste[1].texFraction}$ `,$.liste[1].den!==u?L[e].correction+=`$= ${$.listeMemeDenominateur[1].texFraction}$.<br>`:L[e].correction+=".<br>");L[0].correction+="Calculons alors la distance à ",L[1].correction+="Calculons d'abord la fraction des suffrages remportés par ";for(let e=0;e<2;e++)L[e].correction+=`${L[e].fractions[5]} : <br>`,L[e].correction+=`$1-${L[e].fractions[0].texFraction}-${L[e].fractions[2].texFraction} = `,L[e].correction+=`${(0,i.Pj)(u,u).texFraction}-${$.listeMemeDenominateur[0].texFraction}-${$.listeMemeDenominateur[1].texFraction} = `,L[e].correction+=`\\dfrac{${u}-${$.listeMemeDenominateur[0].num}-${$.listeMemeDenominateur[1].num}}{${u}} = `,L[e].correction+=`${(0,i.Pj)(u-$.listeMemeDenominateur[0].num-$.listeMemeDenominateur[1].num,u).texFraction}`,u!=_.den?L[e].correction+=` = ${L[e].fractions[4].texFraction}$`:L[e].correction+="$";for(L[0].correction+=`<br>${L[0].prenoms[0]} fait donc $${L[0].fractions[0].texFraction}$ à ${L[0].fractions[1]}, `,L[0].correction+=`$${L[0].fractions[2].texFraction}$ à ${L[0].fractions[3]} et `,L[0].correction+=`$${L[0].fractions[4].texFraction}$ à ${L[0].fractions[5]}.`,L[0].correction+="<br> Avec les mêmes dénominateurs pour pouvoir comparer, ",L[0].correction+=`${L[0].prenoms[0]} fait donc $${f[0].texFraction}$ à ${L[0].fractions[1]}, `,L[0].correction+=`$${f[1].texFraction}$ à ${L[0].fractions[3]} et `,L[0].correction+=`$${f[2].texFraction}$ à ${L[0].fractions[5]}.`,q.egal(v)&&q.egal(_)?L[0].correction+=`<br> ${(0,t.MZ9)(`Les trois fractions sont équivalentes, ${L[0].prenoms[0]} parcours donc la même distance dans les trois disciplines.`)}`:(L[0].correction+=`<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${d[0].texFraction}$, $${d[1].texFraction}$, $${d[2].texFraction}$.`,L[0].correction+=`<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${m[0].texFraction}$, $${m[1].texFraction}$, $${m[2].texFraction}$.`,L[0].correction+=`<br> ${(0,t.MZ9)(`C'est donc à ${L[0].fractions[L[0].fractions.indexOf(m[2])+1]} que ${L[0].prenoms[0]} fait la plus grande distance.`)}`),L[1].correction+=`<br>${L[1].fractions[1]} a donc remporté $${L[1].fractions[0].texFraction}$, `,L[1].correction+=`${L[1].fractions[3]} a remporté $${L[1].fractions[2].texFraction}$ et `,L[1].correction+=`${L[1].fractions[5]} $${L[1].fractions[4].texFraction}$.`,L[1].correction+="<br> Avec les mêmes dénominateurs pour pouvoir comparer, ",L[1].correction+=`${L[1].fractions[1]} remporte donc $${f[0].texFraction}$, `,L[1].correction+=`${L[1].fractions[3]} $${f[1].texFraction}$ et `,L[1].correction+=`${L[1].fractions[5]} $${f[2].texFraction}$.`,q.egal(v)&&q.egal(_)?L[1].correction+=`<br> ${(0,t.MZ9)("Les trois fractions sont équivalentes, les trois candidates ont donc remporté le même nombre de suffrages.")}`:(L[1].correction+=`<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${d[0].texFraction}$, $${d[1].texFraction}$, $${d[2].texFraction}$.`,L[1].correction+=`<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${m[0].texFraction}$, $${m[1].texFraction}$, $${m[2].texFraction}$.`,L[1].correction+=`<br> ${(0,t.MZ9)(`C'est donc ${L[1].fractions[L[1].fractions.indexOf(m[2])+1]} qui a été élue.`)}`),R=[],P=C[(0,t.nSR)(2,C.length-1)],q=(0,i.Pj)(1,3),v=(0,i.Pj)(1,3),_=(0,i.Pj)(1,3),M=(0,i.Pj)(1,3);q.num==v.num||q.num==_.num||q.num==M.num||v.num==_.num||v.num==M.num||_.num==M.num||q.superieurlarge((0,i.Pj)(1,3))||v.superieurlarge((0,i.Pj)(1,3))||_.superieurlarge((0,i.Pj)(1,3));)p=(0,t.nSR)(1,5),b=(0,t.q$q)(P),x=(0,t.nSR)(1,11,p),h=(0,t.q$q)(P),F=(0,t.nSR)(1,17,[p,x]),g=(0,t.q$q)(P),j=b*h*g-p*h*g-x*b*g-F*b*h,D=b*h*g,q=(0,i.Pj)(p,b).simplifie(),v=(0,i.Pj)(x,h).simplifie(),_=(0,i.Pj)(F,g).simplifie(),M=(0,i.Pj)(j,D).simplifie();R.push({prenoms:[(0,t.rV2)()],fractions:[q,"carmin",v,"ocre jaune",_,"turquoise",M,"pourpre"],enonce:"",question:"Quelle est elle la couleur qui recouvre le plus de surface ?",correction:""}),R.push({prenoms:[],fractions:[q,"la culture des légumes",v,"la culture des plantes aromatiques",_,"une serre servant aux semis",M,"la culture des fraisiers"],enonce:"",question:"Quelle est la culture qui occupe le plus de surface ?",correction:""}),R.push({prenoms:[],fractions:[q,"le pays organisateur",v,"l'ensemble des supporters des deux équipes en jeu",_,"les sponsors et officiels",M,"les places en vente libre"],enonce:"",question:"Quelle est la catégorie la plus importante dans le stade ?",correction:""}),R[0].enonce=`${R[0].prenoms[0]} colorie un mandala selon les proportions suivantes :  $${R[0].fractions[0].texFraction}$ en ${R[0].fractions[1]}, `,R[0].enonce+=`$${R[0].fractions[2].texFraction}$ en  ${R[0].fractions[3]}, `,R[0].enonce+=`$${R[0].fractions[4].texFraction}$ en  ${R[0].fractions[5]} et `,R[0].enonce+=`le reste en ${R[0].fractions[7]}.`,R[1].enonce=`Un jardin est aménagé selon les proportions suivantes :  $${R[1].fractions[0].texFraction}$ par ${R[1].fractions[1]}, `,R[1].enonce+=`$${R[1].fractions[2].texFraction}$ par  ${R[1].fractions[3]}, `,R[1].enonce+=`$${R[1].fractions[4].texFraction}$ par  ${R[1].fractions[5]} et `,R[1].enonce+=`le reste par ${R[1].fractions[7]}.`,R[2].enonce=`Pour chaque match, les places du stade sont mises en vente dans les proportions suivantes :  $${R[2].fractions[0].texFraction}$ pour ${R[2].fractions[1]}, `,R[2].enonce+=`$${R[2].fractions[2].texFraction}$ pour  ${R[2].fractions[3]}, `,R[2].enonce+=`$${R[2].fractions[4].texFraction}$ pour  ${R[2].fractions[5]} et `,R[2].enonce+=`le reste pour ${R[2].fractions[7]}.`,l=(0,i.yy)(q,v,_,M),f=(0,t.Dmi)(l.listeMemeDenominateur),d=(0,t.Dmi)(l.listeRangeeMemeDenominateur),m=(0,t.Dmi)(l.listeRangee),u=l.listeMemeDenominateur[0].den;for(let e=0;e<3;e++)R[e].correction="Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>",l.liste[0].den==u&&l.liste[1].den==u&&l.liste[2].den==u?R[e].correction+="Les fractions de l'énoncé ont déjà le même dénominateur.":(R[e].correction+="Réduisons les fractions de l'énoncé au même dénominateur :  ",R[e].correction+=`$${l.liste[0].texFraction}$ `,l.liste[0].den!=u?R[e].correction+=`$= ${l.listeMemeDenominateur[0].texFraction}$ ; `:R[e].correction+=" ; ",R[e].correction+=`$${l.liste[1].texFraction}$ `,l.liste[1].den!=u?R[e].correction+=`$= ${l.listeMemeDenominateur[1].texFraction}$ et `:R[e].correction+=" et ",R[e].correction+=`$${l.liste[2].texFraction}$ `,l.liste[2].den!=u?R[e].correction+=`$= ${l.listeMemeDenominateur[2].texFraction}$.<br>`:R[e].correction+=".<br>");R[0].correction+="Calculons alors la fraction du mandala recouverte en ",R[1].correction+="Calculons d'abord la fraction du jardin occupée par ",R[2].correction+="Calculons d'abord la fraction du stade occupée par ";for(let e=0;e<3;e++)R[e].correction+=`${R[e].fractions[5]} : <br>`,R[e].correction+=`$1-${R[e].fractions[0].texFraction}-${R[e].fractions[2].texFraction}-${R[e].fractions[4].texFraction} = `,R[e].correction+=`\\dfrac{${u}}{${u}}-${f[0].texFraction}-${f[1].texFraction}-${f[2].texFraction} = `,R[e].correction+=`\\dfrac{${u}-${f[0].num}-${f[1].num}-${f[2].num}}{${u}} = `,R[e].correction+=`${f[3].texFraction}`,f[3].den!=R[e].fractions[6].den?R[e].correction+=` = ${R[e].fractions[6].texFraction}$`:R[e].correction+="$";switch(R[0].correction+=`<br>Le mandala est donc colorié de la façon suivante : $${R[0].fractions[0].texFraction}$ en ${R[0].fractions[1]}, `,R[0].correction+=`$${R[0].fractions[2].texFraction}$ en ${R[0].fractions[3]}, `,R[0].correction+=`$${R[0].fractions[4].texFraction}$ en ${R[0].fractions[5]} et `,R[0].correction+=`$${R[0].fractions[6].texFraction}$ en ${R[0].fractions[7]}.`,R[0].correction+="<br> Avec les mêmes dénominateurs pour pouvoir comparer, ",R[0].correction+=`le mandala est donc colorié de la façon suivante : $${f[0].texFraction}$ en ${R[0].fractions[1]}, `,R[0].correction+=`$${f[1].texFraction}$ en ${R[0].fractions[3]}, `,R[0].correction+=`$${f[2].texFraction}$ en ${R[0].fractions[5]} et `,R[0].correction+=`$${f[3].texFraction}$ en ${R[0].fractions[7]}.`,R[0].fractions[0].egal(R[0].fractions[2])&&R[0].fractions[0].egal(R[0].fractions[4])&&R[0].fractions[0].egal(R[0].fractions[6])?R[0].correction+=`<br> ${(0,t.MZ9)(`Les quatre fractions sont équivalentes, ${R[0].prenoms[0]} colorie donc la même surface avec les quatre couleurs.`)}`:(R[0].correction+=`<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${d[0].texFraction}$, $${d[1].texFraction}$, $${d[2].texFraction}$, $${d[3].texFraction}$.`,R[0].correction+=`<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${m[0].texFraction}$, $${m[1].texFraction}$, $${m[2].texFraction}$, $${m[3].texFraction}$.`,R[0].correction+=`<br> ${(0,t.MZ9)(`C'est donc en ${R[0].fractions[R[0].fractions.indexOf(m[3])+1]} que le mandala est le plus recouvert.`)}`),R[1].correction+=`<br>Le jardin est donc occupé de la façon suivante : $${R[1].fractions[0].texFraction}$ par ${R[1].fractions[1]}, `,R[1].correction+=`$${R[1].fractions[2].texFraction}$ par ${R[1].fractions[3]}, `,R[1].correction+=`$${R[1].fractions[4].texFraction}$ par ${R[1].fractions[5]} et `,R[1].correction+=`$${R[1].fractions[6].texFraction}$ par ${R[1].fractions[7]}.`,R[1].correction+="<br> Avec les mêmes dénominateurs pour pouvoir comparer, ",R[1].correction+=`le jardin est donc occupé de la façon suivante : $${f[0].texFraction}$ par ${R[1].fractions[1]}, `,R[1].correction+=`$${f[1].texFraction}$ par ${R[1].fractions[3]}, `,R[1].correction+=`$${f[2].texFraction}$ par ${R[1].fractions[5]} et `,R[1].correction+=`$${f[3].texFraction}$ par ${R[1].fractions[7]}.`,R[1].fractions[0].egal(R[1].fractions[2])&&R[1].fractions[0].egal(R[1].fractions[4])&&R[1].fractions[0].egal(R[1].fractions[6])?R[1].correction+=`<br> ${(0,t.MZ9)("Les quatre fractions sont équivalentes, la même surface du jardin est donc occupée par les quatre cultures.")}`:(R[1].correction+=`<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${d[0].texFraction}$, $${d[1].texFraction}$, $${d[2].texFraction}$, $${d[3].texFraction}$.`,R[1].correction+=`<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${m[0].texFraction}$, $${m[1].texFraction}$, $${m[2].texFraction}$, $${m[3].texFraction}$.`,R[1].correction+=`<br> ${(0,t.MZ9)(`C'est donc par ${R[1].fractions[R[1].fractions.indexOf(m[3])+1]}\n                     que le jardin est le plus occupé.`)}`),R[2].correction+=`<br>Le stade est donc occupé de la façon suivante : $${R[2].fractions[0].texFraction}$ pour ${R[2].fractions[1]}, `,R[2].correction+=`$${R[2].fractions[2].texFraction}$ pour ${R[2].fractions[3]}, `,R[2].correction+=`$${R[2].fractions[4].texFraction}$ pour ${R[2].fractions[5]} et `,R[2].correction+=`$${R[2].fractions[6].texFraction}$ pour ${R[2].fractions[7]}.`,R[2].correction+="<br> Avec les mêmes dénominateurs pour pouvoir comparer, ",R[2].correction+=`le stade est donc occupé de la façon suivante : $${f[0].texFraction}$ pour ${R[2].fractions[1]}, `,R[2].correction+=`$${f[1].texFraction}$ pour ${R[2].fractions[3]}, `,R[2].correction+=`$${f[2].texFraction}$ pour ${R[2].fractions[5]} et `,R[2].correction+=`$${f[3].texFraction}$ pour ${R[2].fractions[7]}.`,R[2].fractions[0].egal(R[2].fractions[2])&&R[2].fractions[0].egal(R[2].fractions[4])&&R[2].fractions[0].egal(R[2].fractions[6])?R[2].correction+=`<br> ${(0,t.MZ9)("Les quatre fractions sont équivalentes, chaque catégorie a donc la même importance dans le stade.")}`:(R[2].correction+=`<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${d[0].texFraction}$, $${d[1].texFraction}$, $${d[2].texFraction}$, $${d[3].texFraction}$.`,R[2].correction+=`<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${m[0].texFraction}$, $${m[1].texFraction}$, $${m[2].texFraction}$, $${m[3].texFraction}$.`,R[2].correction+=`<br> ${(0,t.MZ9)(`C'est donc pour ${R[2].fractions[R[2].fractions.indexOf(m[3])+1]} que le nombre de places est le plus important.`)}`),r[Z]){case 1:e=`${L[0].enonce} <br> ${L[0].question}`,this.debug?(e+="<br>",e+=`<br> ${L[0].correction}`,k=""):k=`${L[0].correction}`;break;case 2:e=`${L[1].enonce} <br> ${L[1].question}`,this.debug?(e+="<br>",e+=`<br> ${L[1].correction}`,k=""):k=`${L[1].correction}`;break;case 3:e=`${R[0].enonce} <br> ${R[0].question}`,this.debug?(e+="<br>",e+=`<br> ${R[0].correction}`,k=""):k=`${R[0].correction}`;break;case 4:e=`${R[1].enonce} <br> ${R[1].question}`,this.debug?(e+="<br>",e+=`<br> ${R[1].correction}`,k=""):k=`${R[1].correction}`;break;case 5:e=`${R[2].enonce} <br> ${R[2].question}`,this.debug?(e+="<br>",e+=`<br> ${R[2].correction}`,k=""):k=`${R[2].correction}`}-1==this.liste_questions.indexOf(e)&&(this.liste_questions.push(e),this.liste_corrections.push(k),Z++),I++}(0,t.KsX)(this)}}}}]);