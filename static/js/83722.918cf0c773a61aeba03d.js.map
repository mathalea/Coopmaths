{"version":3,"file":"js/83722.918cf0c773a61aeba03d.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/CM/CM002.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, creerCouples, choice, combinaisonListes } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Tables de divisions'\nexport const interactifReady = true\nexport const interactifType = 'numerique'\nexport const amcReady = true\nexport const amcType = 'AMCNum' // Question numérique\n\n/**\n * Tables de divisions classiques, à trou ou un mélange des deux.\n *\n * Par défaut ce sont les tables de 2 à 9 mais on peut choisir les tables que l'on veut\n * @author Rémi Angot\n* Référence CM002\n  */\nexport default function TablesDeDivisions (tablesParDefaut = '2-3-4-5-6-7-8-9') {\n  // Diviser deux nombres\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = tablesParDefaut\n  this.sup2 = 1 // classique|a_trous|melange\n  this.interactif = true\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.tailleDiaporama = 100\n\n  this.nouvelleVersion = function () {\n    this.sup2 = parseInt(this.sup2)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (!this.sup) {\n      // Si aucune table n'est saisie\n      this.sup = '2-3-4-5-6-7-8-9'\n    }\n    let tables = []\n    if (typeof this.sup === 'number') {\n      // Si c'est un nombre c'est qu'il y a qu'une seule table\n      tables[0] = this.sup\n    } else {\n      tables = this.sup.split('-') // Sinon on crée un tableau à partir des valeurs séparées par des -\n    }\n    const couples = creerCouples(\n      tables,\n      [2, 3, 4, 5, 6, 7, 8, 9, 10],\n      this.nbQuestions\n    ) // Liste tous les couples possibles (2,3)≠(3,2)\n    const listeTypeDeQuestions = combinaisonListes(\n      ['classique', 'a_trous'],\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let typeDeQuestions = 'a_trous'\n    for (let i = 0, a, b, texte, texteCorr; i < this.nbQuestions; i++) {\n      a = couples[i][0]\n      b = couples[i][1]\n      if (parseInt(this.sup2) === 1) {\n        typeDeQuestions = 'classique'\n      } else if (parseInt(this.sup2) === 2) {\n        typeDeQuestions = 'a_trous'\n      } else {\n        typeDeQuestions = listeTypeDeQuestions[i]\n      }\n      if (typeDeQuestions === 'classique') {\n        // classique\n        texte = '$ ' + a * b + ' \\\\div ' + a + ' = \\\\dotfill $'\n        if (this.interactif && context.isHtml) texte = `$ ${a * b} \\\\div ${a} = $` + ajouteChampTexte(this, i)\n        setReponse(this, i, b)\n      } else {\n        // a trous\n        if (choice([true, false])) {\n          texte = `$ ${a * b} \\\\div \\\\ldots\\\\ldots = ${b}$`\n          if (this.interactif && context.isHtml) texte = `$ ${a * b} \\\\div $` + ajouteChampTexte(this, i) + `$ = ${b} $`\n          setReponse(this, i, a)\n        } else {\n          texte = `$ \\\\ldots\\\\ldots \\\\div ${a}  = ${b}$`\n          if (this.interactif && context.isHtml) texte = ajouteChampTexte(this, i) + `$ \\\\div ${b} = ${a} $`\n          setReponse(this, i, a * b)\n        }\n      }\n      texteCorr = `$ ${a * b} \\\\div ${a} = ${b}$`\n      if (context.isDiaporama) {\n        texte = texte.replace('= \\\\dotfill', '')\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = [\n    'Choix des tables',\n    'Nombres séparés par des tirets'\n  ] // Texte, tooltip\n  this.besoinFormulaire2Numerique = [\n    'Style de questions',\n    3,\n    '1 : Classique\\n2: À trous\\n3: Mélangé'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","TablesDeDivisions","tablesParDefaut","Exercice","this","sup","sup2","interactif","consigne","spacing","tailleDiaporama","nouvelleVersion","parseInt","listeQuestions","listeCorrections","tables","split","couples","creerCouples","nbQuestions","listeTypeDeQuestions","combinaisonListes","typeDeQuestions","a","b","texte","texteCorr","i","context","ajouteChampTexte","setReponse","choice","replace","push","listeQuestionsToContenu","besoinFormulaireTexte","besoinFormulaire2Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}