{"version":3,"file":"js/35213.3020d1aacf0e34c2f923.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5N14.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, enleveElement, choice, miseEnEvidence, obtenirListeFractionsIrreductibles, texFraction, texFractionSigne, combinaisonListes } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\nexport const amcReady = true\nexport const amcType = 'qcmMono'\nexport const titre = 'Comparer deux fractions (dénominateurs multiples)'\n\n/**\n* Comparer deux fractions dont les dénominateurs sont multiples (avec un coefficient paramétrable qui est par défaut inférieur à 11)\n* @author Rémi Angot\n* 5N14\n* Ajout du paramètre d'inclusion de nombres négatifs le 14/08/2021 : Guillaume Valmont\n* rendu interactif + AMC par Jean-Claude Lhote\n*/\nexport default function ExerciceComparerDeuxFractions (max = 11) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max // Correspond au facteur commun\n  this.consigne = 'Comparer les fractions suivantes.'\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n  this.sup2 = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    const listeSignes = combinaisonListes([-1, 1], this.nbQuestions)\n    const listeFractions = obtenirListeFractionsIrreductibles()\n    for (let i = 0, fraction, a, b, k, positifOuNegatif, signeAsurB, texte, texteCorr, signe, signe2; i < this.nbQuestions; i++) {\n      this.autoCorrection[i] = {}\n      if (this.sup2 === true) positifOuNegatif = listeSignes[i]\n      else positifOuNegatif = 1\n      fraction = choice(listeFractions)\n      a = fraction[0] * positifOuNegatif\n      b = fraction[1]\n      k = randint(2, this.sup)\n      let ecart = choice([-4, -3, -2, -1, 1, 2, 3, 4], [-k * a, k * a]) // On exclue -k * a pour ne pas avoir une fraction nulle\n      if (k * a + ecart <= 0) {\n        ecart = ecart * (-1)\n      }\n      if (ecart > 0) {\n        signe = '<'\n        signe2 = '>'\n      } else {\n        signe = '>'\n        signe2 = '<'\n      }\n      enleveElement(listeFractions, fraction) // Il n'y aura pas 2 fois la même réponse\n\n      const ordreDesFractions = randint(1, 2)\n      if (!(this.interactif || context.isAmc)) {\n        if (ordreDesFractions === 1) {\n          texte = `$${texFractionSigne(a, b)} \\\\quad$ et $\\\\quad ${texFractionSigne(k * a + ecart, k * b)}$`\n        } else {\n          texte = `$${texFractionSigne(k * a + ecart, k * b)} \\\\quad$ et $\\\\quad ${texFractionSigne(a, b)}$`\n        }\n        if (!context.isHtml) {\n          texte = texte.replace('\\\\quad$ et $\\\\quad', '\\\\ldots\\\\ldots\\\\ldots')\n        }\n        if (a * b < 0) signeAsurB = '-'\n        else signeAsurB = ''\n        texteCorr = `$${texFractionSigne(a, b)}= ${signeAsurB} ${texFraction(Math.abs(a) + miseEnEvidence('\\\\times  ' + k), Math.abs(b) + miseEnEvidence('\\\\times  ' + k))}=${texFractionSigne(a * k, b * k)}\\\\quad$`\n        if (ordreDesFractions === 1) {\n          texteCorr += `  et   $\\\\quad${texFractionSigne(a * k, b * k)} ${signe} ${texFractionSigne(a * k + ecart, b * k)} \\\\quad$ donc $\\\\quad ${texFractionSigne(a, b)} ${signe} ${texFractionSigne(a * k + ecart, b * k)}$ `\n        } else {\n          texteCorr += `  et   $\\\\quad${texFractionSigne(a * k + ecart, b * k)} ${signe2} ${texFractionSigne(a * k, b * k)} \\\\quad$ donc $\\\\quad ${texFractionSigne(a * k + ecart, b * k)} ${signe2} ${texFractionSigne(a, b)} $ `\n        }\n      } else {\n        this.autoCorrection[i] = {\n          enonce: 'comparer les fractions suivantes : ' + (ordreDesFractions < 2 ? `$${texFractionSigne(a, b)} \\\\quad$ et $\\\\quad ${texFractionSigne(k * a + ecart, k * b)}$` : `$${texFractionSigne(k * a + ecart, k * b)} \\\\quad$ et $\\\\quad ${texFractionSigne(a, b)}$`),\n          propositions: [\n            {\n              texte: ordreDesFractions < 2 ? `$${texFractionSigne(a, b)} < ${texFractionSigne(k * a + ecart, k * b)}$` : `$${texFractionSigne(k * a + ecart, k * b)} < ${texFractionSigne(a, b)}$`,\n              statut: ordreDesFractions < 2 ? ecart > 0 : ecart < 0\n            },\n            {\n              texte: ordreDesFractions < 2 ? `$${texFractionSigne(a, b)} > ${texFractionSigne(k * a + ecart, k * b)}$` : `$${texFractionSigne(k * a + ecart, k * b)} >${texFractionSigne(a, b)}$`,\n              statut: ordreDesFractions < 2 ? ecart < 0 : ecart > 0\n            }\n          ],\n          options: { ordered: false }\n        }\n        texte = propositionsQcm(this, i).texte\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this) // Espacement de 2 em entre chaque questions.\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale du coefficient multiplicateur', 99999]\n  this.besoinFormulaire2CaseACocher = ['Inclure des nombres négatifs']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["interactifReady","interactifType","amcReady","amcType","titre","ExerciceComparerDeuxFractions","max","Exercice","this","sup","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","sup2","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","listeSignes","combinaisonListes","listeFractions","obtenirListeFractionsIrreductibles","fraction","a","b","k","positifOuNegatif","signeAsurB","texte","texteCorr","signe","signe2","i","choice","randint","ecart","enleveElement","ordreDesFractions","interactif","context","enonce","texFractionSigne","propositions","statut","options","ordered","propositionsQcm","replace","texFraction","Math","abs","miseEnEvidence","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}