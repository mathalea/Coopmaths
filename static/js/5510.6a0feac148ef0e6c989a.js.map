{"version":3,"file":"js/5510.6a0feac148ef0e6c989a.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/6e/can6C27.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { randint, choice, texNombrec, prenomF, prenomM, texPrix, texteEnCouleurEtGras, texteEnCouleur, calcul } from '../../../modules/outils.js'\nexport const titre = 'Résoudre un problème concret'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora & Jean-Claude Lhote\n * Référence can6C26\n * Date de publication 21/10/2021\n*/\nexport default function PetitsProblemeArithmetique () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.typeExercice = 'simple' // Cette ligne est très importante pour faire faire un exercice simple !\n  this.nbQuestions = 1\n  this.tailleDiaporama = 1\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n  this.formatChampTexte = 'largeur15 inline'\n  this.nouvelleVersion = function () {\n    let a, b, r, e, m, somme, prenom1, prenom2\n    switch (choice([1, 2, 3, 4, 5, 6, 7, 8])) {\n      case 1:// de plus\n        r = randint(4, 7) * 10\n        e = randint(1, 3) * 10\n        m = r - e\n        somme = m + r\n        this.reponse = m + r\n        prenom1 = prenomF()\n        prenom2 = prenomF()\n        while (prenom2 === prenom1) {\n          prenom2 = prenomF()\n        }\n        this.question = ` ${prenom2} dit à ${prenom1}  : \"J'ai ${texPrix(r)} € soit ${texPrix(e)} € de plus que toi.\"<br>`\n        this.question += 'Combien d\\'argent en tout possèdent les deux filles ?'\n        this.correction = `D'après l'énoncé ${prenom2} a : ${texPrix(r)} €<br>${prenom2}  a ${texPrix(e)} €`\n        this.correction += texteEnCouleurEtGras(' de plus ')\n        this.correction += `que ${prenom1} signifie que ${prenom1} a ${texPrix(e)}€`\n        this.correction += texteEnCouleurEtGras(' de moins ')\n        this.correction += `que ${prenom2} . <br>${prenom1} a donc : ${texPrix(r)} € - ${texPrix(e)} € = ${texPrix(m)} €`\n        this.correction += `<br>${texPrix(r)} € + ${texPrix(m)} € = ${texPrix(somme)} €`\n        this.correction += texteEnCouleur(`<br>Les deux filles possèdent en tout : ${texPrix(somme)}€`)\n        break\n\n      case 2://  de moins\n        r = randint(4, 7) * 10\n        e = randint(1, 3) * 10\n        m = r + e\n        somme = m + r\n        this.reponse = m + r\n        prenom1 = prenomF()\n        prenom2 = prenomF()\n        while (prenom2 === prenom1) {\n          prenom2 = prenomF()\n        }\n        this.question = ` ${prenom2} dit à ${prenom1}  : \"J'ai ${texPrix(r)} € soit ${texPrix(e)} € de moins que toi.\"<br>`\n        this.question += 'Combien d\\'argent en tout possèdent les deux filles ? '\n\n        this.correction = `D'après l'énoncé ${prenom2} a : ${texPrix(r)} €<br>${prenom2}  a ${texPrix(e)} €`\n        this.correction += texteEnCouleurEtGras(' de moins ')\n        this.correction += `que ${prenom1} signifie que ${prenom1} a ${texPrix(e)} €`\n        this.correction += texteEnCouleurEtGras(' de plus ')\n        this.correction += `que ${prenom2} . <br>${prenom1} a donc : ${texPrix(r)} € + ${texPrix(e)}€ = ${texPrix(m)} €`\n        this.correction += `<br>${texPrix(r)} € + ${texPrix(m)} € = ${texPrix(somme)} €`\n        this.correction += texteEnCouleur(`<br>Les deux filles possèdent en tout : ${texPrix(somme)}€`)\n        break\n\n      case 3://  age\n        a = randint(10, 20)\n        b = randint(2, 8)\n        this.reponse = a - b\n        this.question = `${prenomF()} a ${a} ans.`\n        this.question += `<br>Sachant qu'elle a ${b} ans de plus que son frère, quel âge a celui-ci?`\n        this.correction = `L'âge de son frère est  : $${a}-${b}=${a - b}$ ans.`\n        break\n\n      case 4://  boîte d'oeufs\n        a = randint(40, 80, [42, 48, 54, 60, 66, 72, 78])\n        this.reponse = Math.ceil(a / 6)\n        this.question = `Combien de boîtes de 6 oeufs faut-il pour ranger $${a}$ oeufs ?`\n        this.correction = `$${a}=6\\\\times${Math.floor(a / 6)} + ${a - 6 * Math.floor(a / 6)}$.<br>\n                         Il en faut  donc  : $${Math.floor(a / 6)} +1=${Math.floor(a / 6) + 1}$.`\n        break\n\n      case 5://  brouette\n        a = randint(12, 22) * 10\n        if (a / 20 % 1 !== 0) {\n          this.reponse = Math.ceil(a / 20)\n          this.question = `${prenomM()} a $${a}$ kg de gravats à déplacer avec sa brouette.<br> Dans celle-ci, il met $20$ kg de gravats.<br>\n              Combien de brouettes faudra-t-il pour déplacer tous les gravats? `\n          this.correction = `$${a}=20\\\\times${Math.floor(a / 20)} + ${a - 20 * Math.floor(a / 20)}$.<br>\n              Il faudra donc $${Math.floor(a / 20)}+1$ brouettes pour déplacer tous les gravats.`\n        } else {\n          this.reponse = Math.floor(a / 20)\n          this.question = `${prenomM()} a $${a}$ kg de gravats à déplacer avec sa brouette.<br> Dans celle-ci, il met $20$ kg de gravats.<br>\n              Combien de brouettes faudra-t-il pour déplacer tous les gravats? `\n          this.correction = `$${a}=20\\\\times${Math.floor(a / 20)} + ${a - 20 * Math.floor(a / 20)}$.<br>\n              Il faudra donc $${Math.floor(a / 20)}$ brouettes pour déplacer tous les gravats.`\n        }\n        break\n\n      case 6://  rendu de monnaie1\n        a = randint(1, 3) * 10\n        e = randint(1, 4)\n        b = a + 2 * e\n        this.reponse = 50 - a\n        this.question = `Un livre coûte ${texPrix(b)} €. Je donne un billet de $50$  € et ${e} ${e > 1 ? 'pièces' : 'pièce'} de 2  €. <br>\nCombien me rend-on ?`\n        this.correction = `On doit me rendre $${calcul(50 + 2 * e)}-${b}=${this.reponse}$ €.`\n        break\n\n      case 7://  rendu de monnaie2\n        a = randint(1, 6) + (randint(1, 9)) / 10\n        this.reponse = 10 - a\n        this.question = `Chez le boulanger, je dois payer  $${texPrix(a)}$ €. <br>\n        Je donne un billet de $10$  €. <br>\nCombien me rend-on ?`\n        this.correction = `On doit me rendre $10-${texNombrec(a)}=${texNombrec(10 - a)}$ €.`\n        break\n      case 8:// partage\n        b = randint(4, 7)\n        a = randint(8, 11, 10) * b\n        this.reponse = a / b\n        this.question = `  ${prenomF()} veut partager $${a}$ billes équitablement en $${b}$ enfants. Combien chacun aura-t-il de billes ? <br>`\n        this.correction = `Chaque enfant aura  $${a}\\\\div ${b}=${texNombrec(a / b)}$ billes.`\n        break\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","PetitsProblemeArithmetique","typeExercice","formatChampTexte","a","b","r","e","m","somme","prenom1","prenom2","choice","randint","reponse","prenomF","question","texPrix","correction","texteEnCouleurEtGras","texteEnCouleur","Math","ceil","floor","prenomM","calcul","texNombrec"],"sourceRoot":""}