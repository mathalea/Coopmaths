{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N23-5.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["amcReady","amcType","interactifReady","titre","SensDeLaFraction","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","qcmDisponible","modeQcm","nouvelleVersion","qcm","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","f","i","cpt","randint","texFraction","autoCorrection","enonce","propositions","statut","Math","abs","choice","Number","isInteger","fraction","texNombre2","calcul","fractionDecimale","texFractionSimplifiee","floor","num","options","ordered","lastChoice","interactif","propositionsQcm","replace","indexOf","push","listeQuestionsToContenu","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","interactifObligatoire","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceQcm","exercice","document","addEventListener","$","checkbox","button","querySelector","event","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","length","spanReponseLigne","forEach","proposition","indice","label","check","style","backgroundColor","checked","typeFeedback","innerHTML","fontSize","messageFeedback","id","feedback","type","querySelectorAll","uicheck","classList","add","espace","context","undefined","shuffleJusqua","doublonsTrouves","j","splice","elimineDoublons","rep","ajouteChampTexte","texteApres","inline","numeric","setReponse","digits","decimals","signe","exposant_nb_chiffres","exposant_signe","approx","reponse","valeur","exerciceInteractif","getElementById","value","replaceAll","toString","questionNumerique","divMessage","erreur","niveau","message","messageUtilisateur","divErreur","code","remove","html"],"mappings":"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","file":"js/6485.fc8a8877e341e2fd7d79.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, texFraction, calcul, choice, texNombre2 } from '../../modules/outils.js'\nimport { fraction } from '../../modules/Fractions.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType =1 // QCM \nexport const interactifReady = true\nexport const titre = 'Sens de l’écriture fractionnaire'\n\n/**\n * Donner la fraction correspondant à un nombre ou à un calcul\n * @Auteur Jean-Claude Lhote\n * Ref 6N23-5\n * Publié le 10/03/2021\n */\nexport default function SensDeLaFraction () {\n  Exercice.call(this)\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.nbQuestions = 4\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.pasDeVersionLatex = false\n  this.pas_de_version_HMTL = false\n  this.qcmDisponible = true\n  this.modeQcm = false\n\n  this.nouvelleVersion = function () {\n    this.qcm = ['6N23-5', [], \"Sens de l'écriture fractionnaire\", 1]\n    this.listeQuestions = []\n    this.listeCorrections = []\n    const typeDeQuestionsDisponibles = [1, 2, 3, 4]\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions)\n\n    for (let i = 0, texte, texteCorr, a, b, f, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = ''\n      texteCorr = ''\n\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          a = randint(10, 25)\n          b = randint(10, 25, a)\n          texte = `Le quotient de $${a}$ par $${b}$ s'écrit en écriture fractionnaire : $${texFraction(\n              '\\\\phantom{00000}',\n              '\\\\phantom{00000}'\n            )}$`\n          texteCorr = `Le quotient de $${a}$ par $${b}$ s'écrit $${texFraction(a, b)}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texFraction(a, b)}$`,\n              statut: true\n            },\n            {\n              texte: `$${texFraction(b, a)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(Math.abs(a - b), b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a + b, b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a * 10, b)}$`,\n              statut: false\n            }\n          ]\n          break\n\n        case 2:\n          a = randint(10, 25)\n          b = randint(10, 25, a)\n          texte = `Le nombre qui, multiplié par $${b}$, donne $${a}$ s'écrit en écriture fractionnaire : $${texFraction(\n              '\\\\phantom{00000}',\n              '\\\\phantom{00000}'\n            )}$`\n          texteCorr = `Le nombre qui, multiplié par $${b}$, donne $${a}$ s'écrit $${texFraction(a, b)}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texFraction(a, b)}$`,\n              statut: true\n            },\n            {\n              texte: `$${texFraction(b, a)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(Math.abs(a - b), b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a + b, b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a * 10, b)}$`,\n              statut: false\n            }\n          ]\n          break\n\n        case 3:\n          a = randint(10, 25)\n          b = randint(10, 25, a)\n          texte = `$${a}\\\\div ${b}$ s'écrit en écriture fractionnaire : $${texFraction(\n              '\\\\phantom{00000}',\n              '\\\\phantom{00000}'\n            )}$`\n          texteCorr = `$${a}\\\\div ${b}$ s'écrit  $${texFraction(a, b)}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texFraction(a, b)}$`,\n              statut: true\n            },\n            {\n              texte: `$${texFraction(b, a)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(Math.abs(a - b), b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a + b, b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a * 10, b)}$`,\n              statut: false\n            }\n          ]\n          break\n\n        case 4:\n\n          a = randint(1, 5) * 2 + 1\n          b = choice([2, 4, 5, 10])\n          a += b\n          if (Number.isInteger(a / b)) {\n            a++\n          }\n          f = fraction(a, b)\n\n          texte = `Le nombre $${texNombre2(calcul(a / b))}$ s'écrit en écriture fractionnaire : $${texFraction(\n            '\\\\phantom{00000}',\n            '\\\\phantom{00000}'\n          )}$`\n          texteCorr = `Le nombre $${texNombre2(calcul(a / b))}$ s'écrit  $${f.fractionDecimale().texFraction}$`\n          if (f.fractionDecimale().texFraction !== f.texFractionSimplifiee) {\n            texteCorr += ` ou $${f.texFractionSimplifiee}$.`\n          } else texte += '.'\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${f.fractionDecimale().texFraction}$`,\n              statut: true\n            },\n            {\n              texte: `$${texFraction(b, a)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a, b * 10)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a * 10, b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(Math.floor(a / b), fraction(calcul((a / b - Math.floor(a / b))) * 100, 100).fractionDecimale().num)}$`,\n              statut: false\n            }\n          ]\n          break\n      }\n      this.autoCorrection[i].options = {\n        ordered: false,\n        lastChoice: 5\n      }\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n        texte = texte.replace(`$${texFraction('\\\\phantom{00000}', '\\\\phantom{00000}')}$`, '')\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n\n  // this.besoinFormulaireNumerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  //  this.besoinFormulaire2Numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoinFormulaire3CaseACocher =['figure à main levée',true]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          if (document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`).value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposant_nb_chiffres = 0, exposant_signe = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.valeur = { digits, decimals, signe, exposant_nb_chiffres, exposant_signe, approx }\n}\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4) questionNumerique(exercice)\n  if (exercice.amcType === 1) exerciceQcm(exercice)\n  if (exercice.amcType === 2) exerciceQcm(exercice) // Avec des paramètres différents ??? @jeanClaude, qu'en penses-tu ?\n}\n","// Module regroupant les fonctions de gestions des erreurs.\n\nfunction divMessage (erreur) {\n// Construit le message d'erreur pour insertion dans la page.\n  if (erreur.niveau === 'erreur') {\n    return `<div id=\"affichageErreur\" class=\"ui error message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"frown outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'warning') {\n    return `<div id=\"affichageErreur\" class=\"ui warning message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bullhorn icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'info') {\n    return `<div id=\"affichageErreur\" class=\"ui message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bell outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n}\n\n/**\n*\n* @param {code:'code de l'erreur',[exercice : 'identifiant de l'exercice']}\n* @author Cédric GROLLEAU\n*/\nexport function messageUtilisateur (erreur) {\n  let divErreur = ''\n  if (erreur.code === 'codeExerciceInconnu') {\n    divErreur = divMessage({\n      titre: 'le code de l\\'exercice n\\'est pas valide',\n      message: `L'identifiant ${erreur.exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n      niveau: 'erreur'\n    })\n  } else if (erreur.code === 'mg32load') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module mg32',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  } else if (erreur.code === 'scratchLoad') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module scratch',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  }\n  document.getElementById('containerErreur').innerHTML = divErreur\n  document.getElementById('fermerMessageErreur').addEventListener('click', function () {\n    document.getElementById('affichageErreur').remove()\n  })\n}\n\n/**\n *\n * @param {id : 'id du div', texte: 'message', type:'error ou positive'}\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  const typeMessage = type || 'error'\n  if (id && texte) {\n    const html = `<div id=\"messageFeedback${id}\" class=\"ui ${typeMessage} message\" style=\"width:400px\"><i id=\"fermerFeedback${id}\" class=\"close icon\"></i>\n        ${texte}\n  </div>`\n    document.getElementById(id).innerHTML = html\n    document.getElementById(`fermerFeedback${id}`).addEventListener('click', function () {\n      document.getElementById(`messageFeedback${id}`).remove()\n    })\n  }\n}\n"],"sourceRoot":""}