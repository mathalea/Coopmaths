{"version":3,"file":"js/22934.c5e6b6f4b8be784ce8f9.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N31.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, calcul, texNombre, texPrix } from '../../modules/outils.js'\nexport const titre = 'Comparer des nombres décimaux'\n\n/**\n * Comparer deux nombres décimaux\n *\n * Les types de comparaisons sont :\n * * ab ? ba\n * * aa,bb ? aa,cc\n * * a,b  a,cc avec b>c\n * * 0,ab 0,ba\n * * 0,a0b 0,b0a\n * * a,b a,b0\n * * 0,0ab 0,0a0b\n * * a,bb  a,ccc avec b>c\n * * a+1,bb  a,cccc avec cccc>bb\n *\n * aa, bb, cc correspondent à des nombres à 2 chiffres (ces 2 chiffres pouvant être distincts)\n * @author Rémi Angot\n * 6N31\n */\nexport default function ComparerDecimaux () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Compléter avec le signe < , > ou =.'\n  this.nbQuestions = 8\n  this.nbCols = 2\n  this.nbColsCorr = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    const typesDeQuestionsDisponibles = [\n      choice([1, 4, 5]),\n      2,\n      2,\n      3,\n      6,\n      7,\n      8,\n      9\n    ] // une seule question du type inversion de chiffres (1,4,5)\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      let x\n      let y\n      let a\n      let b\n      let c\n      let zeroInutile = false\n\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // ab ba\n          a = randint(1, 9)\n          b = randint(1, 9, a)\n          x = a * 10 + b\n          y = b * 10 + a\n          break\n        case 2: // aa,bb aa,cc\n          a = randint(1, 99)\n          b = randint(11, 99)\n          c = randint(11, 99)\n          x = calcul(a + b / 100)\n          y = calcul(a + c / 100)\n          break\n        case 3: // a,b  a,cc avec b>c\n          a = randint(1, 99)\n          b = randint(1, 8)\n          c = randint(1, b * 10)\n          x = calcul(a + b / 10)\n          y = calcul(a + c / 100)\n          break\n        case 4: // 0,ab 0,ba\n          a = randint(1, 9)\n          b = randint(1, 9, a)\n          x = calcul((a * 10 + b) / 100)\n          y = calcul((b * 10 + a) / 100)\n          break\n        case 5: // 0,a0b 0,b0a\n          a = randint(1, 9)\n          b = randint(1, 9, a)\n          x = calcul((a * 100 + b) / 1000)\n          y = calcul((b * 100 + a) / 1000)\n          break\n        case 6: // a,b a,b0\n          a = randint(11, 999)\n          while (a % 10 === 0) {\n            // pas de nombre divisible par 10\n            a = randint(11, 999)\n          }\n          x = calcul(a / 10)\n          y = x\n          zeroInutile = true\n          break\n        case 7: // 0,0ab 0,0a0b\n          a = randint(1, 9)\n          b = randint(1, 9)\n          x = calcul(a / 100 + b / 1000)\n          y = calcul(a / 100 + b / 10000)\n          break\n        case 8: // a,bb  a,ccc avec b>c\n          a = randint(11, 99)\n          b = randint(11, 99)\n          c = randint(100, b * 10)\n          x = calcul(a + b / 100)\n          y = calcul(a + c / 1000)\n          if (randint(1, 2) === 1) {\n            [x, y] = [y, x]\n          }\n          break\n        case 9: // a+1,bb  a,cccc avec cccc>bb\n          a = randint(11, 98)\n          b = randint(11, 99)\n          c = randint(b * 100, 10000)\n          x = calcul(a + 1 + b / 100)\n          y = calcul(a + c / 10000)\n          if (randint(1, 2) === 1) {\n            [x, y] = [y, x]\n          }\n          break\n      }\n\n      texte = `${texNombre(x)}\\\\ldots\\\\ldots${texNombre(y)}`\n      if (parseFloat(x) > parseFloat(y)) {\n        texteCorr = `${texNombre(x)} > ${texNombre(y)}`\n      } else if (parseFloat(x) < parseFloat(y)) {\n        texteCorr = `${texNombre(x)} < ${texNombre(y)}`\n      } else {\n        texteCorr = `${texNombre(x)} = ${texNombre(y)}`\n      }\n\n      if (zeroInutile) {\n        if (randint(1, 2) === 1) {\n          texte = `${texPrix(x)}\\\\ldots\\\\ldots${texNombre(y)}`\n          if (parseFloat(x) > parseFloat(y)) {\n            texteCorr = `${texPrix(x)} > ${texNombre(y)}`\n          } else if (parseFloat(x) < parseFloat(y)) {\n            texteCorr = `${texPrix(x)} < ${texNombre(y)}`\n          } else {\n            texteCorr = `${texPrix(x)} = ${texNombre(y)}`\n          }\n        } else {\n          texte = `${texNombre(x)}\\\\ldots\\\\ldots${texPrix(y)}`\n          if (parseFloat(x) > parseFloat(y)) {\n            texteCorr = `${texNombre(x)} > ${texPrix(y)}`\n          } else if (parseFloat(x) < parseFloat(y)) {\n            texteCorr = `${texNombre(x)} < ${texPrix(y)}`\n          } else {\n            texteCorr = `${texNombre(x)} = ${texPrix(y)}`\n          }\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ComparerDecimaux","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","typesDeQuestionsDisponibles","choice","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","x","y","a","b","c","zeroInutile","randint","calcul","texNombre","parseFloat","texPrix","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}