{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C34.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","dernierChiffre","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","tailleDiaporama","pasDeVersionLatex","pas_de_version_HMTL","video","correctionDetailleeDisponible","sup","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions_disponibles","listeTypeDeQuestions","combinaisonListes","i","a","b","texte","texteCorr","cpt","contenuCorrection","randint","correctionDetaillee","texteGras","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","boutonAide","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/9940.802b17fd1469f9efee4a.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {randint,listeQuestionsToContenu,combinaisonListes,texteGras} from '../../modules/outils.js'\n\nexport const titre = 'Dernier chiffre d’un calcul'\n\n/**\n* Trouver le dernier chiffre d'un calcul (somme, produit, différence)\n* @auteur Erwan DUPLESSY\n* 6C34\n*/\n\nexport default function dernierChiffre() {\n    \"use strict\"\n    Exercice.call(this)\n    this.titre = titre;\n    this.consigne = `Pour chaque calcul, déterminer le dernier chiffre du résultat.`;\n    this.nbQuestions = 4; // Ici le nombre de questions\n    this.nbQuestionsModifiable=true // Active le formulaire nombre de questions\n    this.nbCols = 2; // Le nombre de colonnes dans l'énoncé LaTeX\n    this.nbColsCorr = 2;// Le nombre de colonne pour la correction LaTeX\n    this.tailleDiaporama = 100;\n    this.pasDeVersionLatex=false; // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n    this.pas_de_version_HMTL=false; // mettre à true si on ne veut pas de l'exercice en ligne\n    this.video = \"\"; // Id YouTube ou url\n    this.correctionDetailleeDisponible=true;\n  // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n  \n   this.sup = 1; // A décommenter : valeur par défaut d'un premier paramètre\n  //  this.sup2 = false; // A décommenter : valeur par défaut d'un deuxième paramètre\n  //  this.sup3 = false; // A décommenter : valeur par défaut d'un troisième paramètre\n  \n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n    this.nouvelleVersion = function () {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n  \n    this.listeQuestions = [] // tableau contenant la liste des questions \n    this.listeCorrections = []\n    let listeTypeDeQuestions_disponibles= [];\n    if (this.sup == 1) {\n        listeTypeDeQuestions_disponibles = ['somme'];\n    }\n    if (this.sup == 2) {\n        listeTypeDeQuestions_disponibles = ['somme','produit'];\n    }\n    if (this.sup == 3) {\n        listeTypeDeQuestions_disponibles = ['somme','produit','difference'];\n    }\n    let listeTypeDeQuestions = combinaisonListes(listeTypeDeQuestions_disponibles, this.nbQuestions)\n  \n    for (let i = 0, a=0, b=0, texte=``, texteCorr=``, cpt = 0; i < this.nbQuestions && cpt < 50;)\n      {\n        this.contenuCorrection = ``;\n        switch (listeTypeDeQuestions[i]) {    \n          case 'somme':\n                a = randint(11, 999);\n                b = randint(11, 999);\n                texte = `$ ${a} + ${b}$`;\n                texteCorr =``;\n                if (this.correctionDetaillee){\n                  texteCorr += `Le dernier chiffre de $${a} + ${b}$ est le dernier chiffre de $${a%10} + ${b%10}$. `;\n                  texteCorr += `Or : $${a%10} + ${b%10} = ${a%10 + b%10} $<br>`;\n                }\n                texteCorr += texteGras(`Le dernier chiffre de $${a} + ${b}$ est : $${(b+a)%10}$.`);\n                \n                break;          \n              case 'produit':\n                a = randint(11, 999);\n                b = randint(11, 999);\n                texte = `$${a} \\\\times ${b}$`;\n                texteCorr =``;\n                if (this.correctionDetaillee){\n                  texteCorr += `Le dernier chiffre de $${a} \\\\times ${b}$ est le dernier chiffre de $${a%10} \\\\times ${b%10}$. `;\n                  texteCorr += `Or : $${a%10} \\\\times ${b%10} = ${(a%10) * (b%10)} $<br>`;\n                }\n                texteCorr += texteGras(`Le dernier chiffre de $${a} \\\\times ${b}$ est : $${(b*a)%10}$.`);\n                break;\n              \n              case 'difference':\n                b = randint(11, 999);\n                a = randint(b+1,b+999);\n                texte = `$ ${a} - ${b}$`;\n                texteCorr =``;\n                if (this.correctionDetaillee){\n                  if (a%10 - b%10 >= 0){\n                    texteCorr += `Le dernier chiffre de $${a} - ${b}$ est égal à : $${a%10} - ${b%10} = ${(a%10)-(b%10)}$. <br>`;\n                  } else {\n                    texteCorr += `Comme  $${a%10} < ${b%10}$, on doit faire la soustraction : $${(a%10)+10} - ${b%10} = ${((a%10)+10)-(b%10)}$. <br>`;\n                  }\n                }\n                texteCorr += texteGras(`Le dernier chiffre de $${a} - ${b}$ est : $${(a-b)%10}$.`);\n                break;\n          }\n\n        if (this.listeQuestions.indexOf(texte) == -1) {\n          // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n          this.listeQuestions.push(texte);\n          this.listeCorrections.push(texteCorr);\n          i++;\n        }\n        cpt++;\n      }\n      listeQuestionsToContenu(this); // On envoie l'exercice à la fonction de mise en page\n    };\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n  \n \tthis.besoinFormulaireNumerique = ['Niveau de difficulté',3,\"1 : sommes\\n2: et produits\\n3: et différences\"]\n  //  this.besoinFormulaire2Numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoinFormulaire3CaseACocher =['figure à main levée',true]\n  \n  } // Fin de l'exercice.\n  ","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}