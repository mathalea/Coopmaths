{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C30-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["amcReady","amcType","interactifReady","interactifType","titre","MultiplicationMentalDecimaux","Exercice","this","interactifObligatoire","interactif","consigne","nbQuestions","video","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","a","b","randint","texNombre2","calcul","autoCorrection","enonce","propositions","statut","options","ordered","lastChoice","propositionsQcm","indexOf","push","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","tailleDiaporama","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"gQAIO,MAAMA,GAAW,EACXC,EAAU,EACVC,GAAkB,EAClBC,EAAiB,IACjBC,EAAQ,uCAaN,SAASC,IACtBC,eAAcC,MACdA,KAAKH,MAAQA,EACbG,KAAKP,SAAWA,EAChBO,KAAKN,QAAUA,EACfM,KAAKL,gBAAkBA,EACvBK,KAAKC,uBAAwB,EAC7BD,KAAKE,YAAa,EAClBF,KAAKG,SAAW,oEAChBH,KAAKI,YAAc,EACnBJ,KAAKK,MAAQ,GACbL,KAAKM,uBAAwB,EAC7BN,KAAKO,OAAS,EACdP,KAAKQ,WAAa,EAClBR,KAAKS,mBAAoB,EACzBT,KAAKU,qBAAsB,EAE3BV,KAAKW,gBAAkB,WACrBX,KAAKY,eAAiB,GACtBZ,KAAKa,iBAAmB,GACxB,MACMC,GAAuBC,SADM,CAAC,MAAO,MAAO,WAAY,YACaf,KAAKI,aAEhF,IAAK,IAAWY,EAAOC,EAAdC,EAAI,EAAqBC,EAAM,EAAGD,EAAIlB,KAAKI,aAAee,EAAM,IAAK,CAC5EH,EAAQ,GACRC,EAAY,GACZ,IAAIG,EAAI,EACJC,EAAI,EAER,OAAQP,EAAqBI,IAC3B,IAAK,MACHE,EAAI,IAAKE,SAAQ,EAAG,IAAKA,SAAQ,EAAG,GACpCD,EAAI,IAAKC,SAAQ,EAAG,IAAKA,SAAQ,EAAG,GACpCN,GAAU,aAAYI,OAAOC,MAC7BJ,GAAc,IAAGG,OAAOC,MAAKE,UAAWC,SAAOJ,EAAIC,OAEnDrB,KAAKyB,eAAeP,GAAK,GACzBlB,KAAKyB,eAAeP,GAAGQ,OAAU,GAAEV,MACnChB,KAAKyB,eAAeP,GAAGS,aAAe,CACpC,CACEX,MAAQ,KAAGO,UAAWC,SAAOJ,EAAIC,OACjCO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,UAAWC,SAAOJ,EAAIC,OACjCO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,UAAWC,UAAQJ,EAAIC,GAAK,QACvCO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,UAAWC,SAAO,IAAMJ,EAAIC,QACvCO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,UAAWC,SAAOJ,EAAIC,EAAI,OACrCO,QAAQ,IAGZ5B,KAAKyB,eAAeP,GAAGW,QAAU,CAC/BC,SAAS,EACTC,WAAY,GAEV/B,KAAKE,aACPc,GAAS,QAASgB,QAAgBhC,KAAMkB,GAAGF,OAE7C,MAEF,IAAK,MACHI,EAAI,IAAKE,SAAQ,EAAG,IAAKA,SAAQ,EAAG,GACpCD,EAAI,IAAKC,SAAQ,EAAG,IAAKA,SAAQ,EAAG,GACpCN,GAAU,aAAYI,aAAaC,MACnCJ,GAAc,IAAGG,aAAaC,MAAKE,UAAWC,SAAOJ,EAAIC,OACzDrB,KAAKyB,eAAeP,GAAK,GACzBlB,KAAKyB,eAAeP,GAAGQ,OAAU,GAAEV,MACnChB,KAAKyB,eAAeP,GAAGS,aAAe,CACpC,CACEX,MAAQ,KAAGO,SAAWH,EAAIC,MAC1BO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,SAAW,GAAKH,EAAIC,MAC/BO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,SAAWH,EAAIC,EAAI,OAC9BO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,SAAWH,EAAIC,MAC1BO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,SAAWH,EAAIC,EAAI,MAC9BO,QAAQ,IAGZ5B,KAAKyB,eAAeP,GAAGW,QAAU,CAC/BC,SAAS,EACTC,WAAY,GAEV/B,KAAKE,aACPc,GAAS,QAASgB,QAAgBhC,KAAMkB,GAAGF,OAE7C,MAEF,IAAK,WACHI,EAAI,KAAOE,SAAQ,EAAG,GAAK,KAAMA,SAAQ,EAAG,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,IAAM,IAAKA,SAAQ,EAAG,IAAKA,SAAQ,EAAG,GAClGD,EAAI,KAAOC,SAAQ,EAAG,GAAK,KAAMA,SAAQ,EAAG,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,IAAM,IAAKA,SAAQ,EAAG,IAAKA,SAAQ,EAAG,GAClGN,GAAU,cAAYO,SAAWH,EAAI,WAAUG,SAAWF,EAAI,SAC9DJ,GAAc,MAAIM,SAAWH,EAAI,WAAUG,SAAWF,EAAI,SAAQE,UAAWC,SAAOJ,EAAI,IAAMC,EAAI,UAClGrB,KAAKyB,eAAeP,GAAK,GACzBlB,KAAKyB,eAAeP,GAAGQ,OAAU,GAAEV,MACnChB,KAAKyB,eAAeP,GAAGS,aAAe,CACpC,CACEX,MAAQ,KAAGO,UAAWC,UAAQJ,EAAIC,GAAK,SACvCO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,UAAWC,SAAQJ,EAAIC,EAAK,SACvCO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,UAAWC,UAAQJ,EAAIC,GAAK,SACvCO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,UAAWC,SAAO,IAAMJ,EAAIC,GAAK,SAC5CO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,UAAWC,UAAQJ,EAAIC,EAAI,GAAK,SAC3CO,QAAQ,IAGZ5B,KAAKyB,eAAeP,GAAGW,QAAU,CAC/BC,SAAS,EACTC,WAAY,GAEV/B,KAAKE,aACPc,GAAS,QAASgB,QAAgBhC,KAAMkB,GAAGF,OAE7C,MAEF,IAAK,WAGHI,EAAI,KAAOE,SAAQ,EAAG,GAAK,KAAMA,SAAQ,EAAG,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,IAAM,IAAKA,SAAQ,EAAG,IAAKA,SAAQ,EAAG,EAAG,CAAC,EAAG,IACzGD,EAAI,KAAOC,SAAQ,EAAG,GAAK,KAAMA,SAAQ,EAAG,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,IAAM,IAAKA,SAAQ,EAAG,IAAKA,SAAQ,EAAG,GAClGN,GAAU,cAAYO,SAAWH,EAAI,iBAAgBG,SAAWF,EAAI,SACpEJ,GAAc,KAAGM,SAAWH,EAAI,iBAAgBG,SAAWF,EAAI,SAAQE,UAAWC,SAAOJ,EAAIC,EAAI,UACjGrB,KAAKyB,eAAeP,GAAK,GACzBlB,KAAKyB,eAAeP,GAAGQ,OAAU,GAAEV,MACnChB,KAAKyB,eAAeP,GAAGS,aAAe,CACpC,CACEX,MAAQ,KAAGO,UAAWC,SAAQJ,EAAIC,EAAK,SACvCO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,UAAWC,SAAQ,GAAKJ,EAAIC,EAAK,SAC5CO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,UAAWC,SAAQJ,EAAIC,EAAK,SACvCO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,UAAWC,UAAQJ,EAAIC,GAAK,SACvCO,QAAQ,GAEV,CACEZ,MAAQ,KAAGO,UAAWC,UAAQJ,EAAIC,EAAI,GAAK,SAC3CO,QAAQ,IAGZ5B,KAAKyB,eAAeP,GAAGW,QAAU,CAC/BC,SAAS,EACTC,WAAY,GAEV/B,KAAKE,aACPc,GAAS,QAASgB,QAAgBhC,KAAMkB,GAAGF,QAKL,IAAxChB,KAAKY,eAAeqB,QAAQjB,KAE9BhB,KAAKY,eAAesB,KAAKlB,GACzBhB,KAAKa,iBAAiBqB,KAAKjB,GAC3BC,KAEFC,KAEFgB,SAAwBnC,S,6BCjNb,SAASD,IAEtBC,KAAKH,MAAQ,GACbG,KAAKG,SAAW,GAChBH,KAAKoC,mBAAqB,GAC1BpC,KAAKY,eAAiB,GACtBZ,KAAKa,iBAAmB,GACxBb,KAAKqC,aAAe,GACpBrC,KAAKsC,QAAU,GACftC,KAAKuC,kBAAoB,GACzBvC,KAAKI,YAAc,GACnBJ,KAAKO,OAAS,EACdP,KAAKQ,WAAa,EAClBR,KAAKwC,QAAU,EACfxC,KAAKyC,YAAc,EACnBzC,KAAK0C,QAAS,EAEd1C,KAAK2C,2BAA4B,EACjC3C,KAAK4C,uBAAwB,EAC7B5C,KAAK6C,6BAA8B,EACnC7C,KAAK8C,oBAAqB,EAC1B9C,KAAKM,uBAAwB,EAC7BN,KAAK+C,kBAAmB,EACxB/C,KAAKgD,sBAAuB,EAC5BhD,KAAKiD,mBAAoB,EACzBjD,KAAKkD,uBAAwB,EAC7BlD,KAAKmD,+BAAgC,EACrCnD,KAAKoD,qBAAsB,EAC3BpD,KAAKK,MAAQ,GACbL,KAAKqD,YAAa,EAClBrD,KAAKsD,gBAAkB,GAMvBtD,KAAKS,mBAAoB,EACzBT,KAAKE,YAAa,EAClBF,KAAKC,uBAAwB,EAC7BD,KAAKuD,KAAM,EACXvD,KAAKwD,eAAgB,EACrBxD,KAAKyD,SAAU,EACfzD,KAAKyB,eAAiB,GACtBzB,KAAK0D,sBAAwB,GAC7B1D,KAAK2D,cAAe,EACpB3D,KAAKW,gBAAkB,SAAUiD,KACjC5D,KAAK6D,cAAgB,G","file":"js/441.65138610b55a3c321f29.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, texNombre2, calcul } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType = 1 // QCM\nexport const interactifReady = true\nexport const interactifType = ' '\nexport const titre = 'Opérations avec les nombres décimaux'\n\n/**\n* @author Erwan Duplessy\n* 6C30-1\n* Trouver la réposne exacte. 4 cas :\n* - somme de deux entiers\n* - produit de deux entiers\n* - somme de deux décimaux\n* - produit de deux décimaux\n* date : 2021/02/15\n*/\n\nexport default function MultiplicationMentalDecimaux () {\n  Exercice.call(this)\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactifObligatoire = true // Il n'existe pas de version non QCM\n  this.interactif = true\n  this.consigne = 'Trouver la réponse exacte du calcul parmi les réponses proposées.'\n  this.nbQuestions = 4 // Ici le nombre de questions\n  this.video = ''\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.pasDeVersionLatex = false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    const typeDeQuestionsDisponibles = ['add', 'mul', 'add_deci', 'mul_deci'] // tableau à compléter par valeurs possibles des types de questions\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions)\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = '' // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texteCorr = '' // Idem pour le texte de la correction.\n      let a = 0\n      let b = 0 // les deux opérandes\n\n      switch (listeTypeDeQuestions[i]) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n        case 'add':\n          a = 10 * randint(1, 9) + randint(1, 9)\n          b = 10 * randint(1, 9) + randint(1, 9)\n          texte += `Calcul : $${a} + ${b}$.`\n          texteCorr += `$${a} + ${b}=${texNombre2(calcul(a + b))}$`\n\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(calcul(a + b))}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(calcul(a * b))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul((a + b) / 10))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(10 * (a + b)))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(a + b + 1))}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          if (this.interactif) {\n            texte += '<br>' + propositionsQcm(this, i).texte\n          }\n          break\n\n        case 'mul':\n          a = 10 * randint(1, 9) + randint(1, 9)\n          b = 10 * randint(1, 9) + randint(1, 9)\n          texte += `Calcul : $${a} \\\\times ${b}$.`\n          texteCorr += `$${a} \\\\times ${b}=${texNombre2(calcul(a * b))}$`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(a * b)}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(10 * a * b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(a * b / 10)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(a + b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(a * b + 1)}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          if (this.interactif) {\n            texte += '<br>' + propositionsQcm(this, i).texte\n          }\n          break\n\n        case 'add_deci':\n          a = 1000 * randint(1, 9) + 100 * randint(0, 9, [3, 4, 5, 6, 7]) + 10 * randint(0, 9) + randint(0, 9)\n          b = 1000 * randint(1, 9) + 100 * randint(0, 9, [3, 4, 5, 6, 7]) + 10 * randint(0, 9) + randint(0, 9)\n          texte += `Calcul : $${texNombre2(a / 100)} + ${texNombre2(b / 100)}$.`\n          texteCorr += ` $${texNombre2(a / 100)} + ${texNombre2(b / 100)}=${texNombre2(calcul(a / 100 + b / 100))}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(calcul((a + b) / 100))}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(calcul((a * b) / 100))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul((a + b) / 1000))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(10 * (a + b) / 100))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul((a + b + 1) / 100))}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          if (this.interactif) {\n            texte += '<br>' + propositionsQcm(this, i).texte\n          }\n          break\n\n        case 'mul_deci':\n          // a et b sont des nombres à 4 chiffres, dont 2 avant la virgule\n          // on multiplie par 100 pour travailler avec des nombres entiers. Par ex : 6547 plutôt que 65.47\n          a = 1000 * randint(1, 9) + 100 * randint(1, 9, [3, 4, 5, 6, 7]) + 10 * randint(1, 9) + randint(0, 9, [2, 5]) // on évite le 2*5 avec les derniers chiffres\n          b = 1000 * randint(1, 9) + 100 * randint(1, 9, [3, 4, 5, 6, 7]) + 10 * randint(1, 9) + randint(0, 9)\n          texte += `Calcul : $${texNombre2(a / 100)} \\\\times ${texNombre2(b / 100)}$.`\n          texteCorr += `$${texNombre2(a / 100)} \\\\times ${texNombre2(b / 100)}=${texNombre2(calcul(a * b / 10000))}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(calcul((a * b) / 10000))}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(calcul((10 * a * b) / 10000))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul((a * b) / 100000))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul((a + b) / 100))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul((a * b + 1) / 10000))}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          if (this.interactif) {\n            texte += '<br>' + propositionsQcm(this, i).texte\n          }\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n\n  // this.besoinFormulaireCaseACocher = ['Mode QCM',true]\n  //  this.besoinFormulaire2Numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoinFormulaire3CaseACocher =['figure à main levée',true]\n} // Fin de l'exercice.\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}