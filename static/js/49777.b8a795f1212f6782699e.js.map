{"version":3,"file":"js/49777.b8a795f1212f6782699e.js","mappings":"mSAAO,MAAMA,EAAQ,wBAaN,SAASC,IACtBC,EAAAA,QAAAA,KAA8BC,Q,6LCTzB,MAAMH,EAAQ,wBACRI,GAAW,EACXC,EAAU,SACVC,GAAkB,EAClBC,EAAiB,WAQf,SAASL,IACtBM,EAAAA,QAAAA,KAAcL,MACdA,KAAKM,IAAM,EACXN,KAAKH,MAAQA,EACbG,KAAKO,SAAW,0DAChBP,KAAKQ,QAAU,EACfR,KAAKS,YAAc,EACnBT,KAAKU,YAAc,EACnBV,KAAKW,WAAa,EAElBX,KAAKY,gBAAkB,WACrBZ,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GACxBd,KAAKe,eAAiB,GACtB,MAAMC,GAAiBC,EAAAA,EAAAA,OAEjBC,EAA8B,CAACC,SAASnB,KAAKM,MACnD,IAAIc,EACJ,MAAMC,GAAuBC,EAAAA,EAAAA,KAC3BJ,EACAlB,KAAKU,aAEP,IACE,IACEa,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAZEC,EAAI,EAaNC,EAAM,EACRD,EAAInC,KAAKU,aAAe0B,EAAM,IAE9B,CACAF,EAAmBb,EAAqBc,GACxC,GACEZ,GAAKc,EAAAA,EAAAA,KAAOrB,GACZQ,GAAKa,EAAAA,EAAAA,KAAOrB,GACZS,EAAIF,EAAG,GACPG,EAAIH,EAAG,GACPI,EAAIH,EAAG,GACPI,EAAIJ,EAAG,SACCC,EAAIG,GAAMF,EAAIC,IAAO,GAG/B,OAFAE,GAAIS,EAAAA,EAAAA,KAAKb,EAAIG,EAAGF,EAAIC,GAEZO,GACN,KAAK,EACHH,EAAS,KAAGQ,EAAAA,EAAAA,KAAYd,EAAGC,WAAUa,EAAAA,EAAAA,KAAYZ,EAAGC,OAElDK,EADQ,IAANJ,EACW,KAAGU,EAAAA,EAAAA,KAAYd,EAAGC,WAAUa,EAAAA,EAAAA,KACvCZ,EACAC,OACGW,EAAAA,EAAAA,KAAYd,EAAGC,aAAYa,EAAAA,EAAAA,KAAYX,EAAGD,OAAMY,EAAAA,EAAAA,KACnDd,EAAI,UAAYG,EAChBF,EAAI,UAAYC,OACbY,EAAAA,EAAAA,KAAYd,EAAIG,EAAGF,EAAIC,MAEf,KAAGY,EAAAA,EAAAA,KAAYd,EAAGC,WAAUa,EAAAA,EAAAA,KACvCZ,EACAC,OACGW,EAAAA,EAAAA,KAAYd,EAAGC,aAAYa,EAAAA,EAAAA,KAAYX,EAAGD,OAAMY,EAAAA,EAAAA,KACnDd,EAAI,UAAYG,EAChBF,EAAI,UAAYC,OACbY,EAAAA,EAAAA,KAAYd,EAAIG,EAAGF,EAAIC,OAAMY,EAAAA,EAAAA,KAC/Bd,EAAIG,EAAKC,EAAI,mBAAqBA,EAAI,IACtCH,EAAIC,EAAKE,EAAI,mBAAqBA,EAAI,SACpCU,EAAAA,EAAAA,KAAad,EAAIG,EAAKC,EAAIH,EAAIC,EAAKE,MAE1C,MAEF,KAAK,EACHJ,IAAQe,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,IACxBd,IAAQc,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,IACxBb,IAAQa,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,IACxBZ,IAAQY,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,IACxBpB,GAAsBK,EAAI,IAAMC,EAAI,IAAMC,EAAI,IAAMC,EAAI,GAEtDE,EADuC,IAArCW,KAAKC,KAAK,EAAGtB,GACP,GAEA,IAEVW,EAAS,KAAGQ,EAAAA,EAAAA,KAAYd,EAAGC,WAAUa,EAAAA,EAAAA,KAAYZ,EAAGC,OACpDK,EAAa,KAAGM,EAAAA,EAAAA,KAAYd,EAAGC,WAAUa,EAAAA,EAAAA,KAAYZ,EAAGC,MACxDH,GAAIkB,EAAAA,EAAAA,KAAIlB,GACRC,GAAIiB,EAAAA,EAAAA,KAAIjB,GACRC,GAAIgB,EAAAA,EAAAA,KAAIhB,GACRC,GAAIe,EAAAA,EAAAA,KAAIf,GACRC,GAAIS,EAAAA,EAAAA,KAAKb,EAAIG,EAAGF,EAAIC,GACpBM,GAAc,KAAIH,KAAQS,EAAAA,EAAAA,KAAYd,EAAGC,aAAYa,EAAAA,EAAAA,KACnDX,EACAD,MAEFM,GAAc,KAAIH,KAAQS,EAAAA,EAAAA,KACxBd,EAAI,WAAYmB,EAAAA,EAAAA,KAA4BhB,GAC5CF,EAAI,WAAYkB,EAAAA,EAAAA,KAA4BjB,OAEpC,IAANE,EACFI,GAAc,KAAIH,KAAQe,EAAAA,EAAAA,KAAiBpB,EAAIG,EAAGF,EAAIC,OAEtDM,GAAc,KAAIH,KAAQS,EAAAA,EAAAA,KAAYd,EAAIG,EAAGF,EAAIC,MAC7CF,EAAIG,GAAMF,EAAIC,GAChBM,GAAc,KAAIH,KAAQS,EAAAA,EAAAA,KACvBd,EAAIG,EAAKC,EAAI,mBAAqBA,EAAI,IACtCH,EAAIC,EAAKE,EAAI,mBAAqBA,EAAI,QAEzCI,GAAc,KAAIH,KAAQS,EAAAA,EAAAA,KACvBd,EAAIG,EAAKC,EACTH,EAAIC,EAAKE,OAGZI,GAAc,KAAIH,OAM1BE,GAAUc,EAAAA,EAAAA,KAAoB,MAAVhB,GAAiB,EAAI,GAAKL,EAAIG,EAAGF,EAAIC,GAAGoB,YACxD/C,KAAKgD,oBAAoBb,EAAGV,EAAGC,EAAGC,EAAGC,EAAGM,KAC1CH,IAASkB,EAAAA,EAAAA,IAAyBjD,KAAMmC,EAAG,oBACvCe,EAAAA,GAAAA,QAAenB,EAAQ,+DAAiEA,IAC5FoB,EAAAA,EAAAA,IAAWnD,KAAMmC,EAAGH,EAAS,CAAEoB,iBAAkB,WAAYC,OAAQ,EAAGC,UAAW,EAAGC,UAAW,EAAGzB,OAAO,IAC3G9B,KAAKa,eAAe2C,KAAKzB,GACzB/B,KAAKc,iBAAiB0C,KAAKvB,GAC3BE,KAGFC,KAEFqB,EAAAA,EAAAA,KAAwBzD,OAE1BA,KAAK0D,0BAA4B,CAC/B,uBACA,EACA,iH,gBCtJW,SAASrD,IAItBL,KAAKH,MAAQ,GACbG,KAAK2D,YAAa,EAclB3D,KAAKO,SAAW,GAChBP,KAAK4D,mBAAqB,GAC1B5D,KAAK6D,aAAe,GACpB7D,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GACxBd,KAAK8D,QAAU,GACf9D,KAAK+D,kBAAoB,GACzB/D,KAAKe,eAAiB,GACtBf,KAAKgE,sBAAwB,GAK7BhE,KAAKQ,QAAU,EACfR,KAAKS,YAAc,EAKnBT,KAAKiE,mBAAoB,EACzBjE,KAAKkE,cAAgB,GACrBlE,KAAKmE,oBAAqB,EAC1BnE,KAAKoE,uBAAwB,EAC7BpE,KAAKqE,OAAS,EACdrE,KAAKW,WAAa,EAClBX,KAAKsE,kBAAmB,EACxBtE,KAAKuE,sBAAuB,EAC5BvE,KAAKwE,mBAAoB,EACzBxE,KAAKyE,uBAAwB,EAM7BzE,KAAK0E,QAAS,EACd1E,KAAK2E,gBAAkB,EAKvB3E,KAAKU,YAAc,GACnBV,KAAK4E,mBAAqB,EAC1B5E,KAAK6E,+BAAgC,EACrC7E,KAAK8E,qBAAsB,EAC3B9E,KAAK+E,oBAAqB,EAC1B/E,KAAKgF,MAAQ,GAEbhF,KAAKiF,YAAa,EAClBjF,KAAKkF,uBAAwB,EAE7BlF,KAAK0D,2BAA4B,EACjC1D,KAAKmF,uBAAwB,EAC7BnF,KAAKoF,6BAA8B,EAEnCpF,KAAKqF,4BAA6B,EAClCrF,KAAKsF,wBAAyB,EAC9BtF,KAAKuF,8BAA+B,EAEpCvF,KAAKwF,4BAA6B,EAClCxF,KAAKyF,wBAAyB,EAC9BzF,KAAK0F,8BAA+B,EAEpC1F,KAAK2F,4BAA6B,EAClC3F,KAAK4F,wBAAyB,EAC9B5F,KAAK6F,8BAA+B,EAMpC7F,KAAK8F,cAAe,EASpB9F,KAAK+F,eAAiB,GAMtB/F,KAAKY,gBAAkB,SAAUoF,KAQjChG,KAAKgD,oBAAsB,SAAUb,KAAM8D,GAC/B,IAAN9D,IAASnC,KAAK+F,eAAiB,IACnC,IAAIG,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAIrG,KAAK+F,eAAeO,QAAQJ,IAAmB,KAGjDlG,KAAK+F,eAAevC,KAAK0C,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/2e/2N30-4.js","webpack://mathalea/./src/js/exercices/4e/4C22-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["export const titre = 'Diviser des fractions'\n\n// eslint-disable-next-line import/first\nimport ExerciceDiviserFractions from '../4e/4C22-2.js'\n\nexport { interactifReady, interactifType } from '../4e/4C22-2.js'\nexport { amcReady, amcType } from '../4e/4C22-2.js'\n\n/**\n * Clone de 4C22-2 pour les 2nde\n *\n * @author Sébastien LOZANO\n */\nexport default function ExerciceDiviserFractions2nde () {\n  ExerciceDiviserFractions.call(this)\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, ecritureParentheseSiNegatif, abs, pgcd, texFractionSigne, obtenirListeFractionsIrreductibles, texFraction } from '../../modules/outils.js'\nimport { fraction } from '../../modules/fractions.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Diviser des fractions'\nexport const amcReady = true\nexport const amcType = 'AMCNum' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n/**\n * Calcul du quotient de deux fractions. Paramétrages possibles :\n * * 1 : Nombres positifs exclusivement\n * * 2 : nombres relatifs\n * @author Jean-Claude Lhote\n * 4C22-2\n */\nexport default function ExerciceDiviserFractions () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 1 // Avec ou sans relatifs\n  this.titre = titre\n  this.consigne = 'Calculer et donner le résultat sous forme irréductible.'\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    const listeFractions = obtenirListeFractionsIrreductibles()\n\n    const typesDeQuestionsDisponibles = [parseInt(this.sup)]\n    let nombreDeSigneMoins\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    )\n    for (\n      let i = 0,\n        ab,\n        cd,\n        a,\n        b,\n        c,\n        d,\n        p,\n        signe,\n        texte,\n        reponse,\n        texteCorr,\n        typesDeQuestions,\n        cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      do {\n        ab = choice(listeFractions)\n        cd = choice(listeFractions)\n        a = ab[0]\n        b = ab[1]\n        c = cd[0]\n        d = cd[1]\n      } while ((a * d) % (b * c) === 0)\n      p = pgcd(a * d, b * c)\n\n      switch (typesDeQuestions) {\n        case 1: // fraction / fraction tout positif\n          texte = `$${texFraction(a, b)}\\\\div${texFraction(c, d)}=$`\n          if (p === 1) {\n            texteCorr = `$${texFraction(a, b)}\\\\div${texFraction(\n              c,\n              d\n            )}=${texFraction(a, b)}\\\\times${texFraction(d, c)}=${texFraction(\n              a + '\\\\times' + d,\n              b + '\\\\times' + c\n            )}=${texFraction(a * d, b * c)}$`\n          } else {\n            texteCorr = `$${texFraction(a, b)}\\\\div${texFraction(\n              c,\n              d\n            )}=${texFraction(a, b)}\\\\times${texFraction(d, c)}=${texFraction(\n              a + '\\\\times' + d,\n              b + '\\\\times' + c\n            )}=${texFraction(a * d, b * c)}=${texFraction(\n              (a * d) / p + '\\\\times\\\\cancel{' + p + '}',\n              (b * c) / p + '\\\\times\\\\cancel{' + p + '}'\n            )}=${texFraction((a * d) / p, (b * c) / p)}$`\n          }\n          break\n\n        case 2:\n          a = a * randint(-1, 1, [0])\n          b = b * randint(-1, 1, [0])\n          c = c * randint(-1, 1, [0])\n          d = d * randint(-1, 1, [0])\n          nombreDeSigneMoins = (a < 0) + (b < 0) + (c < 0) + (d < 0)\n          if (Math.pow(-1, nombreDeSigneMoins) === 1) {\n            signe = ''\n          } else {\n            signe = '-'\n          }\n          texte = `$${texFraction(a, b)}\\\\div${texFraction(c, d)}=$`\n          texteCorr = `$${texFraction(a, b)}\\\\div${texFraction(c, d)}$`\n          a = abs(a)\n          b = abs(b)\n          c = abs(c)\n          d = abs(d)\n          p = pgcd(a * d, b * c)\n          texteCorr += `$=${signe}${texFraction(a, b)}\\\\times${texFraction(\n            d,\n            c\n          )}$`\n          texteCorr += `$=${signe}${texFraction(\n            a + '\\\\times' + ecritureParentheseSiNegatif(d),\n            b + '\\\\times' + ecritureParentheseSiNegatif(c)\n          )}$`\n          if (p === 1) {\n            texteCorr += `$=${signe}${texFractionSigne(a * d, b * c)}$`\n          } else {\n            texteCorr += `$=${signe}${texFraction(a * d, b * c)}$`\n            if (a * d !== b * c) {\n              texteCorr += `$=${signe}${texFraction(\n                (a * d) / p + '\\\\times\\\\cancel{' + p + '}',\n                (b * c) / p + '\\\\times\\\\cancel{' + p + '}'\n              )}$`\n              texteCorr += `$=${signe}${texFraction(\n                (a * d) / p,\n                (b * c) / p\n              )}$`\n            } else {\n              texteCorr += `$=${signe}1$`\n            }\n          }\n\n          break\n      }\n      reponse = fraction((signe === '-' ? -1 : 1) * a * d, b * c).simplifie()\n      if (this.questionJamaisPosee(i, a, b, c, d, typesDeQuestions)) {\n        texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n        if (context.isAmc) texte = 'calculer et donner le résultat sous forme irréductible\\\\\\\\\\n' + texte\n        setReponse(this, i, reponse, { formatInteractif: 'fraction', digits: 5, digitsNum: 3, digitsDen: 2, signe: true })\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n\n      cpt++\n    }\n    listeQuestionsToContenu(this) // Espacement de 2 em entre chaque questions.\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    2,\n    ' 1 : Fractions à numérateur et dénominateur positifs \\n 2 : Fractions à numérateur et dénominateur relatifs'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ExerciceDiviserFractions2nde","ExerciceDiviserFractions","this","amcReady","amcType","interactifReady","interactifType","Exercice","sup","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","listeFractions","obtenirListeFractionsIrreductibles","typesDeQuestionsDisponibles","parseInt","nombreDeSigneMoins","listeTypeDeQuestions","combinaisonListes","ab","cd","a","b","c","d","p","signe","texte","reponse","texteCorr","typesDeQuestions","i","cpt","choice","pgcd","texFraction","randint","Math","pow","abs","ecritureParentheseSiNegatif","texFractionSigne","fraction","simplifie","questionJamaisPosee","ajouteChampTexteMathLive","context","setReponse","formatInteractif","digits","digitsNum","digitsDen","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}