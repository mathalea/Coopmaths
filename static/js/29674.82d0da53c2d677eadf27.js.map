{"version":3,"file":"js/29674.82d0da53c2d677eadf27.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C34.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { randint, listeQuestionsToContenu, combinaisonListes, texteGras } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Déterminer le dernier chiffre d’un calcul'\nexport const amcReady = true\nexport const interactifReady = true\nexport const interactifType = 'numerique'\nexport const amcType = 'AMCNum' // Question numérique\n\n/**\n* Trouver le dernier chiffre d'un calcul (somme, produit, différence)\n* @author Erwan DUPLESSY\n* 6C34\n*/\n\nexport default function DernierChiffre () {\n  Exercice.call(this)\n  this.sup = 3\n  this.titre = titre\n  this.consigne = 'Pour chaque calcul, déterminer le dernier chiffre du résultat.'\n  this.nbQuestions = 4 // Ici le nombre de questions\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 2 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 2// Le nombre de colonne pour la correction LaTeX\n  this.tailleDiaporama = 3\n  this.pasDeVersionLatex = false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n  this.video = '' // Id YouTube ou url\n  this.correctionDetailleeDisponible = true\n  // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n\n  this.sup = 1 // A décommenter : valeur par défaut d'un premier paramètre\n  //  this.sup2 = false; // A décommenter : valeur par défaut d'un deuxième paramètre\n  //  this.sup3 = false; // A décommenter : valeur par défaut d'un troisième paramètre\n\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    this.autoCorrection = []\n    let typeDeQuestionsDisponibles = []\n    if (this.sup === 1) {\n      typeDeQuestionsDisponibles = ['somme']\n    }\n    if (this.sup === 2) {\n      typeDeQuestionsDisponibles = ['somme', 'produit']\n    }\n    if (this.sup === 3) {\n      typeDeQuestionsDisponibles = ['somme', 'produit', 'difference']\n    }\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions)\n\n    for (let i = 0, a = 0, b = 0, texte = '', texteCorr = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      this.contenuCorrection = ''\n      switch (listeTypeDeQuestions[i]) {\n        case 'somme':\n          a = randint(11, 999)\n          b = randint(11, 999)\n          texte = `$ ${a} + ${b}$`\n          texteCorr = ''\n          if (this.correctionDetaillee) {\n            texteCorr += `Le dernier chiffre de $${a} + ${b}$ est le dernier chiffre de $${a % 10} + ${b % 10}$. `\n            texteCorr += `Or : $${a % 10} + ${b % 10} = ${a % 10 + b % 10} $<br>`\n          }\n          texteCorr += texteGras(`Le dernier chiffre de $${a} + ${b}$ est : $${(b + a) % 10}$.`)\n          setReponse(this, i, (b + a) % 10)\n\n          break\n        case 'produit':\n          a = randint(11, 999)\n          b = randint(11, 999)\n          texte = `$${a} \\\\times ${b}$`\n          texteCorr = ''\n          if (this.correctionDetaillee) {\n            texteCorr += `Le dernier chiffre de $${a} \\\\times ${b}$ est le dernier chiffre de $${a % 10} \\\\times ${b % 10}$. `\n            texteCorr += `Or : $${a % 10} \\\\times ${b % 10} = ${(a % 10) * (b % 10)} $<br>`\n          }\n          texteCorr += texteGras(`Le dernier chiffre de $${a} \\\\times ${b}$ est : $${(b * a) % 10}$.`)\n          setReponse(this, i, (b * a) % 10)\n          break\n\n        case 'difference':\n          b = randint(11, 999)\n          a = randint(b + 1, b + 999)\n          texte = `$ ${a} - ${b}$`\n          texteCorr = ''\n          if (this.correctionDetaillee) {\n            if (a % 10 - b % 10 >= 0) {\n              texteCorr += `Le dernier chiffre de $${a} - ${b}$ est égal à : $${a % 10} - ${b % 10} = ${(a % 10) - (b % 10)}$. <br>`\n            } else {\n              texteCorr += `Comme  $${a % 10} < ${b % 10}$, on doit faire la soustraction : $${(a % 10) + 10} - ${b % 10} = ${((a % 10) + 10) - (b % 10)}$. <br>`\n            }\n          }\n          texteCorr += texteGras(`Le dernier chiffre de $${a} - ${b}$ est : $${(a - b) % 10}$.`)\n          setReponse(this, i, (a - b) % 10)\n          break\n      }\n\n      if (context.isHtml && this.interactif) texte += '<br>Le chiffre des unités est : ' + ajouteChampTexte(this, i)\n      if (context.isAmc) {\n        this.autoCorrection[i].enonce = texte.substring(0, texte.length - 1) + '~=$<br>Le chiffre des unités est : '\n        this.autoCorrection[i].propositions = [{ texte: texteCorr, statut: '' }]\n        this.autoCorrection[i].reponse.param.digits = 1\n        this.autoCorrection[i].reponse.param.decimals = 0\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Sommes\\n2 : Sommes et produits\\n3 : Sommes, produits et différences']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","interactifReady","interactifType","amcType","DernierChiffre","Exercice","this","sup","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","tailleDiaporama","pasDeVersionLatex","pas_de_version_HMTL","video","correctionDetailleeDisponible","nouvelleVersion","parseInt","listeQuestions","listeCorrections","autoCorrection","typeDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","i","a","b","texte","texteCorr","cpt","contenuCorrection","randint","correctionDetaillee","texteGras","setReponse","context","interactif","ajouteChampTexte","enonce","substring","length","propositions","statut","reponse","param","digits","decimals","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","tableauSolutionsDuQcm","spacing","spacingCorr","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionIsCachee","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}