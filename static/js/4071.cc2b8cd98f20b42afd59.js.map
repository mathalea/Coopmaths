{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4C23.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Exercice_additionner_fraction_produit","Exercice","this","sup","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","correctionDetailleeDisponible","correctionDetaillee","nouvelleVersion","typesDeQuestionsDisponibles","listeQuestions","listeCorrections","nombre_de_signe_moins","liste_fractions","obtenirListeFractionsIrreductibles","liste_fractions_faciles","obtenirListeFractionsIrreductiblesFaciles","listeTypeDeQuestions","combinaisonListes","ab","cd","ef","a","b","c","d","e","f","p","k1","k2","signe1","signe2","texte","texteCorr","typesDeQuestions","i","produit","cpt","choice","texFraction","produitDeDeuxFractions","pgcd","ppcm","miseEnEvidence","simplificationDeFractionAvecEtapes","randint","Math","pow","abs","texFractionSigne","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/4071.cc2b8cd98f20b42afd59.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,abs,pgcd,produitDeDeuxFractions,simplificationDeFractionAvecEtapes,miseEnEvidence,texFractionSigne,obtenirListeFractionsIrreductibles,obtenirListeFractionsIrreductiblesFaciles,texFraction,ppcm} from '../../modules/outils.js'\nexport const titre = 'Fractions et priorités opératoires'\n\n/**\n * * Calcul fractionnaire : somme d'une fraction et du produit de deux autres fractions. Paramétrages possibles :\n * 1 : Calcul avec nombres positifs sans piège de priorité\n * * 2 : Calcul avec nombres positifs avec piège\n * * 3 : Calcul avec nombres relatifs\n * @author Jean-Claude Lhote\n * 4C23\n */\nexport default function Exercice_additionner_fraction_produit() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.sup = 1; // Avec ou sans relatifs\n  this.titre = titre;\n  this.consigne = \"Calculer et donner le résultat sous forme irréductible\";\n  this.spacing = 2;\n  this.spacingCorr = 2;\n  this.nbQuestions = 5;\n  this.nbColsCorr = 1;\n  this.correctionDetailleeDisponible=true\n  this.correctionDetaillee=true\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let typesDeQuestionsDisponibles;\n    let liste_fractions = obtenirListeFractionsIrreductibles();\n    let liste_fractions_faciles = obtenirListeFractionsIrreductiblesFaciles();\n    let nombre_de_signe_moins;\n    if (this.sup == 1)  {\n      typesDeQuestionsDisponibles = [1, 2, 3, 4];\n    } // fractions faciles, relatifs\n    else if (this.sup == 2)  {\n      typesDeQuestionsDisponibles = [1, 2, 3, 2];\n    } // 1*nombre entier,3*fraction (pas de négatifs)\n    else if (this.sup == 3) {\n      typesDeQuestionsDisponibles = [3, 3, 4, 4];\n    } // fractions, 2*positifs, 2*relatifs\n    else {\n      typesDeQuestionsDisponibles = [4];\n    }\n\n    let listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    );\n    for (\n      let i = 0,\n      ab,\n      cd,\n      ef,\n      a,\n      b,\n      c,\n      d,\n      e,\n      f,\n      p,\n      k1,\n      k2,\n      signe1,\n      signe2,\n      texte,\n      texteCorr,\n      produit=[],\n      typesDeQuestions,\n      cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i];\n      if (this.sup==1) {ab = choice(liste_fractions_faciles);cd = choice(liste_fractions_faciles);ef = choice(liste_fractions_faciles);}\n      else {ab = choice(liste_fractions);cd = choice(liste_fractions);ef = choice(liste_fractions);}\n\n      a = ab[0];\n      b = ab[1];\n      c = cd[0];\n      d = cd[1];\n      e = ef[0];\n      f = ef[1];\n      switch (typesDeQuestions) {\n        case 1: // sans piège fraction1 + fraction2 x fraction3 (tout positif)\n          texte = `$${texFraction(a, b)}+${texFraction(c,d)}\\\\times${texFraction(e, f)}$`;\n\n          texteCorr = `$${texFraction(a, b)}+${texFraction(c,d)}\\\\times${texFraction(e, f)}$`;\n          produit=produitDeDeuxFractions(c,d,e,f)\n          if (this.correctionDetaillee) {\n          texteCorr += `$=${texFraction(a, b)}+${texFraction(c + \"\\\\times\" + e,d + \"\\\\times\" + f)}$`;\n          texteCorr += `$=${texFraction(a, b)}+${texFraction(c * e,d * f)}$`;\n      }\n      else {\n        texteCorr += `$=${texFraction(a, b)}+${produit[1]}$`;\n        texteCorr += `$=${texFraction(a, b)}+${produit[0]}$`;\n      }\n          // faut-il simplifier c*e/d*f\n          if (!this.correctionDetaillee) {\n            [c,d,e,f]=produit[2]\n          }\n          p = pgcd(c * e, d * f);\n          if (p != 1 && ppcm(b, d * f) > ppcm(b, (d * f) / p)) {\n            texteCorr += `$=${texFraction(a, b)}+${texFraction((e * c) / p + \"\\\\times\\\\cancel{\" + p + \"}\",(f * d) / p + \"\\\\times\\\\cancel{\" + p + \"}\"\n            )}$`;\n            c = (e * c) / p;\n            d = (f * d) / p;\n          } else {\n            c = e * c;\n            d = f * d;\n          }\n          p = ppcm(b, d); // p = dénominateur commun\n          k1 = p / b;\n          k2 = p / d;\n          if (k1 != 1) {\n            texteCorr += `$=${texFraction(\n              a + miseEnEvidence(\"\\\\times\" + k1),\n              b + miseEnEvidence(\"\\\\times\" + k1)\n            )}$`;\n          } else { if (k2!=1){\n            texteCorr += `$=${texFraction(a, b)}$`;\n          }}\n          if (k2 != 1) {\n            texteCorr += `$+${texFraction(\n              c + miseEnEvidence(\"\\\\times\" + k2),\n              d + miseEnEvidence(\"\\\\times\" + k2)\n            )}$`;\n          } else { if (k1!=1) {\n            texteCorr += `$+${texFraction(c, d)}$`;\n          }}\n\n          texteCorr += `$=${texFraction(a * k1, p)}+${texFraction(c * k2,p)}$`;\n          e = a * k1 + c * k2;\n          f = p;\n\n          texteCorr += `$=${texFraction(e, f)}${simplificationDeFractionAvecEtapes(e, f)}$`;\n  /*\n          p = pgcd(e, f);\n          // faut-il simplifier e/f\n          if (p != 1) {\n            texteCorr += `$=${texFraction(\n              e / p + \"\\\\times\\\\cancel{\" + p + \"}\",\n              f / p + \"\\\\times\\\\cancel{\" + p + \"}\"\n            )}$`;\n            texteCorr += `$=${texFractionReduite(e / p, f / p)}$`;\n          }\n*/\n          break;\n\n\n        case 2: // sans piège fraction2 x fraction3 + fraction1  (tout positif)\n        texte = `$${texFraction(c,d)}\\\\times${texFraction(e, f)}+${texFraction(a, b)}$`;\n        produit=produitDeDeuxFractions(c,d,e,f)\n        texteCorr = `$${texFraction(c,d)}\\\\times${texFraction(e, f)}+${texFraction(a, b)}$`;\n        if (this.correctionDetaillee) {\n        texteCorr += `$=${texFraction(c + \"\\\\times\" + e,d + \"\\\\times\" + f)}+${texFraction(a, b)}$`;\n        texteCorr += `$=${texFraction(c * e,d * f)}+${texFraction(a, b)}$`;\n        }\n        else {\n          texteCorr += `$=${produit[1]}+${texFraction(a, b)}$`;\n          texteCorr += `$=${produit[0]}+${texFraction(a, b)}$`;\n        }\n        // faut-il simplifier c*e/d*f\n        if (!this.correctionDetaillee) {\n          [c,d,e,f]=produit[2]\n        }\n        p = pgcd(c * e, d * f);\n        if (p != 1 && ppcm(b, d * f) > ppcm(b, (d * f) / p)) {\n          texteCorr += `$=${texFraction((e * c) / p + \"\\\\times\\\\cancel{\" + p + \"}\",(f * d) / p + \"\\\\times\\\\cancel{\" + p + \"}\")}+${texFraction(a, b)}$`;\n          c = (e * c) / p;\n          d = (f * d) / p;\n        } else {\n          c = e * c;\n          d = f * d;\n        }\n        p = ppcm(b, d); // p = dénominateur commun\n        k1 = p / b;\n        k2 = p / d;\n        if (k2 != 1) {\n          texteCorr += `$=${texFraction(\n            c + miseEnEvidence(\"\\\\times\" + k2),\n            d + miseEnEvidence(\"\\\\times\" + k2)\n          )}$`;\n        } else { if (k1!=1) {\n          texteCorr += `$=${texFraction(c, d)}$`;\n        }\n      }\n\n        if (k1 != 1) {\n          texteCorr += `$+${texFraction(\n            a + miseEnEvidence(\"\\\\times\" + k1),\n            b + miseEnEvidence(\"\\\\times\" + k1)\n          )}$`;\n        } else {\n          if (k2!=1) {\n          texteCorr += `$+${texFraction(a, b)}$`;\n          }\n        }\n\n        if (this.correctionDetaillee) {\n          texteCorr += `$=${texFraction(c * k2,p)}+${texFraction(a * k1, p)}$`;\n        }\n        e = a * k1 + c * k2;\n        f = p;\n\n        texteCorr += `$=${texFraction(e, f)}${simplificationDeFractionAvecEtapes(e, f)}$`;\n   /*     p = pgcd(e, f);\n        // faut-il simplifier e/f\n        if (p != 1) {\n          texteCorr += `$=${texFraction(\n            e / p + \"\\\\times\\\\cancel{\" + p + \"}\",\n            f / p + \"\\\\times\\\\cancel{\" + p + \"}\"\n          )}$`;\n          texteCorr += `$=${texFractionReduite(e, f)}$`;\n        }*/\n        break;\n\n       \n        case 3: // avec piege addition non prioritaire fraction2 * fraction3 + fraction1  tout positif\n          d = b;\n          produit=produitDeDeuxFractions(c,d,e,f)\n          texte = `$${texFraction(c,d)}\\\\times${texFraction(e, f)}+${texFraction(a, b)}$`;\n          texteCorr = `$${texFraction(c,d)}\\\\times${texFraction(e, f)}+${texFraction(a, b)}$`;\n          if (this.correctionDetaillee){\n          texteCorr += `$=${texFraction(c + \"\\\\times\" + e,d + \"\\\\times\" + f)}+${texFraction(a, b)}$`;\n          texteCorr += `$=${texFraction(c * e,d * f)}+${texFraction(a, b)}$`;\n          }\n          else {\n            texteCorr += `$=${produit[1]}+${texFraction(a, b)}$`;\n            texteCorr += `$=${produit[0]}+${texFraction(a, b)}$`;\n          }\n          // faut-il simplifier c*e/d*f\n          if (!this.correctionDetaillee) {\n            [c,d,e,f]=produit[2]\n          }\n          p = pgcd(c * e, d * f);\n          if (p != 1 && ppcm(b, d * f) > ppcm(b, (d * f) / p)) {\n            texteCorr += `$=${texFraction(\n              (e * c) / p + \"\\\\times\\\\cancel{\" + p + \"}\",\n              (f * d) / p + \"\\\\times\\\\cancel{\" + p + \"}\"\n            )}+${texFraction(a, b)}$`;\n            c = (e * c) / p;\n            d = (f * d) / p;\n          } else {\n            c = e * c;\n            d = f * d;\n          }\n          p = ppcm(b, d); //denominateur commun = p\n          k1 = p / b;\n          k2 = p / d;\n\n          if (k2 != 1) {\n            texteCorr += `$=${texFraction(\n              c + \"\\\\times\" + k2,\n              d + \"\\\\times\" + k2\n            )}$`;\n          } else { if (k1!=1) {\n            texteCorr += `$=${texFraction(c, d)}$`;\n          }}\n\n          if (k1 != 1) {\n            texteCorr += `$+${texFraction(\n              a + miseEnEvidence(\"\\\\times\" + k1),\n              b + miseEnEvidence(\"\\\\times\" + k1)\n            )}$`;\n          } else { if (k2!=1) {\n            texteCorr += `$+${texFraction(a, b)}$`;\n          }}\n          if(this.correctionDetaillee){\n          texteCorr += `$=${texFraction(c * k2,d * k2)}+${texFraction(a * k1, b * k1)}$`;\n          }\n          e = a * k1 + c * k2;\n          f = p;\n            texteCorr += `$=${texFraction(e, f)}${simplificationDeFractionAvecEtapes(e, f)}$`;\n   /*      p = pgcd(e, f);\n          // faut-il simplifier e/f\n          if (p != 1) {\n            texteCorr += `$=${texFraction(\n              e / p + \"\\\\times\\\\cancel{\" + p + \"}\",\n              f / p + \"\\\\times\\\\cancel{\" + p + \"}\"\n            )}$`;\n            texteCorr += `$=${texFractionReduite(e, f)}$`;\n            \n          }*/\n          break;\n\n        case 4:\n          a = a * randint(-1, 1, [0]);\n          b = b * randint(-1, 1, [0]);\n          c = c * randint(-1, 1, [0]);\n          d = d * randint(-1, 1, [0]);\n          e = e * randint(-1, 1, [0]);\n          f = f * randint(-1, 1, [0]);\n\n          nombre_de_signe_moins = (c < 0) + (d < 0) + (e < 0) + (f < 0);\n          if (Math.pow(-1, nombre_de_signe_moins) == 1) {\n            signe2 = \"+\";\n          } else {\n            signe2 = \"-\";\n          }\n          texte = `$${texFraction(a, b)}+${texFraction(c,d)}\\\\times${texFraction(e, f)}=$`;\n          texteCorr = `$${texFraction(a, b)}+${texFraction(c,d)}\\\\times${texFraction(e, f)}$`;\n\n          c = abs(c); // gestion du signe du produit avec {signe}\n          d = abs(d);\n          e = abs(e);\n          f = abs(f);\n\n          if (a * b > 0) {\n            //suppression des signes - superflus de la première fraction\n            signe1 = \"\";\n          } else {\n            signe1 = \"-\";\n          }\n\n          a = abs(a);\n          b = abs(b);\n          produit=produitDeDeuxFractions(c,d,e,f)\n          if (this.correctionDetaillee) {\n          texteCorr += `$=${signe1}${texFraction(\n            a,\n            b\n          )}${signe2}${texFraction(c + \"\\\\times\" + e, d + \"\\\\times\" + f)}$`;\n          texteCorr += `$=${signe1}${texFraction(\n            a,\n            b\n          )}${signe2}${texFraction(c * e, d * f)}$`;\n          }\n          else {\n            texteCorr += `$=${signe1}${texFraction(\n              a,\n              b\n            )}${signe2}${produit[1]}$`;\n            texteCorr += `$=${signe1}${texFraction(\n              a,\n              b\n            )}${signe2}${produit[0]}$`;\n            }\n          // faut-il simplifier c*e/d*f\n          if (!this.correctionDetaillee) {\n            [c,d,e,f]=produit[2]\n          }\n          p = pgcd(c * e, d * f);\n          if (p != 1 && ppcm(b, d * f) > ppcm(b, (d * f) / p)) {\n            texteCorr += `$=${signe1}${texFraction(\n              a,\n              b\n            )}${signe2}${texFraction(\n              (e * c) / p + \"\\\\times\\\\cancel{\" + p + \"}\",\n              (f * d) / p + \"\\\\times\\\\cancel{\" + p + \"}\"\n            )}$`;\n            c = (e * c) / p;\n            d = (f * d) / p;\n          } else {\n            c = e * c;\n            d = f * d;\n          }\n          p = ppcm(d, b); // mise au même dénominateur\n          if (d % b != 0 && b % d != 0) {\n            // dénominateur commun = p\n            k1 = p / b;\n            k2 = p / d;\n            texteCorr += `$=${signe1}${texFraction(\n              a + miseEnEvidence(\"\\\\times\" + k1),\n              b + miseEnEvidence(\"\\\\times\" + k1)\n            )}${signe2}${texFraction(\n              c + miseEnEvidence(\"\\\\times\" + k2),\n              d + miseEnEvidence(\"\\\\times\" + k2)\n            )}$`;\n            texteCorr += `$=${signe1}${texFraction(\n              a * k1,\n              b * k1\n            )}${signe2}${texFraction(c * k2, d * k2)}$`;\n            texteCorr += `$=${texFraction(\n              signe1 + a * k1 + signe2 + c * k2,\n              b * k1\n            )}$`;\n            a = a * k1;\n            c = c * k2;\n            d = p;\n          } else {\n            if (p == d) {\n              k1 = d / b; // d = dénominateur commun\n              texteCorr += `$=${signe1}${texFraction(\n                a + miseEnEvidence(\"\\\\times\" + k1),\n                b + miseEnEvidence(\"\\\\times\" + k1)\n              )}${signe2}${texFraction(c, d)}$`;\n              texteCorr += `$=${signe1}${texFraction(\n                a * k1,\n                d\n              )}${signe2}${texFraction(c, d)}$`;\n              texteCorr += `$=${texFraction(\n                signe1 + a * k1 + signe2 + c,\n                d\n              )}$`;\n              a = a * k1;\n            } else {\n              // b=k2*d\n              k2 = b / d; // b= dénominateur commun\n              texteCorr += `$=${signe1}${texFraction(\n                a,\n                b\n              )}${signe2}${texFraction(\n                c + miseEnEvidence(\"\\\\times\" + k2),\n                d + miseEnEvidence(\"\\\\times\" + k2)\n              )}$`;\n              texteCorr += `$=${signe1}${texFraction(\n                a,\n                b\n              )}${signe2}${texFraction(c * k2, b)}$`;\n              texteCorr += `$=${texFraction(\n                signe1 + a + signe2 + c * k2,\n                b\n              )}$`;\n              c = c * k2;\n              d = d * k2;\n            }\n          }\n\n          if (a != c) {\n            e = 0;\n            if (signe1 == \"\") {\n              e = a;\n            } else {\n              e = -a;\n            }\n            if (signe2 == \"+\") {\n              e += c;\n            } else {\n              e = e - c;\n            }\n          } else {\n            if (\n              (signe1 == \"-\" && signe2 == \"+\") ||\n              (signe1 == \"\" && signe2 == \"-\")\n            ) {\n              e = 0;\n            } else {\n              e = 0;\n              if (signe1 == \"\") {\n                e = a + c;\n              } else {\n                e = -a - c;\n              }\n            }\n          }\n\n          texteCorr += `$=${texFractionSigne(e, d)}${simplificationDeFractionAvecEtapes(e, d)}$`;\n/*          p = pgcd(abs(e), d);\n          if (p != 1) {\n            f = d / p;\n            e = e / p;\n            if (e > 0) {\n              // fraction positive => pas de signe\n              texteCorr += `$=${texFraction(\n                e + \"\\\\times\\\\cancel{\" + p + \"}\",\n                f + \"\\\\times\\\\cancel{\" + p + \"}\"\n              )}$`;\n              texteCorr += `$=${simplificationDeFractionAvecEtapes(e, f)}$`;\n            } else {\n              // numérateur négatif => signe - devant les fractions suivantes.\n              texteCorr += `$=-${texFraction(\n                -e + \"\\\\times\\\\cancel{\" + p + \"}\",\n                f + \"\\\\times\\\\cancel{\" + p + \"}\"\n              )}$`;\n              texteCorr += `$=${simplificationDeFractionAvecEtapes(e, f)}$`;\n            }\n          }\n*/\n          break;\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this); //Espacement de 2 em entre chaque questions.\n  };\n  this.besoinFormulaireNumerique = [\n    \"Niveau de difficulté \",4,\n    \"1 : Fractions faciles, positives ou non\\n2 : Nombres positifs sans piège de priorité\\n3 : Deux calculs avec positifs et piège de priorité et deux calculs avec relatifs\\n4 : Calculs avec relatifs\",\n  ];\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}