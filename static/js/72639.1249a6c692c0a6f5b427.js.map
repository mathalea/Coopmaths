{"version":3,"file":"js/72639.1249a6c692c0a6f5b427.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4A11-0.js","webpack://mathalea/./src/js/exercices/5e/5A13.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import ExerciceDecomposerEnFacteursPremiers from '../5e/5A13.js'\nexport const titre = 'Décomposer un nombre entier en produit de (petits) facteurs premiers'\nexport const dateDeModifImportante = '2/11/2021'\nexport { interactifReady, interactifType } from '../5e/5A13.js'\n/**\n * @author Guillaume Valmont\n * reference 4A11-0\n */\nexport default function ExerciceDecomposerEnFacteursPremiers4e () {\n  ExerciceDecomposerEnFacteursPremiers.call(this)\n  this.titre = titre\n  this.nbQuestions = 4\n  this.sup = 3 // 5 facteurs par défaut\n  this.sup2 = true // une multiplication par 100 une fois sur quatre\n  this.besoinFormulaire4CaseACocher = ['Décomposition avec des puissances', false]\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, choice, compareNombres, texNombre, combinaisonListes, texFactorisation, texteEnCouleurEtGras } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const titre = 'Décomposition en facteurs premiers'\n\n/**\n* Décomposer en produit de facteurs premiers un nombre (la décomposition aura 3, 4 ou 5 facteurs premiers)\n* @author Rémi Angot\n5A13\n*/\nexport default function ExerciceDecomposerEnFacteursPremiers () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = \"Écrire les nombres suivants sous la forme d'un produit de facteurs premiers rangés dans l'ordre croissant.\"\n  this.spacing = 2\n  this.nbQuestions = 6\n  this.sup = 2 // 4 facteurs par défaut\n  this.sup2 = false // pas de multiplication par 100\n  this.sup3 = false\n  this.sup4 = false\n  this.correctionDetailleeDisponible = true // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = false // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    let grandNombres\n    let listeFacteurs1, listeFacteurs2\n    if (this.sup3) {\n      listeFacteurs1 = [2, 3, 5, 7, 11]\n      listeFacteurs2 = [2, 3, 7, 13, 17]\n    } else {\n      listeFacteurs1 = [2, 3, 5]\n      listeFacteurs2 = [2, 5, 7, 11]\n    }\n    if (this.sup2 && this.sup3) {\n      grandNombres = combinaisonListes([true, true, false, true], this.nbQuestions)\n    } else if (this.sup2) {\n      grandNombres = combinaisonListes([false, false, false, true], this.nbQuestions)\n    } else {\n      grandNombres = combinaisonListes([false, false, false, false], this.nbQuestions)\n    }\n    this.sup = parseInt(this.sup)\n    for (let i = 0, n, facteurs = [], nbFacteurs, texte, reponse, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      facteurs = []\n      nbFacteurs = this.sup + 2\n      for (let k = 0; k < nbFacteurs; k++) {\n        if (k < nbFacteurs - 1) {\n          if (nbFacteurs > 3 && k === 0) {\n            this.sup3 ? facteurs.push(choice([2, 3])) : facteurs.push(2)\n          } else if (nbFacteurs > 4 && k === 1) {\n            this.sup3 ? facteurs.push(choice([2, 3])) : facteurs.push(2)\n          } else {\n            this.sup3 ? facteurs.push(choice(listeFacteurs1.concat(7))) : facteurs.push(choice(listeFacteurs1))\n          }\n        } else {\n          this.sup3 ? facteurs.push(choice(listeFacteurs2.concat([3, 13]))) : facteurs.push(choice(listeFacteurs2))\n        }\n      }\n\n      if (this.sup2 && grandNombres[i]) { // Une fois sur 4 on multilie le nombre par 100 (par 60 pour le niveau 2nde)\n        this.sup3 ? facteurs.push(2, 2, 3, 5) : facteurs.push(2, 2, 5, 5)\n      }\n      n = 1\n      for (let k = 0; k < facteurs.length; k++) {\n        n = n * facteurs[k]\n      }\n      texte = '$ ' + texNombre(n) + ' = \\\\dotfill $'\n      if (!this.correctionDetaillee) {\n        texteCorr = '$ ' + texNombre(n) + ' = '\n      } else {\n        texteCorr = ''\n      }\n      reponse = ''\n      facteurs.sort(compareNombres) // classe les facteurs dans l'ordre croissant\n      let ensembleDeFacteurs = new Set(facteurs)\n      ensembleDeFacteurs = [...ensembleDeFacteurs] // tableau des facteurs sans répétition\n      let produitAvecPuissances = ''\n      for (let k = 0; k < ensembleDeFacteurs.length; k++) {\n        const facteur = ensembleDeFacteurs[k]\n        let puissance = 0\n        for (let j = 0; j < facteurs.length; j++) {\n          if (facteurs[j] === facteur) puissance++\n        }\n        if (puissance > 1) {\n          produitAvecPuissances += `${facteur}^${puissance}`\n        } else {\n          produitAvecPuissances += `${facteur}`\n        }\n        if (k !== ensembleDeFacteurs.length - 1) produitAvecPuissances += ' \\\\times '\n      }\n      let produitRestant = 1\n      let debutDecomposition = ''\n      let decompositionFinale = ''\n      // texteCorr += facteurs\n      for (let k = 0; k < facteurs.length - 1; k++) {\n        if (!this.sup3 && !this.sup4) {\n          if (!this.correctionDetaillee) {\n            texteCorr += facteurs[k] + ' \\\\times  '\n          } else {\n            debutDecomposition += facteurs[k] + ' \\\\times  '\n            for (let j = k + 1; j < facteurs.length; j++) {\n              produitRestant = produitRestant * facteurs[j]\n            }\n            texteCorr += '$' + texNombre(n) + ' = ' + debutDecomposition + produitRestant + '$<br>'\n            decompositionFinale = debutDecomposition + produitRestant\n            produitRestant = 1\n          }\n        }\n        reponse += facteurs[k] + '\\\\times'\n      }\n      if (!this.sup3 && !this.sup4) {\n        if (!this.correctionDetaillee) {\n          texteCorr += facteurs[facteurs.length - 1]\n        }\n      } else {\n        texteCorr += texFactorisation(n, true)\n      }\n      if (!this.correctionDetaillee) {\n        texteCorr += ' $'\n      } else {\n        texteCorr += texteEnCouleurEtGras(`Donc la décomposition en produit de facteurs premiers de $\\\\mathbf{${texNombre(n)}}$ vaut $\\\\mathbf{${decompositionFinale}}$`)\n      }\n      reponse += facteurs[facteurs.length - 1]\n      texte += ajouteChampTexteMathLive(this, i)\n      setReponse(this, i, [reponse, produitAvecPuissances])\n      if (this.questionJamaisPosee(i, ...facteurs)) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : 3 facteurs\\n2 : 4 facteurs\\n3 : 5 facteurs']\n  this.besoinFormulaire2CaseACocher = ['Grands nombres (une fois sur quatre)']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","dateDeModifImportante","ExerciceDecomposerEnFacteursPremiers4e","ExerciceDecomposerEnFacteursPremiers","this","nbQuestions","sup","sup2","besoinFormulaire4CaseACocher","interactifReady","interactifType","Exercice","consigne","spacing","sup3","sup4","correctionDetailleeDisponible","correctionDetaillee","nouvelleVersion","grandNombres","listeFacteurs1","listeFacteurs2","listeQuestions","listeCorrections","autoCorrection","combinaisonListes","parseInt","n","nbFacteurs","texte","reponse","texteCorr","i","facteurs","cpt","k","push","choice","concat","length","texNombre","sort","compareNombres","ensembleDeFacteurs","Set","produitAvecPuissances","facteur","puissance","j","produitRestant","debutDecomposition","decompositionFinale","texFactorisation","texteEnCouleurEtGras","ajouteChampTexteMathLive","setReponse","questionJamaisPosee","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}