{"version":3,"file":"js/55739.c7666ff05c81c261abe5.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/CM/CM020.js","webpack://mathalea/./src/js/exercices/CM/_TrouverSolutionMathador.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu } from '../../modules/outils.js'\nimport TrouverSolutionMathador from './_TrouverSolutionMathador.js'\nexport const titre = 'Générateur de compte est bon version semi-aléatoire'\n\n/**\n * @author Jean-Claude Lhote\n  * référence CM020\n * Dans cette version, il est possible de choisir 1,2,3,4 ou 5 nombres du tirage et de contraindre la cible entre deux valeurs\n */\nexport default function LeCompteEstBonV4 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne =\n    'Écrire un calcul égal au nombre cible en utilisant les 5 nombres, 4 opérations différentes et éventuellement des parenthèses.'\n  this.nbQuestions = 1\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let solutionMathador = []\n    let tirage, min, max, texteCorr\n    let minmax = []\n    if (!this.sup2) {\n      // Si rien n'est saisi\n      min = 0\n      max = 100\n    } else {\n      if (typeof this.sup2 === 'number') {\n        // Si c'est un nombre c'est qu'il y a qu'une seule grandeur\n        min = 0\n        max = this.sup2\n      } else {\n        minmax = this.sup2.split('-') // Sinon on crée un tableau à partir des valeurs séparées par des -\n        min = minmax[0]\n        max = minmax[1]\n      }\n    }\n    if (!this.sup) {\n      // Si rien n'est saisi\n      solutionMathador = TrouverSolutionMathador(min, max)\n    } else {\n      if (typeof this.sup === 'number') {\n        // Si c'est un nombre c'est qu'il y a qu'une seule grandeur\n        solutionMathador = TrouverSolutionMathador(min, max, this.sup)\n      } else {\n        tirage = this.sup.split('-') // Sinon on crée un tableau à partir des valeurs séparées par des -\n        for (let i = 0; i < tirage.length; i++) tirage[i] = parseInt(tirage[i])\n        solutionMathador = TrouverSolutionMathador(min, max, ...tirage)\n      }\n    }\n\n    tirage = solutionMathador[0]\n    const solution = solutionMathador[1]\n    const expression = solutionMathador[3]\n\n    const texte = `Le tirage est le suivant : $${tirage[0]}~;~${tirage[1]}~;~${tirage[2]}~;~${tirage[3]}~;~${tirage[4]}$ <br>La cible est : $${solution}$`\n    texteCorr = `Pour le tirage $${tirage[0]}~;~${tirage[1]}~;~${tirage[2]}~;~${tirage[3]}~;~${tirage[4]}$ et pour la cible $${solution}$, la solution est : $${expression}=${solution}$ `\n    texteCorr += `ou $${solutionMathador[4]}$.<br>`\n    texteCorr += 'En effet : <br>'\n    for (let i = 0; i < 4; i++) {\n      texteCorr += `$${solutionMathador[2][i]}$<br>`\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = [\n    'Choix des nombres du tirage (de aucun à cinq)',\n    'Nombres séparés par des tirets'\n  ] // Texte, tooltip\n  this.besoinFormulaire2Texte = [\n    'Intervalle pour la cible (ou rien pour cible non contrainte)',\n    'Minimum-Maximum (éviter de trop contraindre la cible, cela peut bloquer le programme)'\n  ] // Texte, tooltip\n\n  // this.besoinFormulaire2Numerique = ['Limite supérieure',100];\n}\n","import { choice, shuffle } from '../../modules/outils.js'\n\n/**\n * @author Jean-Claude Lhote\n * @param {number} min Valeur minimum pour la solution\n * @param {number} max Valeur maximum pour la solution\n * Cette fonction produit aléatoirement un tirage de 5 nombres, une solution, un tableau contenant les calculs successifs, une chaine contenant l'expression mathador correspondante\n * @returns {array} [tirage=[a,b,c,d,e],solution (compris entre min et max),operationsSuccessives=[string1,string2,string3,string4,string5],expression]\n * les string1 à 5 ainsi que l'expresion sont ) mettre en mode maths.\n * sert dans les exercices CM019,\n */\nexport default function TrouverSolutionMathador (\n  min,\n  max,\n  A = 1,\n  B = 4,\n  C = 8,\n  D = 3,\n  E = 5\n) {\n  let eureka\n  let a\n  let b\n  let c\n  let d\n  let e\n  let tirage\n  let nombresRestants\n  let operationsRestantes\n  let expressionEnCoursF\n  let expressionEnCoursD\n  let op\n  let part1f\n  let part2f\n  let part1d\n  let part2d\n  let operationsSuccessives = []\n  let solution\n  const listeChoix = [\n    1,\n    2,\n    2,\n    3,\n    3,\n    4,\n    4,\n    4,\n    4,\n    5,\n    6,\n    6,\n    6,\n    6,\n    7,\n    7,\n    8,\n    8,\n    8,\n    8,\n    9,\n    9,\n    9,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20\n  ]\n  eureka = false\n  const nbDetermines = arguments.length - 2\n  while (eureka === false) {\n    tirage = []\n\n    if (nbDetermines < 1) { a = parseInt(choice(listeChoix)) } else { a = A }\n    if (nbDetermines < 2) { b = parseInt(choice(listeChoix, [13, 14, 15, 16, 17, 18, 19, 20, a])) } else { b = B }\n    if (nbDetermines < 3) {\n      c = parseInt(\n        choice(listeChoix, [12, 13, 14, 15, 16, 17, 18, 19, 20, a, b])\n      )\n    } else { c = C }\n    if (nbDetermines < 4) {\n      d = parseInt(\n        choice(listeChoix, [12, 13, 14, 15, 16, 17, 18, 19, 20, b, c])\n      )\n    } else { d = D }\n    if (nbDetermines < 5) { e = parseInt(choice(listeChoix, [12, 13, 14, 15, 16, 17, 18, 19, 20])) } else { e = E }\n    tirage.push(a, b, c, d, e)\n    nombresRestants = shuffle(tirage)\n    operationsRestantes = ['\\\\times', '+', '-', '\\\\div']\n    operationsRestantes = shuffle(operationsRestantes)\n    expressionEnCoursF = [\n      `${nombresRestants[0]}`,\n      `${nombresRestants[1]}`,\n      `${nombresRestants[2]}`,\n      `${nombresRestants[3]}`,\n      `${nombresRestants[4]}`\n    ]\n    expressionEnCoursD = [\n      `${nombresRestants[0]}`,\n      `${nombresRestants[1]}`,\n      `${nombresRestants[2]}`,\n      `${nombresRestants[3]}`,\n      `${nombresRestants[4]}`\n    ]\n\n    while (nombresRestants.length > 1) {\n      b = nombresRestants.pop()\n      a = nombresRestants.pop()\n      part2f = expressionEnCoursF.pop()\n      part1f = expressionEnCoursF.pop()\n      part2d = expressionEnCoursD.pop()\n      part1d = expressionEnCoursD.pop()\n\n      op = operationsRestantes.pop()\n      if (op === '\\\\times') {\n        c = a * b\n        expressionEnCoursF.push(`${part1f}${op}${part2f}`)\n        expressionEnCoursD.push(`${part1d}${op}${part2d}`)\n        nombresRestants.push(c)\n      } else if (op === '\\\\div') {\n        if (a % b === 0) {\n          c = a / b\n          if (part1f[0] === '\\\\') {\n            part1f = part1f.substring(6, part1f.length)\n            part1f = part1f.substring(0, part1f.length - 7)\n          }\n          if (part2f[0] === '\\\\') {\n            part2f = part2f.substring(6, part2f.length)\n            part2f = part2f.substring(0, part2f.length - 7)\n          }\n          expressionEnCoursF.push(`\\\\dfrac{${part1f}}{${part2f}}`)\n          expressionEnCoursD.push(`${part1d}${op}${part2d}`)\n          nombresRestants.push(c)\n        } else { break }\n      } else if (op === '-') {\n        if (a > b) {\n          c = a - b\n          expressionEnCoursF.push(\n            `\\\\left(${part1f}${op}${part2f}\\\\right)`\n          )\n          expressionEnCoursD.push(\n            `\\\\left(${part1d}${op}${part2d}\\\\right)`\n          )\n          nombresRestants.push(c)\n        } else { break }\n      } else if (op === '+') {\n        c = a + b\n        if (part2f.substring(0, 2) === '\\\\l') {\n          part2f = part2f.substring(6, part2f.length)\n          part2f = part2f.substring(0, part2f.length - 7)\n        }\n        expressionEnCoursF.push(`\\\\left(${part1f}${op}${part2f}\\\\right)`)\n        if (part2d.substring(0, 2) === '\\\\l') {\n          part2d = part2d.substring(6, part2d.length)\n          part2d = part2d.substring(0, part2d.length - 7)\n        }\n        expressionEnCoursD.push(`\\\\left(${part1d}${op}${part2d}\\\\right)`)\n        nombresRestants.push(c)\n      }\n      operationsSuccessives.push(`${a}` + op + `${b}=${c}`)\n    }\n\n    if (nombresRestants.length === 1 && operationsRestantes.length === 0) {\n      solution = nombresRestants[0]\n      if (solution >= min && solution <= max) {\n        eureka = true\n        if (expressionEnCoursF[0][0] === '\\\\' &&\n          expressionEnCoursF[0][1] === 'l') {\n          expressionEnCoursF[0] = expressionEnCoursF[0].substring(\n            6,\n            expressionEnCoursF[0].length\n          )\n          expressionEnCoursF[0] = expressionEnCoursF[0].substring(\n            0,\n            expressionEnCoursF[0].length - 7\n          )\n        }\n        if (expressionEnCoursD[0][0] === '\\\\' &&\n          expressionEnCoursD[0][1] === 'l') {\n          expressionEnCoursD[0] = expressionEnCoursD[0].substring(\n            6,\n            expressionEnCoursD[0].length\n          )\n          expressionEnCoursD[0] = expressionEnCoursD[0].substring(\n            0,\n            expressionEnCoursD[0].length - 7\n          )\n        }\n        return [\n          tirage,\n          solution,\n          operationsSuccessives,\n          expressionEnCoursF,\n          expressionEnCoursD\n        ]\n      } else { operationsSuccessives = [] }\n    } else { operationsSuccessives = [] }\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","LeCompteEstBonV4","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","tirage","min","max","texteCorr","solutionMathador","minmax","sup2","split","TrouverSolutionMathador","i","length","parseInt","solution","expression","texte","push","listeQuestionsToContenu","besoinFormulaireTexte","besoinFormulaire2Texte","A","B","C","D","E","eureka","a","b","c","d","e","nombresRestants","operationsRestantes","expressionEnCoursF","expressionEnCoursD","op","part1f","part2f","part1d","part2d","operationsSuccessives","listeChoix","nbDetermines","arguments","choice","shuffle","pop","substring","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}