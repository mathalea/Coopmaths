{"version":3,"file":"js/70297.426b472818a33595e0ee.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6D11.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import { combinaisonListes, listeQuestionsToContenu, randint } from '../../modules/outils.js'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\n\nexport const titre = 'Additionner des durées'\n\n/**\n * Additions de durées de différents :\n * * MS+MS=1hMS sans retenue sur les s\n * * MS+MS=1hMS avec retenue\n * * HM+HM avec retenue\n * * HMS+HMS avec retenue sur les min\n * * HMS+HMS avec retenues min et s\n * @author Rémi Angot\n * Référence 6D11\n */\nexport default function SommeDeDurees () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Compléter les égalités suivantes'\n  this.sup = 1 // 2 niveaux de difficultés\n  this.spacing = 2\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let typesDeQuestions\n\n    if (parseInt(this.sup) === 1) {\n      typesDeQuestions = combinaisonListes([1, 3], this.nbQuestions)\n    } else {\n      typesDeQuestions = combinaisonListes(\n        [1, 2, 3, 4, 5],\n        this.nbQuestions\n      )\n    }\n    for (let i = 0, h1, h2, m1, m2, s1, s2, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      if (typesDeQuestions[i] === 1) {\n        s1 = randint(11, 39)\n        s2 = randint(1, 20)\n        m1 = randint(20, 59)\n        m2 = randint(40, 59)\n        texte = `$${m1}~\\\\text{min}~${s1}~\\\\text{s}+${m2}~\\\\text{min}~${s2}~\\\\text{s}=\\\\dotfill$`\n        texteCorr = `$${m1}~\\\\text{min}~${s1}~\\\\text{s}+${m2}~\\\\text{min}~${s2}~\\\\text{s}= ${m1 + m2}~\\\\text{min}~${s1 + s2}~\\\\text{s}= 1~\\\\text{h}~${m1 + m2 - 60}~\\\\text{min}~${s1 + s2}~\\\\text{s}$`\n      }\n      if (typesDeQuestions[i] === 2) {\n        s1 = randint(21, 39)\n        s2 = randint(40, 59)\n        m1 = randint(20, 59)\n        m2 = randint(40, 59)\n        texte = `$${m1}~\\\\text{min}~${s1}~\\\\text{s}+${m2}~\\\\text{min}~${s2}~\\\\text{s}=\\\\dotfill$`\n        texteCorr = `$${m1}~\\\\text{min}~${s1}~\\\\text{s}+${m2}~\\\\text{min}~${s2}~\\\\text{s}= ${m1 + m2}~\\\\text{min}~${s1 + s2}~\\\\text{s} = ${m1 + m2 + 1}~\\\\text{min}~${s1 + s2 - 60}~\\\\text{s} = 1~\\\\text{h}~${m1 + m2 - 60}~\\\\text{min}~${s1 + s2 - 60}~\\\\text{s}$`\n      }\n      if (typesDeQuestions[i] === 3) {\n        h1 = randint(2, 12)\n        h2 = randint(2, 11)\n        m1 = randint(30, 50)\n        m2 = randint(30, 50)\n        texte = `$${h1}~\\\\text{h}~${m1}~\\\\text{min}+${h2}~\\\\text{h}~${m2}~\\\\text{min}=\\\\dotfill$`\n        texteCorr = `$${h1}~\\\\text{h}~${m1}~\\\\text{min}+${h2}~\\\\text{h}~${m2}~\\\\text{min}= ${h1 + h2}~\\\\text{h}~${m1 + m2}~\\\\text{min} = ${h1 + h2 + 1}~\\\\text{h}~${m1 + m2 - 60}~\\\\text{min}$`\n      }\n      if (typesDeQuestions[i] === 4) {\n        h1 = randint(2, 12)\n        h2 = randint(2, 11)\n        m1 = randint(30, 50)\n        m2 = randint(30, 50)\n        s1 = randint(2, 55)\n        s2 = randint(1, 60 - s1 - 1)\n        texte = `$${h1}~\\\\text{h}~${m1}~\\\\text{min}~${s1}~\\\\text{s}+${h2}~\\\\text{h}~${m2}~\\\\text{min}~${s2}~\\\\text{s}=\\\\dotfill$`\n        texteCorr = `$${h1}~\\\\text{h}~${m1}~\\\\text{min}~${s1}~\\\\text{s}+${h2}~\\\\text{h}~${m2}~\\\\text{min}~${s2}~\\\\text{s}= ${h1 + h2}~\\\\text{h}~${m1 + m2}~\\\\text{min}~${s1 + s2}~\\\\text{s} = ${h1 + h2 + 1}~\\\\text{h}~${m1 + m2 - 60}~\\\\text{min}~${s1 + s2}~\\\\text{s}$`\n      }\n      if (typesDeQuestions[i] === 5) {\n        h1 = randint(2, 12)\n        h2 = randint(2, 11)\n        m1 = randint(30, 50)\n        m2 = randint(30, 50)\n        s1 = randint(2, 55)\n        s2 = randint(60 - s1, 59)\n        texte = `$${h1}~\\\\text{h}~${m1}~\\\\text{min}~${s1}~\\\\text{s}+${h2}~\\\\text{h}~${m2}~\\\\text{min}~${s2}~\\\\text{s}=\\\\dotfill$`\n        texteCorr = `$${h1}~\\\\text{h}~${m1}~\\\\text{min}~${s1}~\\\\text{s}+${h2}~\\\\text{h}~${m2}~\\\\text{min}~${s2}~\\\\text{s}=`\n        texteCorr += ` ${h1 + h2}~\\\\text{h}~${m1 + m2}~\\\\text{min}~${s1 + s2}~\\\\text{s} = ${h1 + h2}~\\\\text{h}~${m1 + m2 + 1}~\\\\text{min}~${s1 + s2 - 60}~\\\\text{s} =${h1 + h2 + 1}~\\\\text{h}~${m1 + m2 + 1 - 60}~\\\\text{min}~${s1 + s2 - 60}~\\\\text{s}$`\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        if (context.isDiaporama) {\n          texte = texte.replace('=\\\\dotfill', '')\n        }\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2] // \"1 : Additions simples\\n2 : Additions avec d'��ventuelles conversions\"]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","SommeDeDurees","Exercice","this","consigne","sup","spacing","nbQuestions","nbColsCorr","nouvelleVersion","numeroExercice","typesDeQuestions","listeQuestions","listeCorrections","parseInt","combinaisonListes","h1","h2","m1","m2","s1","s2","texte","texteCorr","i","cpt","randint","indexOf","context","replace","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}