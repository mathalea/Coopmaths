{"version":3,"file":"js/66399.933db19295e1c6a30b1c.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5R22.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, ecritureNombreRelatif, ecritureNombreRelatifc, ecritureAlgebrique, ecritureAlgebriquec, signe, texNombreCoul, sommeDesTermesParSigne, triePositifsNegatifs, lettreDepuisChiffre, nombreDeChiffresDansLaPartieEntiere } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Additions et soustractions de nombres relatifs'\nexport const interactifReady = true\n// export const interactifType = 'numerique'\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCOpenNum'\n\n/**\n* Effectuer la somme ou la différence de deux nombres relatifs\n*\n* * On peut paramétrer les distances à zéro qui sont par défaut inférieures à 20\n* * On peut utiliser des écritures simplifiées (ce qui n'est pas le cas par défaut)\n* @author Rémi Angot modifications par Jean-Claude Lhote\n* Référence 5R22\n*/\nexport default function ExerciceAdditionsSoustractionRelatifsV2 (max = 20) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max\n  this.sup2 = false // écriture simplifiée\n  this.titre = titre\n  this.consigne = 'Calculer :'\n  this.spacing = 2\n  this.spacingCorr = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.nbQuestions = 5\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.amcType = amcType\n  this.amcReady = amcReady\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    let relatifs\n    let sommesSignees\n    for (let i = 0, a, b, c, d, e, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      relatifs = []\n      sommesSignees = []\n      a = -1\n      b = choice([-1, 1])\n      if (a === -1 & b === -1) {\n        c = 1\n      } else { // On s'assure que les 3 premières termes n'ont pas le même signe\n        c = choice([-1, 1])\n      }\n      a = randint(1, this.sup) * a\n      b = randint(1, this.sup) * b\n      c = randint(1, this.sup) * c\n      d = randint(1, this.sup) * choice([-1, 1])\n      e = randint(1, this.sup) * choice([-1, 1])\n      const s1 = choice([-1, 1])\n      const s2 = choice([-1, 1])\n      const s4 = choice([-1, 1])\n      let s3\n      if (s1 === 1 & s2 === 1) { // On s'assure que les 3 premières opérations ne sont pas identiques\n        s3 = -1\n      } else if (s1 === -1 & s2 === -1) {\n        s3 = 1\n      } else {\n        s3 = choice([-1, 1])\n      }\n      if (this.sup2) {\n        texte = `$ ${lettreDepuisChiffre(i + 1)} = ${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}${ecritureAlgebrique(d)}${ecritureAlgebrique(e)} = \\\\dotfill $`\n        if (this.interactif && context.isHtml) {\n          texte = ajouteChampTexteMathLive(this, i, 'largeur25 inline', { texte: `$ ${lettreDepuisChiffre(i + 1)} = ${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}${ecritureAlgebrique(d)}${ecritureAlgebrique(e)} =$` })\n        }\n        if (!context.isHtml && !context.isAmc) {\n          texte += `<br>$ ${lettreDepuisChiffre(i + 1)} = \\\\dotfill $`\n        }\n        relatifs = triePositifsNegatifs([a, b, c, d, e])\n        texteCorr = `$ ${lettreDepuisChiffre(i + 1)}\\\\textbf{=}~${texNombreCoul(a)}${ecritureAlgebriquec(b)}${ecritureAlgebriquec(c)}${ecritureAlgebriquec(d)}${ecritureAlgebriquec(e)}\\\\\\\\\\\\phantom{A }\\\\textbf{=}~`\n        if (sommeDesTermesParSigne([a, b, c, d, e])[0] !== 0 && sommeDesTermesParSigne([a, b, c, d, e])[1] !== 0) {\n          texteCorr += `${texNombreCoul(relatifs[0])}${ecritureAlgebriquec(relatifs[1])}${ecritureAlgebriquec(relatifs[2])}${ecritureAlgebriquec(relatifs[3])}${ecritureAlgebriquec(relatifs[4])}\\\\\\\\\\\\phantom{A }\\\\textbf{=}~`\n          texteCorr += `${texNombreCoul(sommeDesTermesParSigne([a, b, c, d, e])[0])}${ecritureAlgebriquec(sommeDesTermesParSigne([a, b, c, d, e])[1])}\\\\\\\\\\\\phantom{A }\\\\textbf{=}~`\n          texteCorr += `${texNombreCoul(a + b + c + d + e)} $`\n        } else if (sommeDesTermesParSigne([a, b, c, d, e])[0] !== 0) { texteCorr += `${texNombreCoul(sommeDesTermesParSigne([a, b, c, d, e])[0])}$` } else { texteCorr += `${ecritureAlgebriquec(sommeDesTermesParSigne([a, b, c, d, e])[1])}$` }\n      } else {\n        texte = `$ ${lettreDepuisChiffre(i + 1)} =  ${ecritureNombreRelatif(a)}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(c)}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)} = \\\\dotfill $`\n        if (this.interactif && context.isHtml) {\n          texte = ajouteChampTexteMathLive(this, i, 'largeur25 inline', { texte: `$ ${lettreDepuisChiffre(i + 1)} =  ${ecritureNombreRelatif(a)}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(c)}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)} = $` })\n        }\n        if (!context.isHtml && !context.isAmc) {\n          texte += `<br>$ ${lettreDepuisChiffre(i + 1)} = \\\\dotfill $`\n        }\n        texteCorr = `$ ${lettreDepuisChiffre(i + 1)} =  ${a}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(c)}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)}$`\n        texteCorr += `<br>$ \\\\phantom{A}= ${ecritureNombreRelatifc(a)}+${ecritureNombreRelatifc(s1 * b)}+${ecritureNombreRelatifc(s2 * c)}+${ecritureNombreRelatifc(s3 * d)}+${ecritureNombreRelatifc(s4 * e)} $`\n\n        relatifs = triePositifsNegatifs([a, s1 * b, s2 * c, s3 * d, s4 * e])\n\n        if (relatifs[0] > 0 & relatifs[4] < 0) {\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureNombreRelatifc(relatifs[0])}+${ecritureNombreRelatifc(relatifs[1])}+${ecritureNombreRelatifc(relatifs[2])}+${ecritureNombreRelatifc(relatifs[3])}+${ecritureNombreRelatifc(relatifs[4])} $`\n        }\n        sommesSignees = sommeDesTermesParSigne([relatifs[0], relatifs[1], relatifs[2], relatifs[3], relatifs[4]])\n        if (sommesSignees[0] !== 0 && sommesSignees[1] !== 0) {\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureNombreRelatifc(sommesSignees[0])}+${ecritureNombreRelatifc(sommesSignees[1])} $`\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureAlgebriquec(a + s1 * b + s2 * c + s3 * d + s4 * e)} $<br>`\n        } else if (sommesSignees[0] !== 0) { texteCorr += `<br>$ \\\\phantom{A}=${ecritureAlgebriquec(sommesSignees[0])}$` } else { texteCorr += `<br>$ \\\\phantom{A}=${ecritureAlgebriquec(sommesSignees[1])}$<br>` }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        if (!this.sup2) {\n          setReponse(this, i, a + s1 * b + s2 * c + s3 * d + s4 * e, { signe: true })\n          if (context.isAmc) {\n            this.autoCorrection[i] = {\n              enonce: texte,\n              propositions: [\n                {\n                  texte: texteCorr,\n                  statut: 3,\n                  feedback: ''\n                }\n              ],\n              reponse: {\n                texte: 'résultat',\n                valeur: a + s1 * b + s2 * c + s3 * d + s4 * e,\n                param: {\n                  digits: Math.max(2, nombreDeChiffresDansLaPartieEntiere(a + s1 * b + s2 * c + s3 * d + s4 * e)),\n                  decimals: 0,\n                  signe: true,\n                  exposantNbChiffres: 0,\n                  exposantSigne: false,\n                  approx: 0\n                }\n              }\n            }\n          }\n        } else {\n          setReponse(this, i, a + b + c + d + e, { signe: true })\n          if (context.isAmc) {\n            this.autoCorrection[i] = {\n              enonce: texte,\n              propositions: [\n                {\n                  texte: texteCorr,\n                  statut: 3,\n                  feedback: ''\n                }\n              ],\n              reponse: {\n                texte: 'résultat',\n                valeur: a + b + c + d + e,\n                param: {\n                  digits: Math.max(2, nombreDeChiffresDansLaPartieEntiere(a + b + c + d + e)),\n                  decimals: 0,\n                  signe: true,\n                  exposantNbChiffres: 0,\n                  exposantSigne: false,\n                  approx: 0\n                }\n              }\n            }\n          }\n        }\n\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 99999]\n  this.besoinFormulaire2CaseACocher = ['Avec des écritures simplifiées']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","ExerciceAdditionsSoustractionRelatifsV2","max","Exercice","this","sup","sup2","consigne","spacing","spacingCorr","nbCols","nbColsCorr","nbQuestions","nouvelleVersion","relatifs","sommesSignees","listeQuestions","listeCorrections","autoCorrection","a","b","c","d","e","texte","texteCorr","i","cpt","choice","randint","s1","s2","s4","s3","lettreDepuisChiffre","ecritureAlgebrique","interactif","context","ajouteChampTexteMathLive","triePositifsNegatifs","texNombreCoul","ecritureAlgebriquec","sommeDesTermesParSigne","ecritureNombreRelatif","signe","ecritureNombreRelatifc","indexOf","push","setReponse","enonce","propositions","statut","feedback","reponse","valeur","param","digits","Math","nombreDeChiffresDansLaPartieEntiere","decimals","exposantNbChiffres","exposantSigne","approx","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}