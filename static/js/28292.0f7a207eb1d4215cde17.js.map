{"version":3,"file":"js/28292.0f7a207eb1d4215cde17.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/Profs/P006.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { arrondi, troncature, calcul, choisitLettresDifferentes } from '../../modules/outils.js'\nimport { point, segment, droiteGraduee2, mathalea2d } from '../../modules/2d.js'\n\nexport const titre = 'Placer un nombre décimal avec des zooms successifs'\n\n/**\n * Fonction permettant aux enseignants de proposer rapidement un axe avec zooms pour placer un décimal\n * ref P006\n * @author Jean-Claude Lhote\n */\nexport default function NombreAPlacer () {\n  Exercice.call(this)\n  this.nbCols = 1\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.sup = 1\n  this.sup2 = 2.573\n  this.sup3 = false\n  this.titre = titre\n\n  this.nouvelleVersion = function () {\n    this.contenu = ''\n    let texte = ''\n    const noms = choisitLettresDifferentes(5, 'QFN')\n    let x1 = 0\n    let x2 = 0\n    let x3 = 0\n    const objets = []\n    objets.length = 0\n    x1 = parseFloat(this.sup2)\n    x1 = arrondi(x1, 4)\n    x2 = troncature(x1, 1)\n    const x21 = troncature(x1, 2)\n    x3 = calcul(x2 + 0.1)\n    const x31 = calcul(x21 + 0.01)\n    const xmin = Math.floor(x2)\n    const xmax = xmin + 1\n    const thickOff = 0.0001\n\n    const extremite = '->'\n    const d1 = droiteGraduee2({\n      x: 0,\n      y: 6,\n      Min: xmin,\n      axePosition: 'H',\n      Max: xmax,\n      thickSec: true,\n      thickTer: true,\n      Unite: 30,\n      thickDistance: 1,\n      thickSecDist: 0.1,\n      thickTerDist: 0.01,\n      thickOffset: thickOff,\n      thickCouleur: 'black',\n      axeCouleur: 'black',\n      axeHauteur: 6,\n      labelsPrincipaux: this.sup3,\n      pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`]],\n      pointTaille: 6,\n      pointOpacite: 0.8,\n      pointCouleur: 'blue',\n      pointStyle: '|',\n      pointEpaisseur: 3,\n      axeStyle: extremite\n    })\n    const d2 = droiteGraduee2({\n      x: 6.5,\n      y: 3,\n      Min: x2,\n      axePosition: 'H',\n      Max: x3,\n      thickSec: true,\n      thickTer: true,\n      Unite: 200,\n      thickSecDist: 0.01,\n      thickTerDist: 0.001,\n      thickDistance: 0.1,\n      thickOffset: thickOff,\n      thickCouleur: 'black',\n      axeCouleur: 'black',\n      axeHauteur: 6,\n      labelsPrincipaux: this.sup3,\n      pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n      pointTaille: 6,\n      pointOpacite: 0.8,\n      pointCouleur: 'blue',\n      pointStyle: '|',\n      pointEpaisseur: 2,\n      axeStyle: extremite\n    })\n    const d3 = droiteGraduee2({\n      x: 6.5,\n      y: 0,\n      Min: x21,\n      axePosition: 'H',\n      Max: x31,\n      thickSec: true,\n      thickTer: true,\n      Unite: 2000,\n      thickSecDist: 0.001,\n      thickTerDist: 0.0001,\n      thickOffset: thickOff,\n      thickCouleur: 'black',\n      axeCouleur: 'black',\n      axeHauteur: 6,\n      labelsPrincipaux: this.sup3,\n      pointListe: [[x1, `${noms[1]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n      pointTaille: 6,\n      pointOpacite: 0.8,\n      pointCouleur: 'blue',\n      pointStyle: '|',\n      pointEpaisseur: 2,\n      axeStyle: extremite\n    })\n\n    const pA1 = point((x2 - xmin) * 30, 6)\n    const pA2 = point(6.5, 3)\n    const pB1 = point((x3 - xmin) * 30, 6)\n    const pB2 = point(26.5, 3)\n    const sA = segment(pA1, pA2)\n    const sB = segment(pB1, pB2)\n    sA.pointilles = true\n    sB.pointilles = true\n    const pC1 = point(6.5 + (x21 - x2) * 200, 3)\n    const pC2 = point(6.5, 0)\n    const pD1 = point(6.5 + (x31 - x2) * 200, 3)\n    const pD2 = point(26.5, 0)\n    const sC = segment(pC1, pC2)\n    const sD = segment(pD1, pD2)\n    sC.pointilles = true\n    sD.pointilles = true\n    const fenetre = { xmin: -1.5, xmax: 35, ymin: -1.5, ymax: 7.5, pixelsParCm: 25, scale: 0.5 }\n    if (this.sup === 3) { objets.push(d1, d2, d3, sA, sB, sC, sD) } else if (this.sup === 2) { objets.push(d1, d2, sA, sB) } else { objets.push(d1) }\n\n    texte = mathalea2d(fenetre, objets)\n    this.contenu += texte\n    if (context.isHtml) {\n      this.contenu += '<br>'\n    } else {\n      this.contenu += '\\\\\\\\'\n    }\n  }\n  this.besoinFormulaireNumerique = ['Nombre de zoom', 3, '1 : sans zoom\\n2 : zoom des centièmes\\n3 : zoom des millièmes']\n  this.besoinFormulaire2Numerique = ['Saisir le nombre décimal ']\n  this.besoinFormulaire3CaseACocher = ['Afficher les abscisses']\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","NombreAPlacer","sup","sup2","sup3","texte","noms","choisitLettresDifferentes","x1","x2","x3","objets","length","parseFloat","arrondi","troncature","x21","calcul","x31","xmin","Math","floor","xmax","thickOff","extremite","d1","droiteGraduee2","x","y","Min","axePosition","Max","thickSec","thickTer","Unite","thickDistance","thickSecDist","thickTerDist","thickOffset","thickCouleur","axeCouleur","axeHauteur","labelsPrincipaux","pointListe","pointTaille","pointOpacite","pointCouleur","pointStyle","pointEpaisseur","axeStyle","d2","d3","pA1","point","pA2","pB1","pB2","sA","segment","sB","pointilles","pC1","pC2","pD1","pD2","sC","sD","mathalea2d","ymin","ymax","pixelsParCm","scale","context"],"sourceRoot":""}