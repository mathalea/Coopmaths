{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6G42.js","webpack://mathalea/./src/js/exercices/6e/_Solide_6e.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","UtiliserVocabulairePave","Solide6e","this","type","Exercice","nbQuestions","nbCols","nbColsCorr","sup","sup2","nouvelleVersion","typesDeQuestionsDisponibles","parseInt","n","length","listeTypeDeQuestions","combinaisonListes","Xmin","Xmax","Ymin","Ymax","ppc","sc","A","B","C","D","E","F","G","H","AB","BC","CD","DA","EF","FG","GH","HE","AE","BF","CG","DH","coeffpersp","listeQuestions","listeCorrections","enonce","correction","carreaux","g","p","codesseg","objetsEnonce","objetsCorrection","texte","i","cpt","nom","creerNomDePolygone","anglepersp","choice","context","aretesParalleles","facesParalleles","aretesPerp","facesPerp","k","l","s","randint","point","polygone","similitude","x","Math","round","y","translation2Points","segment","epaisseur","color","pointilles","opacite","min","max","grille","seyes","push","labelPoint","params","xmin","ymin","xmax","ymax","pixelsParCm","scale","mathalea2d","codeSegments","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/11962.f52da841c6cebae11411.js","sourcesContent":["import Solide6e from './_Solide_6e.js'\nexport const titre = 'Connaître les propriétés du cube et du pavé droit'\n\n/**\n * @author Jean-Claude Lhote\n * vocabulaire arête, face, perpendicularité dans l'espace, parallélisme dans l'espace\n * référence : 6G42\n */\nexport default function UtiliserVocabulairePave () {\n  Solide6e.call(this)\n  this.titre = titre\n  this.type = 'propriétés'\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, creerNomDePolygone } from '../../modules/outils.js'\nimport { point, labelPoint, segment, polygone, translation2Points, similitude, codeSegments, grille, seyes, mathalea2d } from '../../modules/2d.js'\n/**\n * fonction servant à plusieurs exercice autour du cube et du pavé droit\n * références : 6G42 et 6G43\n * @author Jean-Claude Lhote\n */\nexport default function Solide6e () {\n  'use strict'\n  Exercice.call(this)\n  this.nbQuestions = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.sup2 = 1\n  this.titre = ''\n  this.nouvelleVersion = function () {\n    let typesDeQuestionsDisponibles\n    if (this.sup === 3) typesDeQuestionsDisponibles = [1, 2]\n    else typesDeQuestionsDisponibles = [parseInt(this.sup)]\n\n    if (this.type === 'vocabulaire') {\n      for (let n = 0; n < typesDeQuestionsDisponibles.length; n++) { typesDeQuestionsDisponibles[n] += 2 }\n    }\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    )\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let Xmin, Xmax, Ymin, Ymax, ppc, sc\n\n    if (parseInt(this.sup2) === 1) sc = 0.5\n    else sc = 0.8\n\n    let A; let B; let C; let D; let E; let F; let G; let H\n    let AB; let BC; let CD; let DA; let EF; let FG; let GH; let HE; let AE; let BF; let CG; let DH\n    let coeffpersp\n    let codesseg = []\n    let enonce\n    let correction\n    let carreaux; let g\n    let objetsEnonce = []\n    let objetsCorrection = []\n    let p\n    for (\n      let i = 0, texte, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      const nom = creerNomDePolygone(8, 'PQ')\n      const anglepersp = choice([30, 45, -30, -45, 150, 135, -150, -135])\n      if (anglepersp % 10 === 0) coeffpersp = 0.6\n      else coeffpersp = 0.4\n      objetsCorrection = []\n      objetsEnonce = []\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // cube\n          enonce = `${nom} est un cube.<br>`\n          if (context.isHtml) enonce += ' Reproduire la figure ci-dessous sur le cahier.<br>'\n          enonce += ' Repasse tous les segments de même longueur dans une même couleur.<br>'\n          correction = `Le cube ${nom}.<br>`\n          break\n\n        case 2:\n          enonce = `${nom} est un pavé droit.<br>`\n          if (context.isHtml) enonce += ' Reproduire la figure ci-dessous sur le cahier.<br>'\n          enonce += ' Repasse tous les segments de même longueur dans une même couleur.<br>'\n          correction = `Le pavé droit ${nom}.<br>`\n          break\n\n        case 3:\n          enonce = `${nom} est un cube.<br>`\n          break\n\n        case 4:\n          enonce = `${nom} est un pavé droit.<br>`\n          break\n      }\n      const aretesParalleles = [[[0, 1], [3, 2], [4, 5], [7, 6]], [[0, 3], [1, 2], [4, 7], [5, 6]], [[0, 4], [1, 5], [2, 6], [3, 7]]]\n      const facesParalleles = [[[0, 1, 2, 3], [4, 5, 6, 7]], [[0, 4, 7, 3], [1, 5, 6, 2]], [[0, 1, 5, 4], [3, 2, 6, 7]]]\n      const aretesPerp = [[[0, 1], [0, 4], [0, 3], [1, 5], [1, 2]], [[0, 4], [0, 1], [0, 3], [4, 5], [4, 7]], [[0, 3], [0, 1], [0, 4], [3, 2], [3, 7]], [[1, 2], [1, 0], [1, 5], [2, 3], [2, 6]], [[1, 5], [1, 0], [1, 2],\n        [5, 4], [5, 6]], [[5, 4], [5, 1], [5, 6], [4, 0], [4, 7]], [[5, 6], [5, 1], [5, 4], [6, 2], [6, 7]],\n      [[6, 2], [6, 5], [6, 7], [2, 1], [2, 3]], [[2, 3], [2, 1], [2, 6], [3, 0], [3, 7]], [[3, 7], [3, 2], [3, 0], [7, 4], [7, 6]], [[7, 4], [4, 0], [4, 5], [7, 3], [7, 6]], [[7, 6], [6, 2], [6, 5], [7, 3], [7, 4]]]\n      const facesPerp = [[[0, 1, 2, 3], [1, 5, 6, 2], [2, 6, 7, 3], [3, 7, 4, 0], [0, 1, 5, 4]], [[1, 5, 6, 2], [0, 1, 2, 3], [2, 6, 7, 3], [5, 6, 7, 4], [1, 5, 4, 0]], [[0, 1, 5, 4], [1, 5, 6, 2], [4, 5, 6, 7], [0, 4, 7, 3], [0, 1, 2, 3]],\n        [[4, 5, 6, 7], [0, 1, 5, 4], [1, 5, 6, 2], [2, 6, 7, 3], [0, 4, 7, 3]], [[0, 4, 7, 3], [0, 1, 2, 3], [0, 1, 5, 4], [4, 5, 6, 7], [3, 2, 6, 7]], [[3, 2, 6, 7], [0, 1, 2, 3], [1, 5, 6, 2], [4, 5, 6, 7], [0, 4, 7, 3]]]\n      let k, l, s\n\n      switch (randint(1, 4)) {\n        case 1: // citer les arêtes parallèles à une arrête donnée\n          [k, l, s] = [randint(0, 2), randint(0, 3), randint(0, 1)]\n          enonce += `Citer toutes les arêtes parallèles à [$${nom[aretesParalleles[k][l][s]] + nom[aretesParalleles[k][l][(s + 1) % 2]]}$].<br>`\n          correction = `Les arêtes parallèles à [$${nom[aretesParalleles[k][l][s]] + nom[aretesParalleles[k][l][(s + 1) % 2]]}$] sont [$${nom[aretesParalleles[k][(l + 1) % 4][s]] + nom[aretesParalleles[k][(l + 1) % 4][(s + 1) % 2]]}$], [$${nom[aretesParalleles[k][(l + 2) % 4][s]] + nom[aretesParalleles[k][(l + 2) % 4][(s + 1) % 2]]}$] et [$${nom[aretesParalleles[k][(l + 3) % 4][s]] + nom[aretesParalleles[k][(l + 3) % 4][(s + 1) % 2]]}$].<br>`\n          break\n\n        case 2: // citer la face parallèle à une face donnée\n          [k, l, s] = [randint(0, 2), randint(0, 1), randint(0, 3)]\n          enonce += `Quelle est la face parallèle à $${nom[facesParalleles[k][l][s]] + nom[facesParalleles[k][l][(s + 1) % 4]] + nom[facesParalleles[k][l][(s + 2) % 4]] + nom[facesParalleles[k][l][(s + 3) % 4]]}$ ?<br>`\n          correction = `La face parallèle à $${nom[facesParalleles[k][l][s]] + nom[facesParalleles[k][l][(s + 1) % 4]] + nom[facesParalleles[k][l][(s + 2) % 4]] + nom[facesParalleles[k][l][(s + 3) % 4]]}$ est la face $${nom[facesParalleles[k][(l + 1) % 2][s]] + nom[facesParalleles[k][(l + 1) % 2][(s + 1) % 4]] + nom[facesParalleles[k][(l + 1) % 2][(s + 2) % 4]] + nom[facesParalleles[k][(l + 1) % 2][(s + 3) % 4]]}$.<br>`\n          break\n\n        case 3: // citer les arêtes perpendiculaires à une arête donnée\n          [k, l, s] = [randint(0, 11), 0, randint(0, 1)]\n          enonce += `Quelles sont les arêtes peprendiculaires à l'arête [$${nom[aretesPerp[k][l][s]] + nom[aretesPerp[k][l][(s + 1) % 2]]}$] ?<br>`\n          correction = `Les arêtes perpendiculaires à l'arête [$${nom[aretesPerp[k][l][s]] + nom[aretesPerp[k][l][(s + 1) % 2]]}$] sont [$${nom[aretesPerp[k][1][s]] + nom[aretesPerp[k][1][(s + 1) % 2]]}$], [$${nom[aretesPerp[k][2][s]] + nom[aretesPerp[k][2][(s + 1) % 2]]}$], [$${nom[aretesPerp[k][3][s]] + nom[aretesPerp[k][3][(s + 1) % 2]]}$] et [$${nom[aretesPerp[k][4][s]] + nom[aretesPerp[k][4][(s + 1) % 2]]}$].`\n          break\n\n        case 4: // citer les faces perpendiculaires à une face donnée\n          [k, l, s] = [randint(0, 5), 0, randint(0, 3)]\n          enonce += `Quelles sont les faces perpendiculaires à la face $${nom[facesPerp[k][l][s]] + nom[facesPerp[k][l][(s + 1) % 4]] + nom[facesPerp[k][l][(s + 2) % 4]] + nom[facesPerp[k][l][(s + 3) % 4]]}$ ?<br>`\n          correction = `Les faces perpendiculaires à la face $${nom[facesPerp[k][l][s]] + nom[facesPerp[k][l][(s + 1) % 4]] + nom[facesPerp[k][l][(s + 2) % 4]] + nom[facesPerp[k][l][(s + 3) % 4]]}$ `\n          correction += `sont les faces $${nom[facesPerp[k][l + 1][s]] + nom[facesPerp[k][l + 1][(s + 1) % 4]] + nom[facesPerp[k][l + 1][(s + 2) % 4]] + nom[facesPerp[k][l + 1][(s + 3) % 4]]}$, `\n          correction += `$${nom[facesPerp[k][l + 2][s]] + nom[facesPerp[k][l + 2][(s + 1) % 4]] + nom[facesPerp[k][l + 2][(s + 2) % 4]] + nom[facesPerp[k][l + 2][(s + 3) % 4]]}$, `\n          correction += `$${nom[facesPerp[k][l + 3][s]] + nom[facesPerp[k][l + 3][(s + 1) % 4]] + nom[facesPerp[k][l + 3][(s + 2) % 4]] + nom[facesPerp[k][l + 3][(s + 3) % 4]]}$ et `\n          correction += `$${nom[facesPerp[k][l + 4][s]] + nom[facesPerp[k][l + 4][(s + 1) % 4]] + nom[facesPerp[k][l + 4][(s + 2) % 4]] + nom[facesPerp[k][l + 4][(s + 3) % 4]]}$.`\n          break\n      }\n\n      switch (listeTypeDeQuestions[i] % 2) {\n        case 1:\n          A = point(6, 0, nom[0], 'left')\n          B = point(11, 0, nom[1], 'right')\n          C = point(11, 5, nom[2], 'right')\n          D = point(6, 5, nom[3], 'left')\n          p = polygone(A, B, C, D)\n          E = similitude(B, A, anglepersp, coeffpersp, nom[4], 'left')\n          E.x = Math.round(E.x)\n          E.y = Math.round(E.y)\n          break\n\n        case 0:\n          A = point(5, 0, nom[0], 'left')\n          B = point(9 + randint(1, 3), 0, nom[1], 'right')\n          C = point(B.x, randint(3, 7), nom[2], 'right')\n          D = point(A.x, C.y, nom[3], 'left')\n          p = polygone(A, B, C, D)\n          E = similitude(B, A, anglepersp, coeffpersp * randint(5, 12) / 10, nom[4], 'left')\n          E.x = Math.round(E.x)\n          E.y = Math.round(E.y)\n          break\n      }\n\n      p = polygone(A, B, C, D)\n      F = translation2Points(E, A, B, nom[5], 'right')\n      G = translation2Points(F, B, C, nom[6], 'right')\n      H = translation2Points(G, C, D, nom[7], 'left')\n      AB = segment(A, B)\n      BC = segment(B, C)\n      CD = segment(C, D)\n      DA = segment(D, A)\n      EF = segment(E, F)\n      FG = segment(F, G)\n      GH = segment(G, H)\n      HE = segment(H, E)\n      AE = segment(A, E)\n      BF = segment(B, F)\n      CG = segment(C, G)\n      DH = segment(D, H)\n      AB.epaisseur = 2\n      BC.epaisseur = 2\n      CD.epaisseur = 2\n      DA.epaisseur = 2\n      EF.epaisseur = 2\n      FG.epaisseur = 2\n      GH.epaisseur = 2\n      HE.epaisseur = 2\n      AE.epaisseur = 2\n      BF.epaisseur = 2\n      CG.epaisseur = 2\n      DH.epaisseur = 2\n      AB.color = 'black'\n      BC.color = 'black'\n      CD.color = 'black'\n      DA.color = 'black'\n      EF.color = 'black'\n      FG.color = 'black'\n      GH.color = 'black'\n      HE.color = 'black'\n      AE.color = 'black'\n      BF.color = 'black'\n      CG.color = 'black'\n      if (G.y < C.y && G.x < C.x) {\n        CG.pointilles = true\n        CG.color = 'gray'\n        CG.opacite = 0.7\n        GH.pointilles = true\n        GH.color = 'gray'\n        GH.opacite = 0.7\n        FG.pointilles = true\n        FG.color = 'gray'\n        FG.opacite = 0.7\n      } else if (E.y > A.y && E.x > A.x) {\n        AE.pointilles = true\n        EF.pointilles = true\n        HE.pointilles = true\n        AE.color = 'gray'\n        EF.color = 'gray'\n        HE.color = 'gray'\n        AE.opacite = 0.7\n        EF.opacite = 0.7\n        HE.opacite = 0.7\n      } else if (F.x < B.x && F.y > B.y) {\n        BF.pointilles = true\n        FG.pointilles = true\n        EF.pointilles = true\n        BF.color = 'gray'\n        FG.color = 'gray'\n        EF.color = 'gray'\n        BF.opacite = 0.7\n        FG.opacite = 0.7\n        EF.opacite = 0.7\n      } else if (H.x > D.x && H.y < D.y) {\n        DH.pointilles = true\n        GH.pointilles = true\n        HE.pointilles = true\n        DH.color = 'gray'\n        GH.color = 'gray'\n        HE.color = 'gray'\n        DH.opacite = 0.7\n        GH.opacite = 0.7\n        HE.opacite = 0.7\n      }\n      Xmin = Math.min(A.x, E.x) - 1\n      Ymin = Math.min(A.y, E.y) - 1\n      Xmax = Math.max(B.x, F.x) + 2\n      Ymax = Math.max(D.y, H.y) + 1\n      ppc = 20\n\n      if (this.sup2 < 3) g = grille(Xmin, Ymin, Xmax, Ymax, 'gray', 0.7)\n      else g = ''\n      if (parseInt(this.sup2) === 2) {\n        carreaux = seyes(Xmin, Ymin, Xmax, Ymax)\n        sc = 0.8\n      } else {\n        carreaux = ''\n        sc = 0.5\n      }\n      objetsEnonce.push(AB, BC, CD, DA, EF, FG, GH, HE, AE, BF, CG, DH, labelPoint(A, B, C, D, E, F, G, H), p,\n        g,\n        carreaux\n      )\n\n      const params = {\n        xmin: Xmin,\n        ymin: Ymin,\n        xmax: Xmax,\n        ymax: Ymax,\n        pixelsParCm: ppc,\n        scale: sc\n      }\n\n      enonce += mathalea2d(params, objetsEnonce)\n      if (listeTypeDeQuestions[i] === 1) {\n        codesseg = [codeSegments('||', 'green', [A, B, C, D, A, E, F, G, H, E]), codeSegments('||', 'green', B, F, C, G, D, H)]\n        AB.color = 'green'\n        BC.color = 'green'\n        CD.color = 'green'\n        DA.color = 'green'\n        EF.color = 'green'\n        FG.color = 'green'\n        GH.color = 'green'\n        HE.color = 'green'\n        AE.color = 'green'\n        BF.color = 'green'\n        CG.color = 'green'\n        DH.color = 'green'\n      } else {\n        codesseg = [codeSegments('||', 'green', A, B, C, D, E, F, G, H), codeSegments('O', 'red', A, E, B, F, C, G, D, H), codeSegments('×', 'blue', D, A, B, C, F, G, H, E)]\n        AB.color = 'green'\n        BC.color = 'blue'\n        CD.color = 'green'\n        DA.color = 'blue'\n        EF.color = 'green'\n        FG.color = 'blue'\n        GH.color = 'green'\n        HE.color = 'blue'\n        AE.color = 'red'\n        BF.color = 'red'\n        CG.color = 'red'\n        DH.color = 'red'\n      }\n\n      objetsCorrection.push(AB, BC, CD, DA, EF, FG, GH, HE, AE, BF, CG, DH, labelPoint(A, B, C, D, E, F, G, H),\n        g,\n        carreaux\n      )\n\n      if (listeTypeDeQuestions[i] < 3) correction += mathalea2d(params, objetsCorrection, codesseg)\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(enonce + '<br>')\n        this.listeCorrections.push(correction + '<br>')\n        i++\n      }\n      cpt++\n    }\n\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de solides', 3, '1 : Cubes\\n 2 : Pavés droits\\n 3 : Mélange']\n  this.besoinFormulaire2Numerique = [\n    'Type de cahier',\n    3,\n    '1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}