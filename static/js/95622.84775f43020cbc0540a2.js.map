{"version":3,"file":"js/95622.84775f43020cbc0540a2.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6P13.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, lampeMessage, prenomF, prenomM, calcul, texPrix, texteEnCouleurEtGras, numAlpha, nombreDeChiffresDansLaPartieDecimale, sp } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Augmenter ou diminuer d’un pourcentage'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n\n/**\n * Description didactique de l'exercice\n * augmenter ou diminuer un prix d'un pourcentage,\n * le calcul intermédiaire du montant de l'augmentation ou de la baisse est demandé\n * Trois niveaux :\n * - 1 valeurs entières et 10%, 20%...;\n * - 2 valeurs entières et 13%, 28%...;\n * - 3 valeurs décimale comme 13,5%...;\n * @author Laurence CANDILLE\n * Référence 6P13\n * Date de Publication : 23/07/2021\n * Relecture : Novembre 2021 par EE\n*/\nexport default function AugmenterEtReduireDunPourcentage () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 2\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.interactifType = 'mathLive'\n  this.listePackages = 'bclogo'\n\n  this.nouvelleVersion = function () {\n    const n = parseInt(this.sup) - 1\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    this.introduction = (this.interactif && context.isHtml)\n      ? lampeMessage({\n        titre: 'Calculatrice autorisée.',\n        texte: 'Ecrire les réponses dans les cases sans arrondir, ne pas préciser \"€\" ni \"euros\" ...',\n        couleur: 'nombres'\n      })\n      : ''\n    const typeQuestionsDisponibles = ['augmentation', 'réduction'] // On créé 2 types de questions\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n\n    let billet, loyer // prix du billet, loyer de l'appart\n    let pr, pa // pourcentage réduction, pourcentage augmentation\n    let mr, ma // montant réduction, montant augmentation\n    let final1, final2 // prix final 1 , prix final 2\n    let prenom1, prenom2 // choix aleatoire des prenoms\n    function nombreDecimales (n) {\n      if (n === 0) {\n        pr = randint(1, 6) * 10\n        pa = randint(1, 3) * 10\n      }\n      if (n === 1) {\n        pr = randint(21, 39, [30])\n        pa = randint(2, 9)\n      }\n      if (n === 2) {\n        pr = calcul((randint(40, 60) * 100 + randint(1, 9) * 10) / 100)\n        pa = calcul((randint(1, 9) * 10 + randint(1, 9)) / 10)\n      }\n    }\n\n    for (let i = 0, repa, repb, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      prenom1 = prenomM()\n      prenom2 = prenomF()\n      billet = randint(100, 200)\n      loyer = randint(501, 899, [600, 700, 800])\n\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'réduction':\n          nombreDecimales(n)\n          mr = calcul(pr * billet / 100)\n          final1 = calcul(billet - mr)\n          texte = `Un billet d'avion coûte ${billet} €. ${prenom1} bénéficie d'une réduction de $${pr} \\\\%$.<br>`\n          texte += (this.interactif && context.isHtml) ? `${numAlpha(0)} Le montant de la réduction est :` : `${numAlpha(0)} Calculer le montant de la réduction.`\n          texte += (this.interactif && context.isHtml) ? ajouteChampTexteMathLive(this, 2 * i, 'largeur15 inline', { texteApres: ' €' }) : ''\n          texte += '<br>'\n          if (!context.isAmc) setReponse(this, 2 * i, mr, { formatInteractif: 'calcul' })\n          texte += (this.interactif && context.isHtml) ? `${numAlpha(1)} Finalement, ${prenom1} paiera son billet :` : `${numAlpha(1)} Calculer le prix du billet de ${prenom1}.`\n          texte += (this.interactif && context.isHtml) ? ajouteChampTexteMathLive(this, 2 * i + 1, 'largeur15 inline', { texteApres: ' €' }) : ''\n          texteCorr = `${numAlpha(0)} Le montant de la réduction est :     $${billet} € \\\\times ${pr} \\\\div 100$` + sp(1)\n          texteCorr += nombreDeChiffresDansLaPartieDecimale(mr) < 3 ? '$ =$' : '$ \\\\approx$'\n          texteCorr += texteEnCouleurEtGras(` $${texPrix(mr)}$ €.<br>`)\n          texteCorr += `${numAlpha(1)} Finalement, ${prenom1} paiera son billet : $${billet} € - ${texPrix(mr)} € =$` + sp(1)\n          texteCorr += texteEnCouleurEtGras(`$${texPrix(final1)}$ €.`)\n          if (!context.isAmc) setReponse(this, 2 * i + 1, final1)\n          repa = mr\n          repb = final1\n          break\n        case 'augmentation':\n          nombreDecimales(n)\n          calcul(ma = pa * loyer / 100)\n          calcul(final2 = loyer + ma)\n\n          texte = `Le loyer de l'appartement de ${prenom2} coûte ${loyer} €. Au 1er janvier, il augmente de $${pa} \\\\%$.<br>`\n          texte += (this.interactif && context.isHtml) ? `${numAlpha(0)} Le montant de l'augmentation est :` : `${numAlpha(0)} Calculer le montant de l'augmentation.`\n          texte += (this.interactif && context.isHtml) ? ajouteChampTexteMathLive(this, 2 * i, 'largeur15 inline', { texteApres: ' €' }) : ''\n          texte += '<br>'\n          texte += (this.interactif && context.isHtml) ? `${numAlpha(1)} Finalement, ${prenom2} paiera son loyer :` : `${numAlpha(1)} Calculer le montant du loyer de ${prenom2}.`\n          texte += (this.interactif && context.isHtml) ? ajouteChampTexteMathLive(this, 2 * i + 1, 'largeur15 inline', { texteApres: ' €' }) : ''\n          if (!context.isAmc) setReponse(this, 2 * i, ma)\n          if (!context.isAmc) setReponse(this, 2 * i + 1, final2)\n          texteCorr = `${numAlpha(0)} Le montant de l'augmentation est :     $${loyer} € \\\\times ${pa} \\\\div 100$` + sp(1)\n          texteCorr += nombreDeChiffresDansLaPartieDecimale(ma) < 3 ? '$ =$' : '$ \\\\approx$'\n          texteCorr += texteEnCouleurEtGras(` $${texPrix(ma)}$ €.<br>`)\n          texteCorr += `${numAlpha(1)} Finalement, ${prenom2} paiera son loyer : $${loyer} € + ${texPrix(ma)} € =$` + sp(1)\n          texteCorr += texteEnCouleurEtGras(`$${texPrix(final2)}$ €.`)\n          repa = ma\n          repb = final2\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        if (context.isAmc) {\n          this.autoCorrection[i] = {\n            enonce: texte,\n            propositions: [\n              {\n                type: 'AMCNum',\n                propositions: [\n                  {\n                    texte: texteCorr,\n                    reponse: {\n                      texte: 'a)',\n                      valeur: [repa],\n                      param: {\n                        digits: 5,\n                        decimals: 2,\n                        signe: false,\n                        approx: 0,\n                        exposantNbChiffres: 0\n                      }\n                    }\n                  }\n                ]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [\n                  {\n                    texte: '',\n                    reponse: {\n                      texte: 'b)',\n                      valeur: [repb],\n                      param: {\n                        digits: 5,\n                        decimals: 2,\n                        signe: false,\n                        approx: 0,\n                        exposantNbChiffres: 0\n                      }\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        }\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Valeurs entières et 10%, 20%...\\n2 : Valeurs entières et 4%, 23%...\\n3 : Une décimale comme 34,5%']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","AugmenterEtReduireDunPourcentage","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","listePackages","nouvelleVersion","n","parseInt","listeQuestions","listeCorrections","autoCorrection","introduction","interactif","context","lampeMessage","texte","couleur","listeTypeQuestions","combinaisonListes","billet","loyer","pr","pa","mr","ma","final1","final2","prenom1","prenom2","nombreDecimales","randint","calcul","repa","repb","texteCorr","i","cpt","prenomM","prenomF","numAlpha","ajouteChampTexteMathLive","texteApres","setReponse","formatInteractif","sp","nombreDeChiffresDansLaPartieDecimale","texteEnCouleurEtGras","texPrix","indexOf","enonce","propositions","type","reponse","valeur","param","digits","decimals","signe","approx","exposantNbChiffres","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}