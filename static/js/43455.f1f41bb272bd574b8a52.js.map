{"version":3,"sources":["webpack://mathalea/./src/js/exercices/CM/CM003.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","amcReady","amcType","interactifReady","interactifType","TablesMultiplicationsDivisions","tablesParDefaut","Exercice","this","sup","sup2","consigne","spacing","tailleDiaporama","nouvelleVersion","listeQuestions","listeCorrections","tables","split","couples","creerCouples","nbQuestions","listeTypeDeQuestions","combinaisonListes","operation","typesDeQuestions","a","b","texte","texteCorr","i","parseInt","setReponse","interactif","ajouteChampTexte","length","randint","choice","context","replace","push","listeQuestionsToContenu","besoinFormulaireTexte","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/43455.f1f41bb272bd574b8a52.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, creerCouples, choice, combinaisonListes, randint } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Tables de multiplications et de divisions'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Tables de multiplications et de divisions classiques, à trou ou un mélange des deux.\n *\n * Par défaut ce sont les tables de 2 à 9 mais on peut choisir les tables que l'on veut\n * @author Rémi Angot\n * Référence CM003\n */\nexport default function TablesMultiplicationsDivisions (\n  tablesParDefaut = '2-3-4-5-6-7-8-9'\n) {\n  // Multiplier ou diviser deux nombres\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = tablesParDefaut\n  this.sup2 = 1 // classique|a_trous|melange\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.tailleDiaporama = 100\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (!this.sup) {\n      // Si aucune table n'est saisie\n      this.sup = '2-3-4-5-6-7-8-9'\n    }\n    let tables = []\n    if (typeof this.sup === 'number') {\n      // Si c'est un nombre c'est qu'il y a qu'une seule table\n      tables[0] = this.sup\n    } else {\n      tables = this.sup.split('-') // Sinon on crée un tableau à partir des valeurs séparées par des ;\n    }\n    const couples = creerCouples(\n      tables,\n      [2, 3, 4, 5, 6, 7, 8, 9, 10],\n      this.nbQuestions\n    ) // Liste tous les couples possibles (2,3)≠(3,2)\n    const listeTypeDeQuestions = combinaisonListes(\n      ['classique', 'a_trous'],\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const operation = combinaisonListes(['x', 'div'], this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let typesDeQuestions\n    for (let i = 0, a, b, texte, texteCorr; i < this.nbQuestions; i++) {\n      a = couples[i][0]\n      b = couples[i][1]\n      if (parseInt(this.sup2) === 1) {\n        typesDeQuestions = 'classique'\n      } else if (parseInt(this.sup2) === 2) {\n        typesDeQuestions = 'a_trous'\n      } else {\n        typesDeQuestions = listeTypeDeQuestions[i]\n      }\n\n      if (operation[i] === 'x') {\n        if (typesDeQuestions === 'classique') {\n          // classique\n          texte = '$ ' + a + ' \\\\times ' + b + ' = \\\\dotfill $'\n          setReponse(this, i, a * b)\n          if (this.interactif) texte = `$${a} \\\\times ${b} = $` + ajouteChampTexte(this, i)\n          texteCorr = '$ ' + a + ' \\\\times ' + b + ' = ' + a * b + ' $'\n        } else {\n          if (tables.length > 2) {\n            // Si pour le premier facteur il y a plus de 2 posibilités on peut le chercher\n            if (randint(1, 2) === 1) {\n              texte = '$ ' + a + ' \\\\times \\\\ldots\\\\ldots = ' + a * b + ' $'\n              if (this.interactif) texte = `$ ${a} \\\\times $` + ajouteChampTexte(this, i) + `$ = ${a * b} $`\n            } else {\n              texte = '$ \\\\ldots\\\\ldots' + ' \\\\times ' + b + ' = ' + a * b + ' $'\n              if (this.interactif) texte = ajouteChampTexte(this, i) + `$ \\\\times ${b}  = ${a * b} $`\n            }\n            setReponse(this, i, a)\n          } else {\n            // Sinon on demande forcément le 2e facteur\n            texte = '$ ' + a + ' \\\\times \\\\ldots\\\\ldots = ' + a * b + ' $'\n            if (this.interactif) texte = ajouteChampTexte(this, i) + `$ \\\\times ${b}  = ${a * b} $`\n            setReponse(this, i, b)\n          }\n          texteCorr = '$ ' + a + ' \\\\times ' + b + ' = ' + a * b + ' $'\n        }\n      } else {\n        if (typesDeQuestions === 'classique') {\n          // classique\n          texte = '$ ' + a * b + ' \\\\div ' + b + ' = \\\\dotfill $'\n          setReponse(this, i, a)\n          if (this.interactif) texte = `$${a * b} \\\\div ${b} = $` + ajouteChampTexte(this, i)\n        } else {\n          // a trous\n          if (choice([true, false])) {\n            texte = `$ ${a * b} \\\\div \\\\ldots\\\\ldots = ${a}$`\n            setReponse(this, i, b)\n            if (this.interactif) texte = `$${a * b} \\\\div $` + ajouteChampTexte(this, i) + `$ = ${a}$`\n          } else {\n            texte = `$ \\\\ldots\\\\ldots \\\\div ${b}  = ${a}$`\n            setReponse(this, i, a * b)\n            if (this.interactif) texte = ajouteChampTexte(this, i) + `$\\\\div ${b} = ${a}$`\n          }\n        }\n        texteCorr = `$ ${a * b} \\\\div ${b} = ${a}$`\n      }\n      if (context.isDiaporama) {\n        texte = texte.replace('= \\\\dotfill', '')\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = [\n    'Choix des tables',\n    'Nombres séparés par des tirets'\n  ] // Texte, tooltip\n  this.besoinFormulaire2Numerique = [\n    'Style de questions',\n    3,\n    '1 : Classique\\n2: À trous\\n3: Mélangé'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}