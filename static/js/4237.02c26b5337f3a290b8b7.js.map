{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4S11.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Calculer_des_frequences","Exercice","this","consigne","nbQuestions","spacing","spacingCorr","nbCols","nbColsCorr","sup","listePackages","nouvelleVersion","listeQuestions","listeCorrections","temperatures","nombre_temperatures","nombreNotes","notes","nombreDes","nombreFaces","nombreTirages","index_valeur","frequence","tirages","texte","texteCorr","i","cpt","underbrace_mediane","nb_val","sortie","des_tab_eff_cumul","effCumulBool","length","j","Math","round","cumul","k","randint","choice","tirerLesDes","lampeMessage","texteGras","nb_cot","solid_name","couleur","scoresMedians","effCumulCroiss","push","texNombre","listeDeNotes","prenom","mediane","notes_rangees","sort","a","b","mois","annee","temperatures_de_base","joursParMois","unMoisDeTemperature","nomDuMois","temperatures_rangees","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice"],"mappings":"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","file":"js/4237.02c26b5337f3a290b8b7.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,prenom,tirerLesDes,listeDeNotes,joursParMois,unMoisDeTemperature,nomDuMois,texNombre} from '../../modules/outils.js';\nimport {texteGras,lampeMessage} from '../../modules/outils.js';\n\nexport const titre = 'Déterminer des médianes'\n\n/**\n * Calculs de médianes dans des séries statistiques\n* @author Sébastien Lozano forked de Jean-Claude Lhote\n* Référence 4S11\n* Date initiale 2021-01-12\n* Mise à jour le ...\n*/\nexport default function Calculer_des_frequences() {\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\tthis.consigne = \"\";\n\tthis.nbQuestions = 1;\n\tthis.spacing = 1;\n\tthis.spacingCorr = 1.5;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.sup = 1;\n\tthis.listePackages = `bclogo`;\n\n\tthis.nouvelleVersion = function () {\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\n\t\tfor (let i = 0, temperatures, nombre_temperatures, nombreNotes, notes, nombreDes, nombreFaces, nombreTirages, index_valeur, frequence, tirages, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\t\t\t\n\t\t\tvar underbrace_mediane = (nb_val) => {\n\t\t\t\tlet sortie;\n\t\t\t\tif (nb_val%2 == 0) {// nb pair de valeurs\n\t\t\t\t\tsortie = `$\\\\underbrace{1^e\\\\hspace{0.25cm}2^e ... ${nb_val/2-1}^e}_{${nb_val/2-1}\\\\; valeurs} \\\\hspace{0.25cm} ${nb_val/2}^e \\\\hspace{0.25cm} ${nb_val/2+1}^e \\\\hspace{0.25cm} \\\\underbrace{${nb_val/2+2}^e ... ${nb_val}^e}_{${nb_val/2-1}\\\\; valeurs}$`;\n\t\t\t\t} else {// nb impair de valeurs\n\t\t\t\t\tsortie = `$\\\\underbrace{1^e\\\\hspace{0.25cm}2^e ... ${(nb_val-1)/2}^e}_{${(nb_val-1)/2}\\\\; valeurs} \\\\hspace{0.25cm} ${(nb_val-1)/2+1}^e \\\\hspace{0.25cm} \\\\underbrace{${(nb_val-1)/2+2}^e ... ${nb_val}^e}_{${(nb_val-1)/2}\\\\; valeurs}$`;\n\t\t\t\t}\n\t\t\t\treturn sortie\n\t\t\t};\n\t\t\tvar des_tab_eff_cumul = (tirages,effCumulBool) => {\n\t\t\t\tlet sortie;\t\t\t\t\n\t\t\t\tif (!effCumulBool) {\n\t\t\t\t\tsortie = ``;\t\t\t\t\n\t\t\t\t\tif (tirages.length > 12) {\n\t\t\t\t\t\tsortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs 1/2\n\t\t\t\t\t\tfor (let j = 0; j <= Math.round(tirages.length / 2); j++)\n\t\t\t\t\t\t\tsortie += '|c';\n\t\t\t\t\t\tsortie += '}\\\\hline  \\\\text{Scores}';\n\t\t\t\t\t\tfor (let j = 0; j < Math.round(tirages.length / 2); j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][0];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\t\t\t\t\t\tfor (let j = 0; j < Math.round(tirages.length / 2); j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][1];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>';\n\t\n\t\t\t\t\t\tsortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs 2/2\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j <= tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '|c';\n\t\t\t\t\t\tsortie += '}\\\\hline  \\\\text{Scores}';\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][0];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][1];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline\\\\end{array}$';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs en un seul morceau\n\t\t\t\t\t\tfor (let j = 0; j <= tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '|c';\n\t\t\t\t\t\tsortie += '}\\\\hline  \\\\text{Scores}';\n\t\t\t\t\t\tfor (let j = 0; j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][0];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\t\t\t\t\t\tfor (let j = 0; j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][1];\t\t\t\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline\\\\end{array}$';\n\t\t\t\t\t};\t\n\t\t\t\t} else {\n\t\t\t\t\tsortie = ``;\t\t\t\t\n\t\t\t\t\tif (tirages.length > 12) {\n\t\t\t\t\t\tsortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs 1/2\n\t\t\t\t\t\tfor (let j = 0; j <= Math.round(tirages.length / 2); j++)\n\t\t\t\t\t\t\tsortie += '|c';\n\t\t\t\t\t\tsortie += '}\\\\hline  \\\\text{Scores}';\n\t\t\t\t\t\tfor (let j = 0; j < Math.round(tirages.length / 2); j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][0];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\t\t\t\t\t\tfor (let j = 0; j < Math.round(tirages.length / 2); j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][1];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions cumulées}';\t\t\t\t\t\t\n\t\t\t\t\t\tfor (let j = 0; j < Math.round(tirages.length / 2); j++) {\n\t\t\t\t\t\t\tlet cumul = 0 ;\n\t\t\t\t\t\t\tfor (let k = 0; k<=j ; k++) {\n\t\t\t\t\t\t\t\tcumul += tirages[k][1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsortie += '&' + cumul;//tirages[j][1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>';\n\t\n\t\t\t\t\t\tsortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs 2/2\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j <= tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '|c';\n\t\t\t\t\t\tsortie += '}\\\\hline  \\\\text{Scores}';\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][0];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][1];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions cumulées}';\t\t\t\t\t\t\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j < tirages.length; j++) {\n\t\t\t\t\t\t\tlet cumul = 0 ;\n\t\t\t\t\t\t\tfor (let k = 0; k<=j ; k++) {\n\t\t\t\t\t\t\t\tcumul += tirages[k][1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsortie += '&' + cumul;//tirages[j][1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline\\\\end{array}$';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs en un seul morceau\n\t\t\t\t\t\tfor (let j = 0; j <= tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '|c';\n\t\t\t\t\t\tsortie += '}\\\\hline  \\\\text{Scores}';\n\t\t\t\t\t\tfor (let j = 0; j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][0];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\t\t\t\t\t\tfor (let j = 0; j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][1];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions cumulées}';\t\t\t\t\t\t\n\t\t\t\t\t\tfor (let j = 0; j < tirages.length; j++) {\n\t\t\t\t\t\t\tlet cumul = 0 ;\n\t\t\t\t\t\t\tfor (let k = 0; k<=j ; k++) {\n\t\t\t\t\t\t\t\tcumul += tirages[k][1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsortie += '&' + cumul;//tirages[j][1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline\\\\end{array}$';\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\treturn sortie;\n\t\t\t};\n\t\t\tif (this.sup == 1) { // ici on lance des dés\n\t\t\t\tvar solid_name = (nb_cot) => {\n\t\t\t\t\tswitch (nb_cot) {\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\treturn `tétraèdre`;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\treturn `hexaèdre`;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\treturn `octaèdre`;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 10:\n\t\t\t\t\t\t\treturn `decaèdre`;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn `cas non prévu`\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t};\n\t\t\t\t};\t\t\t\t\n\t\t\t\tnombreDes = randint(1, 2);\n\t\t\t\tnombreFaces = choice([4, 6, 8, 10]);\n\t\t\t\tnombreTirages = choice([50, 99, 100, 199, 200, 299, 500, 999, 1000, 1999, 2000]);\n\t\t\t\ttirages = tirerLesDes(nombreTirages, nombreFaces, nombreDes); // on récupère une série rangée dans l'ordre croissant avec les effectifs correspondants\n\t\t\t\tdo\n\t\t\t\t\tindex_valeur = randint(0, tirages.length - 1);\n\t\t\t\twhile (tirages[index_valeur][1] == 0); // on choisi au hasard l'index d'une valeur dont l'effectif est différent de 0.\n\t\t\t\tif (nombreDes > 1) {\n\t\t\t\t\ttexte = `On a réalisé $${nombreTirages}$ lancers de $${nombreDes}$ dés à $${nombreFaces}$ faces.<br>`;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttexte = `On a réalisé $${nombreTirages}$ lancers d'un dé à $${nombreFaces}$ faces.<br>`;\n\t\t\t\t}\n\t\t\t\ttexte += lampeMessage({\n\t\t\t\t\ttitre : `Vocabulaire`,\n\t\t\t\t\ttexte :  `Le solide qui correspond à ce type de dé s'appelle ${texteGras(solid_name(nombreFaces))}.`,\n\t\t\t\t\tcouleur : `nombres`\n\t\t\t\t})+'<br>';\n\t\t\t\ttexte += 'Les résultats sont inscrits dans le tableau ci-dessous :<br><br>';\n\t\t\t\ttexte += des_tab_eff_cumul(tirages,false)+ '<br>';\t\t\t\t\n\t\t\t\ttexte += `<br><br> Déterminer une médiane de cette série.`;\n\t\t\t\ttexteCorr = `On a réalisé $${nombreTirages}$ lancers en tout.<br>`;\t\t\t\t\n\t\t\t\tif (nombreTirages%2 == 0) {\n\t\t\t\t\ttexteCorr += `Le nombre de lancers est pair, les scores sont rangés dans l'ordre croissant.<br>\n\t\t\t\t\tLes deux valeurs centrales sont la $${nombreTirages/2}^{e}$ et la $${nombreTirages/2+1}^{e}$ valeur.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(nombreTirages)} <br>\n\t\t\t\t\tUne médiane est donc un score compris entre le $${nombreTirages/2}^{e}$ et le $${nombreTirages/2+1}^{e}$ score.<br>\n\t\t\t\t\tOn peut ajouter une ligne avec les effectifs cumulés pour trouver ces deux valeurs.<br><br>\n\t\t\t\t\t${des_tab_eff_cumul(tirages,true)}<br><br>\n\t\t\t\t\t`;\n\t\t\t\t\t// on récupère le score des deux lancers médians\n\t\t\t\t\tlet scoresMedians = []\n\t\t\t\t\t// compteur\n\t\t\t\t\tlet cpt = 0;\n\t\t\t\t\t// Pour cumuler les effectifs, tirages est un tableau 2D qui contient les couples [score,effectif]\n\t\t\t\t\tlet effCumulCroiss = tirages[0][1];\n\t\t\t\t\t// On récupère le premier score médian\n\t\t\t\t\twhile (effCumulCroiss <= nombreTirages/2) {\n\t\t\t\t\t\tcpt+=1;\n\t\t\t\t\t\teffCumulCroiss += tirages[cpt][1];\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\tscoresMedians.push(tirages[cpt][0]);\n\t\t\t\t\t\n\t\t\t\t\t// On récupère le second score médian\n\t\t\t\t\tcpt = 0;\n\t\t\t\t\teffCumulCroiss = tirages[0][1];\n\t\t\t\t\twhile (effCumulCroiss <= nombreTirages/2+1) {\n\t\t\t\t\t\tcpt+=1;\n\t\t\t\t\t\teffCumulCroiss += tirages[cpt][1];\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\tscoresMedians.push(tirages[cpt][0]);\n\t\t\t\t\ttexteCorr += `D'où ${texteGras(`le score médian : ${texNombre((scoresMedians[0]+scoresMedians[1])/2)}`)}<br>`;\t\t\t\t\t\n\t\t\t\t\ttexteCorr += lampeMessage({\n\t\t\t\t\t\ttitre: `Interprétation`,\n\t\t\t\t\t\ttexte: `Ìl y a bien $${(nombreTirages)/2}$ lancers dont le score est inférieur ou égal à  $${texNombre(scoresMedians[0])}$ et $${(nombreTirages)/2}$ lancers dont le score est supérieur ou égal à  $${texNombre(scoresMedians[0])}$.`,\n\t\t\t\t\t\tcouleur: `nombres`,\n\t\t\t\t\t  });\t\t\t\t\t\t\t\t\t\n\t\t\t\t} else { // Le nombre de lancers est impair ici\n\t\t\t\t\ttexteCorr += `Le nombre de lancers est impair, les scores sont rangés dans l'odre croissant.<br>\n\t\t\t\t\tLa valeur centrale est la $${(nombreTirages-1)/2+1}^{e}$ valeur.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(nombreTirages)} <br>\n\t\t\t\t\tUne médiane est donc le $${(nombreTirages-1)/2+1}^{e}$ score.<br>\n\t\t\t\t\tOn peut ajouter une ligne avec les effectifs cumulés pour trouver cette valeur.<br><br>\n\t\t\t\t\t${des_tab_eff_cumul(tirages,true)}<br><br>`;\n\t\t\t\t\t// on récupère le score des deux lancers médians\n\t\t\t\t\tlet scoresMedians = []\n\t\t\t\t\t// compteur\n\t\t\t\t\tlet cpt = 0;\n\t\t\t\t\t// Pour cumuler les effectifs, tirages est un tableau 2D qui contient les couples [score,effectif]\n\t\t\t\t\tlet effCumulCroiss = tirages[0][1];\n\t\t\t\t\t// On récupère le premier score médian\n\t\t\t\t\twhile (effCumulCroiss <= nombreTirages/2) {\n\t\t\t\t\t\tcpt+=1;\n\t\t\t\t\t\teffCumulCroiss += tirages[cpt][1];\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\tscoresMedians.push(tirages[cpt][0]);\n\t\t\t\t\ttexteCorr += `D'où ${texteGras(`le score médian : ${texNombre(scoresMedians[0])}`)}<br>`;\n\t\t\t\t\ttexteCorr += lampeMessage({\n\t\t\t\t\t\ttitre: `Interprétation`,\n\t\t\t\t\t\ttexte: `Ìl y a bien $${(nombreTirages-1)/2}$ lancers dont le score est inférieur ou égal à  $${texNombre(scoresMedians[0])}$ et $${(nombreTirages-1)/2}$ lancers dont le score est supérieur ou égal à  $${texNombre(scoresMedians[0])}$.`,\n\t\t\t\t\t\tcouleur: `nombres`,\n\t\t\t\t\t  });\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.sup == 2) { // ici on trie des notes\n\t\t\t\tnombreNotes = choice([7, 8, 9, 10, 11, 12]);\n\t\t\t\tnotes = listeDeNotes(nombreNotes, randint(0, 7), randint(13, 20)); // on récupère une liste de notes (série brute)\n\t\t\t\tindex_valeur = randint(0, notes.length - 1); // on choisi une des notes au hasard\n\t\t\t\tfrequence = 0;\n\t\t\t\tfor (let j = 0; j < notes.length; j++) { // frequence va contenir l'effectif de la note choisie\n\t\t\t\t\tif (notes[j] == notes[index_valeur])\n\t\t\t\t\t\tfrequence++;\n\t\t\t\t}\n\t\t\t\ttexte = `${prenom()} a obtenu ces notes ce trimestre-ci en mathématiques :<br>`;\n\t\t\t\ttexte += `$${notes[0]}$`;\n\t\t\t\tfor (let j = 1; j < nombreNotes - 1; j++)\n\t\t\t\t\ttexte += `; $${notes[j]}$ `; // On liste les notes (série brute)\n\t\t\t\ttexte += `et $${notes[nombreNotes - 1]}$.`;\n\n\t\t\t\ttexte += `<br><br>Déterminer une médiane de cette série.`;\n\t\t\t\tlet notes_rangees = notes.sort((a, b) => a - b);\n\t\t\t\tlet mediane;\n\t\t\t\tif (notes.length%2==0) {// attention les indices commencent à 0 !\n\t\t\t\t\tmediane = (notes_rangees[notes.length/2-1]+notes_rangees[notes.length/2])/2;\n\t\t\t\t\t//console.log('parité');\n\t\t\t\t} else {\n\t\t\t\t\tmediane = notes_rangees[(notes.length-1)/2];\n\t\t\t\t\t//console.log('imparité');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttexteCorr = `Il y a $${notes.length}$ notes en tout. `;\t\t\t\t\n\t\t\t\tif (notes.length%2==0) {\n\t\t\t\t\ttexteCorr += `Le nombre de notes est pair.<br>`;\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\ttexteCorr += `Le nombre de notes est impair.<br>`;\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\ttexteCorr += `Il faut par exemple ranger les notes dans l'ordre croissant : <br> $${notes[0]}$`;\n\t\t\t\tfor (let j = 1; j < nombreNotes - 1; j++)\n\t\t\t\t\ttexteCorr += `; $${notes[j]}$ `; // On liste les notes (série brute)\n\t\t\t\ttexteCorr += `et $${notes[nombreNotes - 1]}$.<br>`;\n\n\t\t\t\tif (notes.length%2==0) {\n\t\t\t\t\ttexteCorr += `Les notes centrales sont la $${notes.length/2}^{e}$ et la $${notes.length/2+1}^{e}$.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(notes.length)}<br>\n\t\t\t\t\tUne médiane est donc une note comprise entre la $${notes.length/2}^{e}$ et la $${notes.length/2+1}^{e}$ note, lorsque ces notes sont rangées.<br>`;\n\t\t\t\t} else {\n\t\t\t\t\ttexteCorr += `La note centrale est donc la $${(notes.length+1)/2}^{e}$.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(notes.length)}<br>\t\t\t\t\t\n\t\t\t\t\tUne médiane est donc la $${(notes.length+1)/2}^{e}$ note, lorsque ces notes sont rangées.<br>`;\t\t\t\n\t\t\t\t};\n\t\t\t\ttexteCorr += `D'où ${texteGras(`la note médiane : ${texNombre(mediane)}`)}<br>`;\n\t\t\t\tif (notes.length%2==0) {\n\t\t\t\t\ttexteCorr += lampeMessage({\n\t\t\t\t\t\ttitre: `Interprétation`,\n\t\t\t\t\t\ttexte: `Ìl y a bien $${notes.length/2}$ notes inférieures ou égales à  $${texNombre(mediane)}$ et $${notes.length/2}$ notes supérieures ou égales à  $${texNombre(mediane)}$.`,\n\t\t\t\t\t\tcouleur: `nombres`,\n\t\t\t\t\t  });\t\t\t\t\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\ttexteCorr += lampeMessage({\n\t\t\t\t\t\ttitre: `Interprétation`,\n\t\t\t\t\t\ttexte: `Ìl y a bien $${(notes.length-1)/2}$ notes inférieures ou égales à  $${texNombre(mediane)}$ et $${(notes.length-1)/2}$ notes supérieures ou égales à  $${texNombre(mediane)}$.`,\n\t\t\t\t\t\tcouleur: `nombres`,\n\t\t\t\t\t  });\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { // ici on relève des températures\n\t\t\t\tlet mois = randint(1, 12);\n\t\t\t\tlet annee = randint(1980, 2019);\n\t\t\t\tlet temperatures_de_base = [3, 5, 9, 13, 19, 24, 26, 25, 23, 18, 10, 5];\n\t\t\t\tnombre_temperatures = joursParMois(mois);\n\t\t\t\ttemperatures = unMoisDeTemperature(temperatures_de_base[mois - 1], mois, annee); // on récupère une série de température correspondant à 1 mois d'une année (série brute)\n\t\t\t\tindex_valeur = randint(0, temperatures.length - 1); // on choisi l'index d'une valeur au hasard\n\t\t\t\tfrequence = 0;\n\t\t\t\tfor (let j = 0; j < temperatures.length; j++) {\n\t\t\t\t\tif (temperatures[j] == temperatures[index_valeur])\n\t\t\t\t\t\tfrequence++; // frequence contient l'effectif de cette valeur\n\t\t\t\t}\n\t\t\t\ttexte = `En ${nomDuMois(mois)} ${annee}, à ${choice(['Moscou', 'Berlin', 'Paris', 'Bruxelles', 'Rome', 'Belgrade'])}, on a relevé les températures suivantes<br>`;\n\n\t\t\t\ttexte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // On construit le tableau des températures\n\t\t\t\ttexte += '|c';\n\t\t\t\tfor (let j = 0; j < Math.round(temperatures.length / 2); j++)\n\t\t\t\t\ttexte += '|c';\n\t\t\t\ttexte += '}\\\\hline  \\\\text{Jour}';\n\t\t\t\tfor (let j = 0; j < Math.round(temperatures.length / 2); j++)\n\t\t\t\t\ttexte += '&' + texNombre(j + 1);\n\t\t\t\ttexte += '\\\\\\\\\\\\hline \\\\text{Température\\\\thickspace en} \\\\thickspace ^\\\\circ\\\\text{C}';\n\t\t\t\tfor (let j = 0; j < Math.round(temperatures.length / 2); j++)\n\t\t\t\t\ttexte += '&' + temperatures[j];\n\t\t\t\ttexte += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>';\n\t\t\t\ttexte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // On construit le tableau des températures\n\t\t\t\ttexte += '|c';\n\t\t\t\tfor (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++)\n\t\t\t\t\ttexte += '|c';\n\t\t\t\ttexte += '}\\\\hline  \\\\text{Jour}';\n\t\t\t\tfor (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++)\n\t\t\t\t\ttexte += '&' + texNombre(j + 1);\n\t\t\t\ttexte += '\\\\\\\\\\\\hline \\\\text{Température\\\\thickspace en} \\\\thickspace ^\\\\circ\\\\text{C}';\n\t\t\t\tfor (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++)\n\t\t\t\t\ttexte += '&' + temperatures[j];\n\t\t\t\ttexte += '\\\\\\\\\\\\hline\\\\end{array}$';\n\n\n\t\t\t\ttexte += `<br><br>Déterminer une médiane de cette série.`;\n\t\t\t\t//texte += temperatures;\n\t\t\t\t//texte += temperatures.length;\n\t\t\t\ttexteCorr = ``;\n\t\t\t\tlet temperatures_rangees = temperatures.sort((a, b) => a - b);\n\t\t\t\tlet mediane;\n\t\t\t\tif (temperatures.length%2==0) {// attention les indices commencent à 0 !\n\t\t\t\t\tmediane = (temperatures_rangees[temperatures.length/2-1]+temperatures_rangees[temperatures.length/2])/2;\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tmediane = temperatures_rangees[(temperatures.length-1)/2];\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\ttexteCorr = `Il y a $${temperatures.length}$ températures relevées en tout. `;\t\t\t\t\n\t\t\t\tif (temperatures.length%2==0) {\n\t\t\t\t\ttexteCorr += `Le nombre de temperatures est pair.<br>`;\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\ttexteCorr += `Le nombre de temperatures est impair.<br>`;\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\ttexteCorr += `Il faut par exemple ranger les temperatures dans l'ordre croissant : <br> $${temperatures[0]}$`;\n\t\t\t\tfor (let j = 1; j < nombre_temperatures - 1; j++)\n\t\t\t\t\ttexteCorr += `; $${temperatures[j]}$ `; // On liste les temperatures (série brute)\n\t\t\t\ttexteCorr += `et $${temperatures[nombre_temperatures - 1]}$.<br>`;\n\n\t\t\t\tif (temperatures.length%2==0) {\n\t\t\t\t\ttexteCorr += `Les temperatures centrales sont la $${temperatures.length/2}^{e}$ et la $${temperatures.length/2+1}^{e}$.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(temperatures.length)}<br>\n\t\t\t\t\tUne médiane est donc une temperature comprise entre la $${temperatures.length/2}^{e}$ et la $${temperatures.length/2+1}^{e}$ temperature, lorsque ces temperatures sont rangées.<br>`;\n\t\t\t\t} else {\n\t\t\t\t\ttexteCorr += `La temperature centrale est donc la $${(temperatures.length+1)/2}^{e}$.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(temperatures.length)}<br>\t\t\t\t\t\n\t\t\t\t\tUne médiane est donc la $${(temperatures.length+1)/2}^{e}$ temperature, lorsque ces temperatures sont rangées.<br>`;\t\t\t\n\t\t\t\t};\n\t\t\t\ttexteCorr += `D'où ${texteGras(`la temperature médiane : ${texNombre(mediane)}`)}<br>`;\n\t\t\t\tif (temperatures.length%2==0) {\n\t\t\t\t\ttexteCorr += lampeMessage({\n\t\t\t\t\t\ttitre: `Interprétation`,\n\t\t\t\t\t\ttexte: `Ìl y a bien $${temperatures.length/2}$ temperatures inférieures ou égales à  $${texNombre(mediane)}$ et $${temperatures.length/2}$ temperatures supérieures ou égales à  $${texNombre(mediane)}$.`,\n\t\t\t\t\t\tcouleur: `nombres`,\n\t\t\t\t\t  });\t\t\t\t\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\ttexteCorr += lampeMessage({\n\t\t\t\t\t\ttitre: `Interprétation`,\n\t\t\t\t\t\ttexte: `Ìl y a bien $${(temperatures.length-1)/2}$ temperatures inférieures ou égales à  $${texNombre(mediane)}$ et $${(temperatures.length-1)/2}$ temperatures supérieures ou égales à  $${texNombre(mediane)}$.`,\n\t\t\t\t\t\tcouleur: `nombres`,\n\t\t\t\t\t  });\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\t\tlisteQuestionsToContenu(this);\n\t};\n\tthis.besoinFormulaireNumerique = ['Type de séries', 3, \"1 : Lancers de dés \\n 2 : Liste de notes\\n 3 : Un mois de températures\"];\n}","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}