{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C10.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/dom.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["amcReady","amcType","interactifReady","titre","AdditionsSoustractionsMultiplicationsPosees","Exercice","this","interactif","consigne","spacing","context","spacingCorr","nbQuestions","listePackages","tailleDiaporama","nouvelleVersion","typesDeQuestions","reponse","sup","parseInt","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","a","b","c","d","e","f","g","x","y","i","cpt","randint","texNombre","ajouteChampTexte","calcul","Operation","operande1","operande2","type","indexOf","push","setReponse","digits","listeQuestionsToContenu","exerciceInteractif","exercice","document","addEventListener","button","querySelector","numeroExercice","event","autoCorrection","spanReponseLigne","champTexte","getElementById","value","replaceAll","valeur","toString","innerHTML","readOnly","style","fontSize","classList","add","questionNumerique","$","checkbox","monRouge","monVert","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","propositions","length","statut","forEach","proposition","indice","label","check","backgroundColor","checked","typeFeedback","messageFeedback","id","feedback","querySelectorAll","uicheck","exerciceQcm","propositionsQcm","espace","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","texteApres","inline","numeric","decimals","signe","exposantNbChiffres","exposantSigne","approx","param","hasProp","object","prop","Object","prototype","hasOwnProperty","call","setStyles","elt","styles","split","paire","exec","key","error","console","addText","text","appendChild","window","createTextNode","get","strict","TypeError","Error","addElement","parent","tag","attrs","content","txtContent","createElement","attr","className","class","setAttribute","create","types","addFeedback","container","message","level","includes","div","cssIcon","remove","divTitre","messageUtilisateur","code","width"],"mappings":"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","file":"js/6436.e5738409ed99efccdb23.js","sourcesContent":["import Operation from '../../modules/operations'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListesSansChangerOrdre, texNombre, calcul } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif'\n\nexport const amcReady = true\nexport const amcType = 4 // type de question AMC\nexport const interactifReady = true\nexport const titre = 'Additions, soustractions et multiplications posées de nombres entiers'\n\n/**\n * Additions, soustractions et multiplications posées de nombres entiers\n *\n * * abcd +efg\n * * abc0-efg\n * * 1abc-def\n * * abc*d0e tables de 2 à 5\n * * abc*de tables de 5 à 9\n * @Auteur Rémi Angot\n * Support des opérations posées en html par Jean-Claude Lhote.\n * Référence 6C10\n */\nexport default function AdditionsSoustractionsMultiplicationsPosees () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactif = 1\n  this.consigne = 'Poser et effectuer les calculs suivants.'\n  this.spacing = 2\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1) // Important sinon les opérations posées ne sont pas jolies\n  this.nbQuestions = 5\n  this.listePackages = 'xlop'\n  this.tailleDiaporama = 100\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestions, reponse\n    const typesDequestionsDisponibles = [1, 2, 3, 4, 5]\n    let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(\n      typesDequestionsDisponibles,\n      this.nbQuestions\n    )\n    if (this.nbQuestions === 3) {\n      listeTypeDeQuestions = [1, 2, 5]\n    }\n    if (this.nbQuestions === 4) {\n      listeTypeDeQuestions = [1, 2, 4, 5]\n    }\n\n    for (let i = 0, texte, texteCorr, cpt = 0, a, b, c, d, e, f, g, x, y; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        case 1: // abcd +efg\n          a =\n            randint(1, 9) * 10000 +\n            randint(5, 9) * 1000 +\n            randint(5, 9) * 100 +\n            randint(7, 9) * 10 +\n            randint(1, 9)\n          b = randint(5, 9) * 100 + randint(7, 9) * 10 + randint(1, 9)\n          texte = `$${texNombre(a)}+${b}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexte(this, i) // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte +='$'\n          reponse = calcul(a + b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break\n        case 2: // abc0-efg\n          a = randint(1, 9)\n          b = randint(1, 9)\n          c = randint(1, 9)\n          e = randint(b, 9)\n          f = randint(c, 9)\n          g = randint(2, 9)\n          x = a * 1000 + b * 100 + c * 10\n          y = e * 100 + f * 10 + g\n          texte = `$${texNombre(x)}-${y}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexte(this, i) // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte +='$'\n          reponse = calcul(x - y)\n          texteCorr = Operation({ operande1: x, operande2: y, type: 'soustraction' })\n          break\n        case 3: // 1abc-def\n          a = randint(1, 9)\n          b = randint(1, 9)\n          c = randint(1, 9)\n          d = randint(a, 9)\n          e = randint(1, 9)\n          f = randint(c, 9)\n          x = 1000 + a * 100 + b * 10 + c\n          y = d * 100 + e * 10 + f\n          texte = `$${texNombre(x)}-${y}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexte(this, i) // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte +='$'\n          reponse = calcul(x - y)\n          texteCorr = Operation({ operande1: x, operande2: y, type: 'soustraction' })\n          break\n        case 4: // abc*d0e tables de 2 à 5\n          a = randint(2, 5)\n          b = randint(2, 5)\n          c = randint(2, 5)\n          d = randint(2, 5)\n          e = randint(2, 5)\n          x = 100 * a + 10 * b + c\n          y = d * 100 + e\n          texte = `$${texNombre(x)}\\\\times${y}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexte(this, i) // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte+='$'\n          reponse = calcul(x * y)\n          texteCorr = Operation({ operande1: x, operande2: y, type: 'multiplication' })\n          break\n        case 5: // abc*de tables de 5 à 9\n          a = randint(5, 9)\n          b = randint(5, 9)\n          c = randint(5, 9)\n          d = randint(5, 9)\n          e = randint(5, 9)\n          x = 100 * a + 10 * b + c\n          y = 10 * d + e\n          texte = `$${x}\\\\times${y}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexte(this, i) // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte +='$'\n          reponse = calcul(x * y)\n          texteCorr = Operation({ operande1: x, operande2: y, type: 'multiplication' })\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        if (!context.isHtml && i === 0) {\n          texteCorr = '\\\\setlength\\\\itemsep{2em}' + texteCorr\n        } // espacement entre les questions\n        this.listeCorrections.push(texteCorr)\n        setReponse(this, i, reponse, { digits: 0 }) // fonction qui va renseigner this.autocorrection[i]\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4 || exercice.amcType === 5) questionNumerique(exercice)\n  if (exercice.amcType === 1 || exercice.amcType === 2) exerciceQcm(exercice)\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {exercice}\n * @param {i} i indice de la question\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          const champTexte = document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`)\n          if (champTexte.value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '').replaceAll('.',',')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          champTexte.readOnly = true\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml && exercice.interactif) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposantNbChiffres = 0, exposantSigne = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n\n\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.param = { digits: digits, decimals: decimals, signe: signe, exposantNbChiffres: exposantNbChiffres, exposantSigne: exposantSigne, approx: approx }\n}\n","/**\n * Fonctions de gestion du dom\n * @module\n */\n/**\n * Retourne true si l'objet à la propriété\n * @param {Object} object\n * @param {string} prop\n * @return {boolean}\n */\nconst hasProp = (object, prop) => typeof object === 'object' && Object.prototype.hasOwnProperty.call(object, prop)\n\n/**\n * Affecte des styles à un élément html (on peut pas affecter elt.style directement car read only, faut faire du elt.style.foo = bar)\n * sans planter en cas de pb (on le signale juste en console)\n * @param {HTMLElement} elt\n * @param {string|object} styles\n */\nfunction setStyles (elt, styles) {\n  try {\n    if (elt && elt.style) {\n      if (typeof styles === 'string') {\n        styles = styles.split(';')\n        styles.forEach(function (paire) {\n          paire = /([\\w]+):(.+)/.exec(paire)\n          if (paire) {\n            const [, key, value] = paire\n            elt.style[key] = value\n          }\n        })\n      } else if (typeof styles === 'object') {\n        for (var prop in styles) {\n          if (hasProp(styles, prop)) {\n            elt.style[prop] = styles[prop]\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Ajoute du texte dans un élément\n * @param {HTMLElement} elt\n * @param {string} text\n */\nexport function addText (elt, text) {\n  elt.appendChild(window.document.createTextNode(text))\n}\n\n/**\n * Retourne l'élément du dom\n * @param {string} id\n * @param {boolean} [strict=true] Passer false pour retourner null plutôt que throw une erreur si id n'existe pas\n * @return {HTMLElement}\n * @throws {TypeError} Si id n'est pas une string\n * @throws {Error} Si l'élément id n'existe pas\n */\nexport function get (id, strict = true) {\n  if (typeof id !== 'string') throw TypeError('argument invalide')\n  const elt = document.getElementById(id)\n  if (!elt && strict) throw Error(`L’élément html ${id} n’existe pas`)\n  return elt\n}\n\n/**\n * Retourne un élément html de type tag (non inséré dans le dom)\n * @param {string} tag\n * @param {Object} [attrs] Les attributs\n * @param {string} [txtContent] Contenu textuel éventuel\n */\nexport function create (tag, attrs, txtContent) {\n  const elt = window.document.createElement(tag)\n  let attr\n  try {\n    if (attrs) {\n      for (attr in attrs) {\n        if (hasProp(attrs, attr)) {\n          if (attr === 'class') elt.className = attrs.class\n          else if (attr === 'className') elt.className = attrs.className\n          else if (attr === 'style') setStyles(elt, attrs.style)\n          else elt.setAttribute(attr, attrs[attr])\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (txtContent) addText(elt, txtContent)\n\n  return elt\n}\n\n/**\n * Ajoute un élément html de type tag à parent\n * @param {HTMLElement} parent\n * @param {string} tag\n * @param {Object=} attrs Les attributs\n * @param {string=} content\n * @returns {HTMLElement} L'élément ajouté\n */\nexport function addElement (parent, tag, attrs, content) {\n  const elt = create(tag, attrs, content)\n  parent.appendChild(elt)\n  return elt\n}\n","import { addElement, addText, get } from './dom'\n// Module regroupant les fonctions de gestions des erreurs.\n\nconst types = ['info', 'warning', 'error', 'positive']\n\n/**\n * Ajoute le feedback dans container\n * @param {HTMLElement} container\n * @param {Object} erreur\n * @param {string} [erreur.message]\n * @param {string} [erreur.level]\n * @param {string} [erreur.titre]\n */\nexport function addFeedback (container, { message = 'Une erreur est survenue', level = 'erreur', titre = 'Erreur interne' } = {}) {\n  if (!types.includes(level)) {\n    console.error(Error(`type de message inconnu : ${level}`))\n    level = 'error'\n  }\n  const cssDiv = level === 'info' ? '' : level\n  const div = addElement(container, 'div', { className: `ui message ${cssDiv}` })\n  const cssIcon = level === 'error'\n    ? 'frown outline'\n    : (level === 'warning')\n        ? 'bullhorn'\n        : 'bell outline' // info\n  const iconClose = addElement(div, 'i', { className: 'close icon' })\n  iconClose.addEventListener('click', () => div.remove())\n  if (titre) {\n    const divTitre = addElement(div, 'div', { className: 'header' })\n    addElement(divTitre, 'i', { className: `${cssIcon} icon` })\n    addText(divTitre, titre)\n  }\n  addText(div, message)\n}\n\n/**\n* Affiche un message à l'utilisateur\n* @author Cédric GROLLEAU\n* @param {Object} datas\n* @param {string} datas.code codeExerciceInconnu|mg32load|scratchLoad\n* @param {string} [datas.exercice] à fournir si code vaut 'codeExerciceInconnu'\n*/\nexport function messageUtilisateur ({ code, exercice }) {\n  const container = get('containerErreur')\n  switch (code) {\n    case 'codeExerciceInconnu':\n      addFeedback(container, {\n        titre: 'le code de l’exercice n’est pas valide',\n        message: `L'identifiant ${exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n        level: 'error'\n      })\n      break\n    case 'mg32load':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module mg32',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        level: 'warning'\n      })\n      break\n    case 'scratchLoad':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module scratch',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        level: 'warning'\n      })\n      break\n    default:\n      console.error(Error(`code ${code} non géré par messageUtilisateur`))\n      addFeedback(container, {\n        titre: 'Erreur interne',\n        message: `Une erreur est survenue.<br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        level: 'warning'\n      })\n  }\n}\n\n/**\n * Ajoute un feedback (erreur ou encouragement)\n * @param {Object} data\n * @param {string} data.id id du div conteneur à utiliser\n * @param {string} data.texte Le texte à afficher\n * @param {string} data.type error|positive\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  if (!id || !texte) return console.error(TypeError('arguments manquants'))\n  const container = get(id)\n  const div = addFeedback(container, { message: texte, level: type })\n  div.style.width = '400px'\n}\n"],"sourceRoot":""}