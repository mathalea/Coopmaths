"use strict";(self.webpackChunkmathalea=self.webpackChunkmathalea||[]).push([[97675,25523],{25523:(e,s,t)=>{function a(){this.titre="",this.boutonAide=!1,this.consigne="",this.consigneCorrection="",this.introduction="",this.listeQuestions=[],this.listeCorrections=[],this.contenu="",this.contenuCorrection="",this.autoCorrection=[],this.tableauSolutionsDuQcm=[],this.spacing=1,this.spacingCorr=1,this.pasDeVersionLatex=!1,this.listePackages=[],this.consigneModifiable=!0,this.nbQuestionsModifiable=!0,this.nbCols=1,this.nbColsCorr=1,this.nbColsModifiable=!0,this.nbColsCorrModifiable=!0,this.spacingModifiable=!0,this.spacingCorrModifiable=!0,this.beamer=!1,this.tailleDiaporama=1,this.nbQuestions=10,this.pointsParQuestions=1,this.correctionDetailleeDisponible=!1,this.correctionDetaillee=!0,this.correctionIsCachee=!1,this.video="",this.interactif=!1,this.interactifObligatoire=!1,this.besoinFormulaireNumerique=!1,this.besoinFormulaireTexte=!1,this.besoinFormulaireCaseACocher=!1,this.besoinFormulaire2Numerique=!1,this.besoinFormulaire2Texte=!1,this.besoinFormulaire2CaseACocher=!1,this.besoinFormulaire3Numerique=!1,this.besoinFormulaire3Texte=!1,this.besoinFormulaire3CaseACocher=!1,this.besoinFormulaire4Numerique=!1,this.besoinFormulaire4Texte=!1,this.besoinFormulaire4CaseACocher=!1,this.mg32Editable=!1,this.listeArguments=[],this.nouvelleVersion=function(e){},this.questionJamaisPosee=function(e,...s){0===e&&(this.listeArguments=[]);let t="";for(const a of s)void 0!==a&&(t+=a.toString());return!(this.listeArguments.indexOf(t)>-1)&&(this.listeArguments.push(t),!0)}}t.r(s),t.d(s,{default:()=>a})},97675:(e,s,t)=>{t.r(s),t.d(s,{titre:()=>u,dateDePublication:()=>h,aleaVariables:()=>p,default:()=>m});var a=t(25523),i=t(22380),l=t(25482),n=t(71250),o=t(77074),r=t(56018);let c,b=e=>e;const u="Angles et parallèles",h="08/01/2022";function p(e={a:!1,b:!1,c:!0,d:"fraction(a,10)+fraction(b,100)",test:"b!=0 and b>a>c"},s=!1){const t={};let a=0,i=!0;do{a++;for(const s of Object.keys(e))"boolean"==typeof e[s]?t[s]=(0,o.ku)("(pickRandom([-1,1]))^(n)*randomInt(1,10)",{n:e[s]}):"test"!==s&&(t[s]=(0,o.ku)(e[s],t));void 0!==e.test&&(i=(0,o.ku)(e.test,t))}while(!i&&a<1e3);return 1e3===a&&window.notify("Attention ! 1000 essais dépassés.\n Trop de contraintes.\n Le résultat ne vérifiera pas le test."),t}function d(e,s={O:60,A:0}){const t=(0,n.Wnp)((0,n.xkU)(e,(0,n.tno)(1,0)),e,s.A),a=(0,n.Wnp)(t,e,180),i=(0,n.Wnp)((0,n.xkU)(e,(0,n.tno)(1,0)),e,s.O),l=(0,n.Wnp)(i,e,180);return{a:(0,n.vZI)(t,i,s.O-s.A,!0,"blue"),b:(0,n.vZI)(i,a,180-(s.O-s.A),!0,"green"),c:(0,n.vZI)(a,l,s.O-s.A,!0,"red"),d:(0,n.vZI)(l,t,180-(s.O-s.A),!0,"gray"),s:t,t:a,x:i,Ox:l,As:(0,n.VTK)(e,t),Ax:(0,n.VTK)(e,i),A:e,labela:(0,n.KU6)((s.O-s.A)%180+"°",t,i,s.O-s.A,"black"),labelb:(0,n.KU6)((180-(s.O-s.A))%180+"°",i,a,180-(s.O-s.A),"black"),labelc:(0,n.KU6)((s.O-s.A)%180+"°",a,l,s.O-s.A,"black"),labeld:(0,n.KU6)((180-(s.O-s.A))%180+"°",l,t,180-(s.O-s.A),"black")}}function m(){a.default.call(this);const e=["0 : Mélange des types de questions","1 : Angle alterne-interne ou correspondant ?","2 : Déterminer si des droites sont parallèles."];this.nbQuestions=0,this.besoinFormulaireNumerique=["Type de question",this.nbQuestions,e.join("\n")],this.consigne="",this.nbCols=0,this.nbColsCorr=0,this.tailleDiaporama=1,this.video="",this.correctionDetailleeDisponible=!1,this.correctionDetaillee=!0,i.Do.isHtml?this.spacing=2.5:this.spacing=0,i.Do.isHtml?this.spacingCorr=2.5:this.spacingCorr=0,this.sup=0,this.nouvelleVersion=function(s,t=!1){this.nbQuestions=this.NbQuestions>0?this.nbQuestions:0!==this.sup?1:e.length-1,this.listeQuestions=[],this.listeCorrections=[],this.autoCorrection=[];let a=0;for(let e,i=0,o=0;i<this.nbQuestions&&o<100;){switch(a=0===this.sup?o+1:this.sup,t&&console.log(`\n          ********************************\n          Exercice ${i+1} Case ${a}\n          ********************************`),a){case 1:{const s=[],a=[],i=[],o=p({O:"randomInt(0,90)",A:"randomInt(-90,90)",B:"randomInt(-90,90)",r1:"pickRandom([1.5,2])",r2:"pickRandom([1.5,2])",test:"O-A>30 and O-B>30"});t&&console.log(o);const r=(0,n.xmu)(0,0),c=d((0,n.xcw)((0,n.Wnp)((0,n.xmu)(1,0),r,o.O),r,o.r1),{O:o.O,A:o.A}),b=d((0,n.xcw)((0,n.Wnp)((0,n.xmu)(1,0),r,o.O+180),r,o.r2),{O:o.O,A:o.B});for(const e of["a","b","c","d"])c[e].couleurDeRemplissage="red",b[e].couleurDeRemplissage="red";const u=(0,l.q$q)([(0,l.q$q)(["aa","bb","cc","dd"]),(0,l.q$q)(["ca","db"]),(0,l.q$q)(["a","b","c","d"])+(0,l.q$q)(["a","b","c","d"])]),h=u[0],m=u[1];s.push(c[h],c.As,c.Ax,b[m],b.As,b.Ax,c["label"+h],b["label"+m]);const g=(0,n.$pI)([...Object.keys(c).map((e=>c[e])),...Object.keys(b).map((e=>b[e]))]);s.forEach((e=>{i.push(e)})),a.forEach((e=>{i.push(e)}));let A,O="Les angles marqués sont-ils alternes-internes, correspondants ou ni l'un ni l'autre ?<br>";A=h===m?"correspondants":h+m==="ca"||h+m==="db"?"alternes-internes":"ni alternes-internes ni correspondants";const x=`Les angles marqués sont ${A}.`;O+=(0,n.iR9)(Object.assign({scale:.7},g),s),e={texte:O,texteCorr:x};break}case 2:{const s=[],a=[],i=p({O:"randomInt(0,90)",A:"randomInt(-90,90)",B:"A",r1:"pickRandom([1.5,2])",r2:"pickRandom([1.5,2])",test:"70>O-A>30 and 70>O-B>30 and abs(A-B)<45"}),o=p({a:"randomInt(0,3)",b:"randomInt(0,3)",test:"a!=b and (a!=2 or b!=0) and (a!=3 or b!=1)"});t&&console.log(i);const u=(0,n.xmu)(0,0),h=d((0,n.xcw)((0,n.Wnp)((0,n.xmu)(1,0),u,i.O),u,i.r1),{O:i.O,A:i.A}),m=d((0,n.xcw)((0,n.Wnp)((0,n.xmu)(1,0),u,i.O+180),u,i.r2),{O:i.O,A:i.B});for(const e of["a","b","c","d"])h[e].couleurDeRemplissage="blue",m[e].couleurDeRemplissage="blue";const g=["a","b","c","d"][parseInt(o.a)],A=["a","b","c","d"][parseInt(o.b)],O=(0,l.q$q)([(0,r.sDj)([-2,-1,1,2]),0]);let x,$;switch(h.labela=(0,n.KU6)((i.O-i.A)%180+O+"°",h.s,h.x,i.O-i.A,"black"),h.labelb=(0,n.KU6)((180-(i.O-i.A)+O)%180+"°",h.x,h.t,180-(i.O-i.A),"black"),h.labelc=(0,n.KU6)((i.O-i.A+O)%180+"°",h.t,h.Ox,i.O-i.A,"black"),h.labeld=(0,n.KU6)((180-(i.O-i.A)+O)%180+"°",h.Ox,h.s,180-(i.O-i.A),"black"),m.labela=(0,n.KU6)((i.O-i.A)%180+"°",m.s,m.x,i.O-i.A,"black"),m.labelb=(0,n.KU6)((180-(i.O-i.A))%180+"°",m.x,m.t,180-(i.O-i.A),"black"),m.labelc=(0,n.KU6)((i.O-i.A)%180+"°",m.t,m.Ox,i.O-i.A,"black"),m.labeld=(0,n.KU6)((180-(i.O-i.A))%180+"°",m.Ox,m.s,180-(i.O-i.A),"black"),s.push(h[g],h.As,h.Ax,m[A],m.As,m.Ax,h["label"+g],m["label"+A]),s.forEach((e=>{a.push(e)})),g+A){case"ab":m[g].couleurDeRemplissage="green",h[g].couleurDeRemplissage="red",a.push(m.labela,m.a),x="correspondants",$=`$180°-${m.labelb.texte} = ${m.labela.texte}$`;break;case"ac":m[g].couleurDeRemplissage="green",h[g].couleurDeRemplissage="red",a.push(m.labela,m.a),x="correspondants";break;case"ad":m[g].couleurDeRemplissage="green",h[g].couleurDeRemplissage="red",a.push(m.labela,m.a),x="correspondants",$=`$180°-${m.labeld.texte} = ${m.labela.texte}$`;break;case"ba":m[g].couleurDeRemplissage="green",h[g].couleurDeRemplissage="red",a.push(m.labelb,m.b),x="correspondants",$=`$180°-${m.labela.texte} = ${m.labelb.texte}$`;break;case"bc":m[g].couleurDeRemplissage="green",h[g].couleurDeRemplissage="red",a.push(m.labelb,m.b),x="correspondants",$=`$180°-${m.labelc.texte} = ${m.labelb.texte}$`;break;case"bd":m[g].couleurDeRemplissage="green",h[g].couleurDeRemplissage="red",a.push(m.labelb,m.b),x="correspondants";break;case"cb":m.a.couleurDeRemplissage="green",h[g].couleurDeRemplissage="red",a.push(m.labela,m.a),x="alternes-internes",$=`$180°-${m.labelb.texte} = ${m.labela.texte}$`;break;case"cd":m.a.couleurDeRemplissage="green",h[g].couleurDeRemplissage="red",a.push(m.labela,m.a),x="alternes-internes",$=`$180°-${m.labeld.texte} = ${m.labela.texte}$`;break;case"da":m.b.couleurDeRemplissage="green",h[g].couleurDeRemplissage="red",a.push(m.labelb,m.b),x="alternes-internes",$=`$180°-${m.labela.texte} = ${m.labelb.texte}$`;break;case"dc":m.b.couleurDeRemplissage="green",h[g].couleurDeRemplissage="red",a.push(m.labelb,m.b),$=`$180°-${m.labelc.texte} = ${m.labelb.texte}$`,x="alternes-internes"}const k=(0,n.$pI)([...Object.keys(h).map((e=>h[e])),...Object.keys(m).map((e=>m[e]))]);let D,f="Les droites sont-elles parallèles ?<br>";D=0!==O?"ne sont pas":"sont";const C=(0,n.iR9)(Object.assign({scale:.7},k),a)+String.raw(c||(c=b`
          <br>
          ${0}
          <br>
          Les angles rouge et vert sont ${0} et ${0} de la même mesure.
          <br>
          Donc les droites ${0} parallèles.
          `),void 0!==$?$:"Les angles bleu et vert sont opposés par le sommet. Ils sont donc de même mesure.",x,D,D);f+=(0,n.iR9)(Object.assign({scale:.7},k),s),e={texte:f,texteCorr:C};break}}this.questionJamaisPosee(i,a)&&(this.listeQuestions.push(e.texte),this.listeCorrections.push(e.texteCorr),i++),o++}(0,l.K1R)(this)}}}}]);
//# sourceMappingURL=97675.42d1e29d12e84708c510.js.map