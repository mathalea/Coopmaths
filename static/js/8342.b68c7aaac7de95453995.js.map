{"version":3,"file":"js/8342.b68c7aaac7de95453995.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5A13.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, choice, compareNombres, texNombre, combinaisonListes } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const titre = 'Décomposition en facteurs premiers'\n\n/**\n* Décomposer en produit de facteurs premiers un nombre (la décomposition aura 3, 4 ou 5 facteurs premiers)\n* @author Rémi Angot\n5A13\n*/\nexport default function ExerciceDecomposerEnFacteursPremiers () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = \"Écrire les nombres suivants sous la forme d'un produit de facteurs premiers rangés dans l'ordre croissant.\"\n  this.spacing = 2\n  this.nbQuestions = 6\n  this.sup = 2 // 4 facteurs par défaut\n  this.sup2 = false // pas de multiplication par 100\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const grandNombres = combinaisonListes([false, false, false, true], this.nbQuestions)\n    this.sup = parseInt(this.sup)\n    for (let i = 0, n, facteurs = [], nbFacteurs, texte, reponse, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      facteurs = []\n      nbFacteurs = this.sup + 2\n      for (let k = 0; k < nbFacteurs; k++) {\n        if (k < nbFacteurs - 1) {\n          if (nbFacteurs > 3 && k === 0) { facteurs.push(2) } else if (nbFacteurs > 4 && k === 1) { facteurs.push(2) } else {\n            facteurs.push(choice([2, 3, 5]))\n          }\n        } else { facteurs.push(choice([2, 5, 7, 11])) }\n      }\n\n      if (this.sup2 && grandNombres[i]) { // Une fois sur 4 on multilie le nombre par 100\n        facteurs.push(2, 2, 5, 5)\n      }\n      n = 1\n      for (let k = 0; k < facteurs.length; k++) {\n        n = n * facteurs[k]\n      }\n      texte = '$ ' + texNombre(n) + ' = \\\\dotfill $'\n      texteCorr = '$ ' + texNombre(n) + ' = '\n      reponse = ''\n      facteurs.sort(compareNombres) // classe les facteurs dans l'ordre croissant\n      for (let k = 0; k < facteurs.length - 1; k++) {\n        texteCorr += facteurs[k] + ' \\\\times  '\n        reponse += facteurs[k] + '\\\\times'\n      }\n      texteCorr += facteurs[facteurs.length - 1] + ' $'\n      reponse += facteurs[facteurs.length - 1]\n      texte += ajouteChampTexteMathLive(this, i)\n      setReponse(this, i, reponse)\n      if (this.questionJamaisPosee(i, ...facteurs)) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Nombre de facteurs ', 3, '1 : 3 facteurs\\n2 : 4 facteurs\\n3 : 5 facteurs']\n  this.besoinFormulaire2CaseACocher = ['Grands nombres (une fois sur quatre)']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["interactifReady","interactifType","titre","ExerciceDecomposerEnFacteursPremiers","Exercice","this","consigne","spacing","nbQuestions","sup","sup2","nouvelleVersion","listeQuestions","listeCorrections","grandNombres","combinaisonListes","parseInt","n","nbFacteurs","texte","reponse","texteCorr","i","facteurs","cpt","k","push","choice","length","texNombre","sort","compareNombres","ajouteChampTexteMathLive","setReponse","questionJamaisPosee","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}