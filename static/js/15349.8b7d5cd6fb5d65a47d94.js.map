{"version":3,"file":"js/15349.8b7d5cd6fb5d65a47d94.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5G13.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, arrondiVirgule, texNombre } from '../../modules/outils.js'\nimport { point, tracePoint, labelPoint, mathalea2d, symetrieAxiale, translation, vecteur, triangle2points2longueurs, droite, pointAdistance, rotation, afficheLongueurSegment, segment, afficheMesureAngle, longueur, droiteParPointEtParallele, angle, polygoneAvecNom, texteParPoint, positionLabelDroite } from '../../modules/2d.js'\nimport { getVueFromUrl } from '../../modules/gestionUrl.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Utiliser les propriétés de conservation du parallélisme, des longueurs et des angles'\n\n/**\n * Compléter le symétrique d'une figure en utilisant les propriétés de conservation de la symétrie et en justifiant ses démarches\n * @author Guillaume Valmont\n * Référence 5G13\n * Date de publication 05/08/2021\n*/\nexport default function ConservationSymetrie () {\n  Exercice.call(this)\n  this.consigne = ''\n  this.nbQuestions = 2\n\n  this.besoinFormulaireNumerique = ['Transformations', 3, '1 : Symétries axiales\\n2 : Symétries centrales\\n3 : Mélange']\n  this.besoinFormulaire2Numerique = ['Propriétés conservées', 3, '1 : Parallélisme\\n2 : Longueurs et Angles\\n3 : Mélange']\n  this.sup = 1\n  this.sup2 = 3\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function (numeroExercice) {\n    context.fenetreMathalea2d = [-6, -6, 6, 6]\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.autoCorrection = []\n    this.sup = Number(this.sup)\n    this.sup2 = Number(this.sup2)\n    let typesDeTransformationsDisponibles\n    switch (this.sup) {\n      case 1:\n        typesDeTransformationsDisponibles = ['symetrieAxiale']\n        break\n      case 2:\n        typesDeTransformationsDisponibles = ['symetrieCentrale']\n        break\n      case 3:\n        typesDeTransformationsDisponibles = ['symetrieAxiale', 'symetrieCentrale']\n        break\n    }\n    const listeTypeDeTransformations = combinaisonListes(typesDeTransformationsDisponibles, this.nbQuestions)\n    let typesDeQuestionsDisponibles\n    switch (this.sup2) {\n      case 1:\n        typesDeQuestionsDisponibles = ['parallelisme']\n        break\n      case 2:\n        typesDeQuestionsDisponibles = ['longueurEtAngle']\n        break\n      case 3:\n        typesDeQuestionsDisponibles = ['parallelisme', 'longueurEtAngle']\n        break\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    let objetsEnonceEtCorr, objetsEnonceOnly, objetsCorrectionOnly, paramsEnonce, paramsCorrection\n    for (let i = 0, texte, texteCorr, centreOuPoint, d, d1, A, B, C, imageA, imageB, imageC, figureRetournee, O, poly, imPoly, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      objetsEnonceOnly = []\n      objetsCorrectionOnly = []\n      objetsEnonceEtCorr = []\n      d1 = ''\n      A = point(0, 0, 'A', 'below')\n      B = pointAdistance(A, randint(30, 60) / 10, randint(0, 45), 'B')\n      C = triangle2points2longueurs(A, B, randint(40, 60) / 10, randint(30, 50) / 10).listePoints[2]\n      C.nom = 'C'\n      poly = polygoneAvecNom(A, B, C) // pour bien placer les labels\n      objetsEnonceEtCorr.push(segment(A, B), afficheLongueurSegment(B, A), poly[1])\n      switch (listeTypeDeQuestions[i]) {\n        case 'parallelisme':\n          objetsEnonceEtCorr.push(tracePoint(A, B, C))\n          d1 = droiteParPointEtParallele(C, droite(A, B))\n          objetsEnonceEtCorr.push(d1)\n          texte = 'La droite $(d_1)$ est parallèle au segment [$AB$] et passe par le point $C$.<br>'\n          texteCorr = texte\n          texteCorr += 'Or, la symétrie conserve le parallélisme.<br>'\n          texteCorr += 'Donc la droite $(d_1\\')$ est parallèle au segment [$A\\'B\\'$] et passe par le point $C\\'$.<br>'\n          break\n        case 'longueurEtAngle':\n          objetsEnonceEtCorr.push(segment(A, C), segment(B, C))\n          objetsEnonceEtCorr.push(afficheLongueurSegment(C, B))\n          objetsEnonceEtCorr.push(afficheMesureAngle(A, B, C, 'black', 1, arrondiVirgule(angle(A, B, C), 0) + '°'))\n          texte = `L'angle $\\\\widehat{ABC}$ mesure $${texNombre(arrondiVirgule(angle(A, B, C), 0))}$ °.<br>`\n          texteCorr = texte\n          texteCorr += 'Or, la symétrie conserve les angles.<br>'\n          texteCorr += `Donc l'angle $\\\\widehat{A'B'C'}$ mesure lui aussi $${texNombre(arrondiVirgule(angle(A, B, C), 0))}$ °.<br>`\n          texteCorr += `Le segment [BC] mesure $${texNombre(longueur(B, C, 1))}$ cm.<br>`\n          texteCorr += 'Or, la symétrie conserve les longueurs.<br>'\n          texteCorr += `Donc le segment [B'C'] mesure lui aussi $${texNombre(longueur(B, C, 1))}$ cm.<br>`\n          break\n      }\n      // On applique prépare la transformation\n      switch (listeTypeDeTransformations[i]) {\n        case 'symetrieAxiale':\n          centreOuPoint = 'à la droite $(d)$'\n          d = droite(translation(A, vecteur(-randint(30, 40) / 10, 0)), translation(C, vecteur(-randint(30, 40) / 10, 0)))\n          d.angleAvecHorizontale = d.angleAvecHorizontale + randint(-10, 10)\n          objetsEnonceEtCorr.push(d)\n          imageA = symetrieAxiale(A, d, 'A\\'')\n          imageB = symetrieAxiale(B, d, 'B\\'')\n          imageC = symetrieAxiale(C, d, 'C\\'')\n          if (d1 !== '') {\n            objetsCorrectionOnly.push(droite(symetrieAxiale(point(d1.x1, d1.y1), d), symetrieAxiale(point(d1.x2, d1.y2), d), '$(d_1\\')$'))\n          }\n          figureRetournee = false\n          break\n        case 'symetrieCentrale':\n          centreOuPoint = 'au point $O$'\n          O = point(randint(30, 40) / 10, randint(40, 60) / 10, 'O')\n          objetsEnonceEtCorr.push(tracePoint(O), labelPoint(O))\n          imageA = rotation(A, O, 180, 'A\\'')\n          imageB = rotation(B, O, 180, 'B\\'')\n          imageC = rotation(C, O, 180, 'C\\'')\n          objetsCorrectionOnly.push(droite(rotation(point(d1.x1, d1.y1), O, 180), rotation(point(d1.x2, d1.y2), O, 180)))\n          figureRetournee = true\n          break\n      }\n      texte += `Compléter le symétrique de la figure par rapport ${centreOuPoint} en utilisant les propriétés de${getVueFromUrl() === 'multi' ? '<br>' : ' '}conservation de la symétrie et en justifiant ses démarches.<br>`\n      // On applique la transformation\n      imPoly = polygoneAvecNom(imageA, imageB, imageC)\n      objetsCorrectionOnly.push(imPoly[1])\n      objetsEnonceEtCorr.push(segment(imageA, imageB))\n      objetsEnonceOnly.push(tracePoint(imageA, imageB), labelPoint(imageA, imageB))\n      if (figureRetournee) {\n        objetsEnonceOnly.push(afficheLongueurSegment(imageA, imageB))\n        objetsCorrectionOnly.push(afficheLongueurSegment(imageB, imageA))\n      } else {\n        objetsEnonceOnly.push(afficheLongueurSegment(imageB, imageA))\n        objetsCorrectionOnly.push(afficheLongueurSegment(imageA, imageB))\n      }\n      if (listeTypeDeQuestions[i] === 'longueurEtAngle') {\n        objetsCorrectionOnly.push(segment(imageA, imageC), segment(imageB, imageC))\n        objetsCorrectionOnly.push(afficheMesureAngle(imageA, imageB, imageC, 'black', 1, arrondiVirgule(angle(A, B, C), 0) + '°'))\n        if (figureRetournee) {\n          objetsCorrectionOnly.push(afficheLongueurSegment(imageC, imageB))\n        } else {\n          objetsCorrectionOnly.push(afficheLongueurSegment(imageB, imageC))\n        }\n      } else if (listeTypeDeQuestions[i] === 'parallelisme') {\n        objetsEnonceEtCorr.push(tracePoint(imageC))\n        objetsCorrectionOnly.push(tracePoint(imageA, imageB))\n      }\n      const xmin = Math.min(A.x, B.x, C.x, imageA.x, imageB.x, imageC.x) - 2\n      const xmax = Math.max(A.x, B.x, C.x, imageA.x, imageB.x, imageC.x) + 2\n      const ymin = Math.min(A.y, B.y, C.y, imageA.y, imageB.y, imageC.y) - 2\n      const ymax = Math.max(A.y, B.y, C.y, imageA.y, imageB.y, imageC.y) + 2\n      // paramètres de la fenêtre Mathalea2d pour l'énoncé normal\n      paramsEnonce = { xmin: xmin, ymin: ymin, xmax: xmax, ymax: ymax, pixelsParCm: 20, scale: 1 }\n      // paramètres de la fenêtre Mathalea2d pour la correction\n      paramsCorrection = paramsEnonce\n      // On ajoute les noms des droites si besoin\n      if (listeTypeDeTransformations[i] === 'symetrieAxiale') objetsEnonceEtCorr.push(texteParPoint('$(d)$', positionLabelDroite(d, paramsEnonce), 'milieu', 'black', 1, 'middle', true))\n      if (listeTypeDeQuestions[i] === 'parallelisme') objetsEnonceEtCorr.push(texteParPoint('$(d_1)$', positionLabelDroite(d1, paramsEnonce), 'milieu', 'black', 1, 'middle', true))\n      // On ajoute au texte de l'énoncé, la figure à main levée et la figure de l'enoncé.\n      texte += mathalea2d(paramsEnonce, objetsEnonceOnly, objetsEnonceEtCorr)\n      // On ajoute au texte de la correction, la figure de la correction\n      texteCorr += mathalea2d(paramsCorrection, objetsCorrectionOnly, objetsEnonceEtCorr)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ConservationSymetrie","Exercice","this","consigne","nbQuestions","besoinFormulaireNumerique","besoinFormulaire2Numerique","sup","sup2","nbCols","nbColsCorr","nouvelleVersion","numeroExercice","typesDeTransformationsDisponibles","context","listeQuestions","listeCorrections","autoCorrection","Number","listeTypeDeTransformations","combinaisonListes","typesDeQuestionsDisponibles","listeTypeDeQuestions","objetsEnonceEtCorr","objetsEnonceOnly","objetsCorrectionOnly","paramsEnonce","paramsCorrection","texte","texteCorr","centreOuPoint","d","d1","A","B","C","imageA","imageB","imageC","figureRetournee","O","poly","imPoly","i","cpt","point","pointAdistance","randint","triangle2points2longueurs","listePoints","nom","polygoneAvecNom","push","segment","afficheLongueurSegment","tracePoint","droiteParPointEtParallele","droite","afficheMesureAngle","arrondiVirgule","angle","texNombre","longueur","translation","vecteur","angleAvecHorizontale","symetrieAxiale","x1","y1","x2","y2","labelPoint","rotation","getVueFromUrl","xmin","Math","min","x","xmax","max","ymin","y","ymax","pixelsParCm","scale","texteParPoint","positionLabelDroite","mathalea2d","indexOf","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}