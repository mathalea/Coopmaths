{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta5N14-3.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","Eq_resolvantes_Thales","debug","sup","context","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","equalOrNot","f","fEqOrNot","num","den","k","egalite","justification","fracEqualOrNot","bool","n","d","f1","f2","fraction","calcul","frac","showFracNumDenDec","texNombre2","justifyEq","strOut","texteEnCouleur","Number","isInteger","texFraction","randint","choice","numLowInt","denLowInt","fLowInt","fEqOrNotLowInt","numBigInt","denBigInt","fBigInt","fEqOrNotBigInt","numDec","denDec","fDec","fEqOrNotDec","masterChoice","situations","push","enonces","length","enonce","question","correction","indexOf","listeQuestionsToContenu"],"mappings":"0GAMe,SAASA,IAEtBC,KAAKC,MAAQ,GACbD,KAAKE,SAAW,GAChBF,KAAKG,mBAAqB,GAC1BH,KAAKI,eAAiB,GACtBJ,KAAKK,iBAAmB,GACxBL,KAAKM,aAAe,GACpBN,KAAKO,QAAU,GACfP,KAAKQ,kBAAoB,GACzBR,KAAKS,YAAc,GACnBT,KAAKU,OAAS,EACdV,KAAKW,WAAa,EAClBX,KAAKY,QAAU,EACfZ,KAAKa,YAAc,EACnBb,KAAKc,QAAS,EAEdd,KAAKe,2BAA4B,EACjCf,KAAKgB,uBAAwB,EAC7BhB,KAAKiB,6BAA8B,EACnCjB,KAAKkB,oBAAqB,EAC1BlB,KAAKmB,uBAAwB,EAC7BnB,KAAKoB,kBAAmB,EACxBpB,KAAKqB,sBAAuB,EAC5BrB,KAAKsB,mBAAoB,EACzBtB,KAAKuB,uBAAwB,EAC7BvB,KAAKwB,+BAAgC,EACrCxB,KAAKyB,qBAAsB,EAC3BzB,KAAK0B,MAAQ,GACb1B,KAAK2B,YAAa,EAClB3B,KAAK4B,gBAAkB,GAMvB5B,KAAK6B,mBAAoB,EACzB7B,KAAK8B,YAAa,EAClB9B,KAAK+B,uBAAwB,EAC7B/B,KAAKgC,KAAM,EACXhC,KAAKiC,eAAgB,EACrBjC,KAAKkC,SAAU,EACflC,KAAKmC,eAAiB,GACtBnC,KAAKoC,sBAAwB,GAC7BpC,KAAKqC,cAAe,EACpBrC,KAAKsC,gBAAkB,SAAUC,KACjCvC,KAAKwC,cAAgB,G,sJC/ChB,MAAMvC,EAAQ,oDASN,SAASwC,IAEvB1C,eAAcC,MACdA,KAAKC,MAAQA,EACbD,KAAK0C,OAAQ,EACT1C,KAAK0C,MACR1C,KAAKS,YAAc,EAIpBT,KAAK2C,IAAM,EACT3C,KAAKE,SAAY,wDAEnBF,KAAKU,OAAS,EACdV,KAAKW,WAAa,EAClBiC,YAAiB5C,KAAKY,QAAU,EAAIZ,KAAKY,QAAU,EACnDgC,YAAiB5C,KAAKa,YAAc,IAAMb,KAAKa,YAAc,IAE7Db,KAAK4B,gBAAkB,IACvB5B,KAAK0B,MAAQ,GAEb1B,KAAKsC,gBAAkB,WACtB,IAAIO,EAA8B,GAEjCA,GADG7C,KAAK0C,MACsB,CAAC,EAAG,EAAG,EAAG,IAKzC1C,KAAKI,eAAiB,GACtBJ,KAAKK,iBAAmB,GAIxB,MAAMyC,GAAuBC,SAAkCF,EAA6B7C,KAAKS,aAEjG,IAAK,IAAWuC,EAAOC,EAAdC,EAAI,EAAqBC,EAAM,EAAGD,EAAIlD,KAAKS,aAAe0C,EAAM,IAAK,CAG7E,IAAIC,EAEAC,EAAEC,EAEFC,EAAIC,EAAIC,EAERC,EAAQC,EAMZ,SAASC,EAAeC,EAAKC,EAAEC,GAE9B,IAAIC,EAAGC,EAOP,OANAD,GAAKE,QAASJ,EAAEC,GAEfE,EADGJ,GACEK,SAASC,SAAOL,EAAEL,IAAGU,SAAOJ,EAAEN,KAE9BS,SAASC,SAAOL,EAAEL,IAAGU,SAAOJ,EAAEN,IAE7B,CAACW,KAAKJ,EAAGJ,eAAeK,GAOhC,SAASI,EAAkBd,EAAIC,GAC9B,IAAIH,GAAIa,QAASX,EAAIC,GACrB,MAAQ,YAAUc,SAAWjB,EAAEE,UAASe,SAAWjB,EAAEG,QAStD,SAASe,EAAUV,EAAKR,EAAEC,GACzB,IAAIkB,EAoBJ,OAnBIX,GACHW,EAAS,sDACPF,SAAWjB,EAAEE,iBAAgBe,SAAWhB,EAASE,SAAQiB,SAAe,WAAUH,SAAWjB,EAAEG,iBAAgBc,SAAWhB,EAASC,iCAEjImB,OAAOC,UAAUtB,EAAEE,KACtBiB,GAAW,kBAAiBnB,EAAEuB,oBAAoBtB,EAASsB,iCAE3DJ,GAAW,kBAAiBH,EAAkBhB,EAAEE,IAAIF,EAAEG,aAAaa,EAAkBf,EAASC,IAAID,EAASE,4BAG5GgB,EAAS,6DACPF,SAAWjB,EAAEE,iBAAgBe,SAAWhB,EAASE,SAAQiB,SAAe,eAAcH,SAAWjB,EAAEG,iBAAgBc,SAAWhB,EAASC,2CAErImB,OAAOC,UAAUtB,EAAEE,KACtBiB,GAAW,kBAAiBnB,EAAEuB,oBAAoBtB,EAASsB,wCAE3DJ,GAAW,kBAAiBH,EAAkBhB,EAAEE,IAAIF,EAAEG,aAAaa,EAAkBf,EAASC,IAAID,EAASE,kCAGtGgB,EAOR,OAHAf,GAAIoB,SAAQ,EAAE,GAEd7E,KAAK2C,IAAM+B,OAAO1E,KAAK2C,KACf3C,KAAK2C,KACZ,KAAK,EACJS,GAAa0B,SAAO,EAAC,GAAK,IAC1BvB,GAAMsB,SAAQ,EAAE,GAChBrB,GAAMqB,SAAQ,EAAE,EAAEtB,GAClBG,EAAW,gBACRE,EAAeR,EAAWG,EAAIC,GAAKY,KAAKQ,eAAehB,EAAeR,EAAWG,EAAIC,GAAKI,eAAegB,eAC5GjB,EAAgBY,EAAUnB,EAAWQ,EAAeR,EAAWG,EAAIC,GAAKY,KAAKR,EAAeR,EAAWG,EAAIC,GAAKI,gBAChH,MACD,KAAK,EACJR,GAAa0B,SAAO,EAAC,GAAK,IAC1BvB,GAAMsB,SAAQ,GAAG,IACjBrB,GAAMqB,SAAQ,GAAG,GAAGtB,GACpBG,EAAW,gBACRE,EAAeR,EAAWG,EAAIC,GAAKY,KAAKQ,eAAehB,EAAeR,EAAWG,EAAIC,GAAKI,eAAegB,eAC5GjB,EAAgBY,EAAUnB,EAAWQ,EAAeR,EAAWG,EAAIC,GAAKY,KAAKR,EAAeR,EAAWG,EAAIC,GAAKI,gBAChH,MACD,KAAK,EACJR,GAAa0B,SAAO,EAAC,GAAK,IAC1BvB,GAAMY,SAAsB,IAAfU,SAAQ,GAAG,KACxBrB,GAAMW,SAA0B,IAAnBU,SAAQ,GAAG,GAAGtB,IAC3BF,EAAIO,EAAeR,EAAWG,EAAIC,GAAKY,KACvCd,EAAWM,EAAeR,EAAWG,EAAIC,GAAKI,eAC9CF,EAAW,gBACRW,EAAkBhB,EAAEE,IAAIF,EAAEG,QAAQa,EAAkBf,EAASC,IAAID,EAASE,QAC7EG,EAAgBY,EAAUnB,EAAWQ,EAAeR,EAAWG,EAAIC,GAAKY,KAAKR,EAAeR,EAAWG,EAAIC,GAAKI,gBAChH,MACD,KAAK,EACJR,GAAa0B,SAAO,EAAC,GAAK,IAC1B,IAAIC,GAAYF,SAAQ,EAAE,GACtBG,GAAYH,SAAQ,EAAE,EAAEE,GACxBE,EAAUrB,EAAeR,EAAW2B,EAAUC,GAAWZ,KACzDc,EAAiBtB,EAAeR,EAAW2B,EAAUC,GAAWpB,eAChEuB,GAAYN,SAAQ,GAAG,IACvBO,GAAYP,SAAQ,GAAG,GAAGM,GAC1BE,EAAUzB,EAAeR,EAAW+B,EAAUC,GAAWhB,KACzDkB,EAAiB1B,EAAeR,EAAW+B,EAAUC,GAAWxB,eAChE2B,GAASpB,SAAsB,IAAfU,SAAQ,GAAG,KAC3BW,GAASrB,SAA6B,IAAtBU,SAAQ,GAAG,GAAGU,IAC9BE,EAAO7B,EAAeR,EAAWmC,EAAOC,GAAQpB,KAChDsB,EAAc9B,EAAeR,EAAWmC,EAAOC,GAAQ5B,eACvD+B,GAAeb,SAAO,CACzB,CAAE1B,WAAYA,EAAYG,IAAIwB,EAAWvB,IAAIwB,EAAYvB,EAAEA,EAAGJ,EAAE4B,EAAS3B,SAAS4B,GAClF,CAAE9B,WAAYA,EAAYG,IAAI4B,EAAW3B,IAAI4B,EAAY3B,EAAEA,EAAGJ,EAAEgC,EAAS/B,SAASgC,GAClF,CAAElC,WAAYA,EAAYG,IAAIgC,EAAQ/B,IAAIgC,EAAS/B,EAAEA,EAAGJ,EAAEoC,EAAMnC,SAASoC,KAE1EhC,EAAW,GACPgB,OAAOC,UAAUgB,EAAapC,KACjCG,GAAY,IAAGiC,EAAatC,EAAEuB,eAAee,EAAarC,SAASsB,eAEnElB,GAAY,IAAGW,EAAkBsB,EAAatC,EAAEE,IAAIoC,EAAatC,EAAEG,QAAQa,EAAkBsB,EAAarC,SAASC,IAAIoC,EAAarC,SAASE,QAE9IG,EAAgBY,EAAUnB,EAAWuC,EAAatC,EAAEsC,EAAarC,UAKnE,IAAIsC,EAAa,GACjB,IAAK,IAAInC,EAAI,EAAGA,EAAI,EAAIA,IACvBmC,EAAWC,KAAK,CACfnC,QAASA,EACTC,cAAeA,IAIjB,IAAImC,EAAU,GACd,IAAK,IAAIrC,EAAI,EAAGA,EAAImC,EAAWG,OAAQtC,IACtCqC,EAAQD,KAAK,CACZG,OAAQJ,EAAWnC,GAAGC,QACtBuC,SAAW,GACXC,WAAa,GAAEN,EAAWnC,GAAGE,kBAK/B,OAAQb,EAAqBI,IAC5B,KAAK,EACJF,EAAS,GAAE8C,EAAQ,GAAGE,SAClBhG,KAAK0C,OACRM,GAAU,OACVA,GAAU,iCAAgC8C,EAAQ,GAAGI,aACrDlD,GAAU,gBACVC,EAAa,IAEbA,EAAa,GAAE6C,EAAQ,GAAGI,aAE3B,MACD,KAAK,EACJlD,EAAS,GAAE8C,EAAQ,GAAGE,SAClBhG,KAAK0C,OACRM,GAAU,OACVA,GAAU,iCAAgC8C,EAAQ,GAAGI,aACrDjD,EAAa,IAEbA,EAAa,GAAE6C,EAAQ,GAAGI,aAE3B,MACD,KAAK,EACJlD,EAAS,GAAE8C,EAAQ,GAAGE,SAClBhG,KAAK0C,OACRM,GAAU,OACVA,GAAU,iCAAgC8C,EAAQ,GAAGI,aACrDjD,EAAa,IAEbA,EAAa,GAAE6C,EAAQ,GAAGI,aAE3B,MACD,KAAK,EACJlD,EAAS,GAAE8C,EAAQ,GAAGE,SAClBhG,KAAK0C,OACRM,GAAU,OACVA,GAAU,iCAAgC8C,EAAQ,GAAGI,aACrDjD,EAAa,IAEbA,EAAa,GAAE6C,EAAQ,GAAGI,cAKe,IAAxClG,KAAKI,eAAe+F,QAAQnD,KAC/BhD,KAAKI,eAAeyF,KAAK7C,GACzBhD,KAAKK,iBAAiBwF,KAAK5C,GAC3BC,KAEDC,KAEDiD,SAAwBpG,OAGzBA,KAAKe,0BAA4B,CAAC,kBAAmB,EAAG","file":"js/5155.c9b1730a43ec7ff838e6.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {fraction} from '../../modules/fractions.js'\nimport {listeQuestionsToContenu,randint,choice,shuffle,combinaisonListesSansChangerOrdre,calcul,texNombre2,texteEnCouleur,tableauColonneLigne,warnMessage} from '../../modules/outils.js'\nimport { equal } from 'mathjs'\nexport const titre = 'Fractions égales et égalité des produits en croix'\n\n/**\n * * Fractions et égalité des produits en croix\n * * 5n14-3\n * * publication initiale le 23/05/2021\n * * modification le jj/mm/aaaa pour ....\n * @author Sébastien Lozano\n */\nexport default function Eq_resolvantes_Thales() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\tthis.debug = false;\n\tif (this.debug) {\n\t\tthis.nbQuestions = 4;\n\t} else {\n\t\tthis.nbQuestions = 4;\n\t};\n\tthis.sup = 1; // Niveau de difficulté\n  \tthis.consigne = `Les égalités suivantes sont-elles vraies ? Justifier.`\n\n\tthis.nbCols = 1; // Uniquement pour la sortie LaTeX\n\tthis.nbColsCorr = 1; // Uniquement pour la sortie LaTeX\n\tcontext.isHtml ? this.spacing = 3 : this.spacing = 2;\n\tcontext.isHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5;\t\n\n\tthis.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n\tthis.video = '' // Id YouTube ou url\n\n\tthis.nouvelleVersion = function () {\n\t\tlet typesDeQuestionsDisponibles = []\t\t\n\t\tif (this.debug) {\n\t\t\ttypesDeQuestionsDisponibles = [0, 1, 2, 3];\n\t\t} else {\n\t\t\ttypesDeQuestionsDisponibles = [0, 1, 2, 3];\n\t\t};\n\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\n\n\t\t//const listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\t\tconst listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions); // Tous les types de questions sont posées --> à remettre comme ci dessus\t\t\n\t\t\n\t\tfor (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\t\t\t\n\t\t\t// On a besoin d'un booléen pour que tout ne soit pas vrai ou faux\n\t\t\tlet equalOrNot;\n\t\t\t// On a besoin de variables opur les fractions\n\t\t\tlet f,fEqOrNot;\n\t\t\t// On a besoin d'un numerateur d'un dénominateur et d'un coefficient pour les fractions égales\n\t\t\tlet num,den,k;\n\t\t\t// On a besoin d'un string pour stocker l'égalité et un autre pour la justification\n\t\t\tlet egalite,justification;\n\t\t\t/**\n\t\t\t * Une fonction pour rendre deux fractions égales ou pas\n\t\t\t * @param {boolean} bool \n\t\t\t * @returns deux fractions egales ou non\n\t\t\t */\n\t\t\tfunction fracEqualOrNot(bool,n,d) {\n\t\t\t\t// On a besoin de deux fractions\n\t\t\t\tlet f1,f2;\t\t\t\t\n\t\t\t\tf1 = fraction(n,d)\n\t\t\t\tif (bool) {\t\t\t\t\t\n\t\t\t\t\tf2 = fraction(calcul(n*k),calcul(d*k))\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tf2 = fraction(calcul(n+k),calcul(d+k))\n\t\t\t\t}\n\t\t\t\treturn {frac:f1,fracEqualOrNot:f2}\n\t\t\t}\n\t\t\t/**\n\t\t\t * Une fonction pour afficher des fraction avec num et/ou den décimaux\n\t\t\t * @param num le numerateur de type number\n\t\t\t * @param den le dénominateur de type number\t\t\t \n\t\t\t */\n\t\t\tfunction showFracNumDenDec(num,den) {\n\t\t\t\tlet f = fraction(num,den);\n\t\t\t\treturn `\\\\dfrac{${texNombre2(f.num)}}{${texNombre2(f.den)}}`\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Une fonction pour la correction\n\t\t\t * @param bool le booléen pour savoir si il y a égalité ou pas\n\t\t\t * @param f une fraction\n\t\t\t * @param fEqOrNot l'autre fraction égale ou pas\n\t\t\t */\n\t\t\tfunction justifyEq(bool,f,fEqOrNot) {\n\t\t\t\tlet strOut; \n\t\t\t\tif (bool) {\n\t\t\t\t\tstrOut =`Les produits en croix sont égaux :<br>\n\t\t\t\t\t${texNombre2(f.num)}$\\\\times$${texNombre2(fEqOrNot.den)} ${texteEnCouleur('$=$')} ${texNombre2(f.den)}$\\\\times$${texNombre2(fEqOrNot.num)}<br>\t\t\t\t\t\n\t\t\t\t\t`\n\t\t\t\t\tif (Number.isInteger(f.num)) {\n\t\t\t\t\t\tstrOut += `Les fractions $${f.texFraction}$ et $${fEqOrNot.texFraction}$ sont donc égales.`\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstrOut += `Les fractions $${showFracNumDenDec(f.num,f.den)}$ et $${showFracNumDenDec(fEqOrNot.num,fEqOrNot.den)}$ sont donc égales.`\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstrOut =`Les produits en croix ne sont pas égaux :<br>\n\t\t\t\t\t${texNombre2(f.num)}$\\\\times$${texNombre2(fEqOrNot.den)} ${texteEnCouleur('$\\\\neq$')} ${texNombre2(f.den)}$\\\\times$${texNombre2(fEqOrNot.num)}<br>\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t`\n\t\t\t\t\tif (Number.isInteger(f.num)) {\n\t\t\t\t\t\tstrOut += `Les fractions $${f.texFraction}$ et $${fEqOrNot.texFraction}$ ne sont donc pas égales.`\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstrOut += `Les fractions $${showFracNumDenDec(f.num,f.den)}$ et $${showFracNumDenDec(fEqOrNot.num,fEqOrNot.den)}$ ne sont donc pas égales.`\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn strOut\n\t\t\t}\n\n\n\t\t\tk = randint(2,9)    \n\t\t\t// On prépare tous les contenus selon le type de questions\n\t\t\tthis.sup = Number(this.sup); // attention le formulaire renvoie un string, on a besoin d'un number pour le switch !\t\t\t\n\t\t\tswitch (this.sup) {\n\t\t\t\tcase 1: //petits entiers égalité         \t\t\t\t\t\n\t\t\t\t\tequalOrNot = choice([true,false])\n\t\t\t\t\tnum = randint(1,9)\n\t\t\t\t\tden = randint(2,9,num)\n\t\t\t\t\tegalite = `\n\t\t\t\t\t$${fracEqualOrNot(equalOrNot,num,den).frac.texFraction}=${fracEqualOrNot(equalOrNot,num,den).fracEqualOrNot.texFraction}$`\t\t\t\t\t\n\t\t\t\t\tjustification = justifyEq(equalOrNot,fracEqualOrNot(equalOrNot,num,den).frac,fracEqualOrNot(equalOrNot,num,den).fracEqualOrNot)\n\t\t\t\t\tbreak\n\t\t\t\tcase 2: //grands entiers\n\t\t\t\t\tequalOrNot = choice([true,false])\n\t\t\t\t\tnum = randint(11,99)\n\t\t\t\t\tden = randint(11,99,num)\n\t\t\t\t\tegalite = `\n\t\t\t\t\t$${fracEqualOrNot(equalOrNot,num,den).frac.texFraction}=${fracEqualOrNot(equalOrNot,num,den).fracEqualOrNot.texFraction}$`\n\t\t\t\t\tjustification = justifyEq(equalOrNot,fracEqualOrNot(equalOrNot,num,den).frac,fracEqualOrNot(equalOrNot,num,den).fracEqualOrNot)\n\t\t\t\t\tbreak\n\t\t\t\tcase 3: //décimaux\n\t\t\t\t\tequalOrNot = choice([true,false])\n\t\t\t\t\tnum = calcul(randint(11,99)*0.1)\n\t\t\t\t\tden = calcul(randint(11,99,num)*0.1)\n\t\t\t\t\tf = fracEqualOrNot(equalOrNot,num,den).frac      \n\t\t\t\t\tfEqOrNot = fracEqualOrNot(equalOrNot,num,den).fracEqualOrNot\n\t\t\t\t\tegalite = `\n\t\t\t\t\t$${showFracNumDenDec(f.num,f.den)}=${showFracNumDenDec(fEqOrNot.num,fEqOrNot.den)}$`\n\t\t\t\t\tjustification = justifyEq(equalOrNot,fracEqualOrNot(equalOrNot,num,den).frac,fracEqualOrNot(equalOrNot,num,den).fracEqualOrNot)\n\t\t\t\t\tbreak\n\t\t\t\tcase 4: //mélange\t\t\t\t\t\n\t\t\t\t\tequalOrNot = choice([true,false])\n\t\t\t\t\tlet numLowInt = randint(2,9)\n\t\t\t\t\tlet denLowInt = randint(2,9,numLowInt)\n\t\t\t\t\tlet fLowInt = fracEqualOrNot(equalOrNot,numLowInt,denLowInt).frac\n\t\t\t\t\tlet fEqOrNotLowInt = fracEqualOrNot(equalOrNot,numLowInt,denLowInt).fracEqualOrNot\n\t\t\t\t\tlet numBigInt = randint(11,99)\n\t\t\t\t\tlet denBigInt = randint(11,99,numBigInt)\n\t\t\t\t\tlet fBigInt = fracEqualOrNot(equalOrNot,numBigInt,denBigInt).frac\n\t\t\t\t\tlet fEqOrNotBigInt = fracEqualOrNot(equalOrNot,numBigInt,denBigInt).fracEqualOrNot\n\t\t\t\t\tlet numDec = calcul(randint(11,99)*0.1)\t\t\n\t\t\t\t\tlet denDec = calcul(randint(11,99,numDec)*0.1)\n\t\t\t\t\tlet fDec = fracEqualOrNot(equalOrNot,numDec,denDec).frac\n\t\t\t\t\tlet fEqOrNotDec = fracEqualOrNot(equalOrNot,numDec,denDec).fracEqualOrNot\t\t\t\t\t\t\t\t\n\t\t\t\t\tlet masterChoice = choice([\n\t\t\t\t\t\t{ equalOrNot: equalOrNot, num:numLowInt, den:denLowInt , k:k ,f:fLowInt, fEqOrNot:fEqOrNotLowInt},\n\t\t\t\t\t\t{ equalOrNot: equalOrNot, num:numBigInt, den:denBigInt , k:k ,f:fBigInt, fEqOrNot:fEqOrNotBigInt},\n\t\t\t\t\t\t{ equalOrNot: equalOrNot, num:numDec, den:denDec , k:k ,f:fDec, fEqOrNot:fEqOrNotDec}\n\t\t\t\t\t]);\n\t\t\t\t\tegalite = ``\n\t\t\t\t\tif (Number.isInteger(masterChoice.num)) {\n\t\t\t\t\t\tegalite += `$${masterChoice.f.texFraction}=${masterChoice.fEqOrNot.texFraction}$`\n\t\t\t\t\t} else {\n\t\t\t\t\t\tegalite += `$${showFracNumDenDec(masterChoice.f.num,masterChoice.f.den)}=${showFracNumDenDec(masterChoice.fEqOrNot.num,masterChoice.fEqOrNot.den)}$`\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\tjustification = justifyEq(equalOrNot,masterChoice.f,masterChoice.fEqOrNot)\n\t\t\t\t\tbreak\n\t\t\t};\n\n\t\t\t// pour les situations, autant de situations que de cas dans le switch !\n\t\t\tlet situations = [];\n\t\t\tfor (let k = 0; k < 4 ; k++) {\n\t\t\t\tsituations.push({\n\t\t\t\t\tegalite: egalite,\n\t\t\t\t\tjustification: justification\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tlet enonces = [];\n\t\t\tfor (let k = 0; k < situations.length; k++) {\n\t\t\t\tenonces.push({\n\t\t\t\t\tenonce: situations[k].egalite,\n\t\t\t\t\tquestion: ``,\n\t\t\t\t\tcorrection: `${situations[k].justification}`\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// autant de case que d'elements dans le tableau des situations\n\t\t\tswitch (listeTypeDeQuestions[i]) {\n\t\t\t\tcase 0:\n\t\t\t\t\ttexte = `${enonces[0].enonce}`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += `<br> =====CORRECTION======<br>${enonces[0].correction}`;\n\t\t\t\t\t\ttexte += `             `;\n\t\t\t\t\t\ttexteCorr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr = `${enonces[0].correction}`;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\ttexte = `${enonces[1].enonce}`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += `<br> =====CORRECTION======<br>${enonces[1].correction}`;\n\t\t\t\t\t\ttexteCorr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr = `${enonces[1].correction}`;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\ttexte = `${enonces[2].enonce}`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += `<br> =====CORRECTION======<br>${enonces[2].correction}`;\n\t\t\t\t\t\ttexteCorr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr = `${enonces[2].correction}`;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\ttexte = `${enonces[3].enonce}`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += `<br> =====CORRECTION======<br>${enonces[3].correction}`;\n\t\t\t\t\t\ttexteCorr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr = `${enonces[3].correction}`;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\t\tlisteQuestionsToContenu(this);\n\n\t};\n\tthis.besoinFormulaireNumerique = ['Type de nombres', 4, \"1 : Petits entiers\\n2 : Grands entiers\\n3 : Décimaux\\n4 : Mélange\"];\n}\n"],"sourceRoot":""}