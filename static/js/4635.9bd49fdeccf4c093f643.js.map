{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G32-2.js"],"names":["titre","Calculs_trigonometriques2","Exercice","this","consigne","nbCols","nbColsCorr","sup","tailleDiaporama","video","nbQuestions","spacingCorr","spacing","nouvelleVersion","listeQuestions","listeCorrections","distance","hauteur","alfa","baita","beta","alpha","teta","taille","index","A","B","O","H","S","p","objet","objets","context","texte","texteCorr","i","cpt","randint","calcul","Math","atan","PI","arrondi","tan","point","pointAdistance","polygoneAvecNom","push","segment","codageAngleDroit","afficheMesureAngle","texteSurSegment","texNombre","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","arrondiVirgule","texNombrec","round","indexOf","listeQuestionsToContenu","besoinFormulaireCaseACocher"],"mappings":"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","file":"js/4635.9bd49fdeccf4c093f643.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, numAlpha,arrondi, calcul, texNombre, texNombrec, arrondiVirgule } from '../../modules/outils.js'\nimport { texteSurSegment, tracePoint,labelPoint,projectionOrtho, pointAdistance,droite, polygoneAvecNom, afficheMesureAngle, codageAngleDroit, point, segment, texteParPosition, milieu, mathalea2d } from '../../modules/2d.js';\nimport {point3d,vecteur3d,sphere3d,arete3d,rotationV3d,demicercle3d,homothetie3d} from '../../modules/3d.js'\nexport const titre = 'Calculer la hauteur d’un objet vu sous un angle donné'\n\n/**\n * propose de mesurer la hauteur d'un objet en utilisant l'angle sous lequel on voit l'objet et la distance à l'objet. \n * @author Jean-Claude Lhote\n * Référence 3G32-2\n*/\nexport default function Calculs_trigonometriques2() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbCols = 1; // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1; // Uniquement pour la sortie LaTeX\n  this.sup = true; // Niveau de difficulté \n  this.tailleDiaporama = 100; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = \"\" // Id YouTube ou url\n  this.nbQuestions = 1\n  this.spacingCorr=2\n  this.spacing=2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let objet = [['arbre', 'un', ''], ['immeuble', 'un', ''], ['éolienne', 'une', 'te'], ['coline', 'une', 'te']]\n    let distance, hauteur,alfa,baita, beta, alpha, teta, taille, index, A, B, O, H, S, C,M,R,R2,Axe,normalV,normalH,P,HP,Sph,OP,PoleNord,PoleSud, objets = [], p\n    if (context.isHtml) {\n      alfa='α'\n      baita='β'\n    }\n    else {\n      alfa='\\\\alpha'\n      baita='\\\\beta'\n    }\n\n    for (let i = 0, texte, texteCorr,j, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n\n        objets=[]\n          distance = randint(5, 300)\n          hauteur = calcul(randint(150, 190) / 100)\n          beta = Math.atan(hauteur / distance)\n          alpha = randint(10, 50)\n          teta = alpha * Math.PI / 180 - beta\n          taille = arrondi(hauteur + distance * Math.tan(teta), 1)\n          if (taille < 20) index = 0\n          else if (taille < 50) index = 1\n          else if (taille < 100) index = 2\n          else index = 3\n          A = point(0, 0, 'A')\n          B = pointAdistance(A, 12, 0, 'B')\n          O = pointAdistance(A, 3, 90, 'O')\n          H = pointAdistance(B, 3, 90, 'H')\n          S = pointAdistance(B, 9, 90, 'S')\n          p = polygoneAvecNom(A, B, H, S, O)\n          objets.push(p[1], p[0], segment(O, B), segment(O, H), codageAngleDroit(O, A, B), codageAngleDroit(A, B, H), codageAngleDroit(O, H, S))\n          objets.push(afficheMesureAngle(B, O, S, 'black', 3, `${alfa}`), afficheMesureAngle(A, B, O, 'black', 2, `${baita}`), afficheMesureAngle(B, O, H, 'black', 2, `${baita}`))\n          objets.push(texteSurSegment(`${texNombre(hauteur)} m`, O, A, 'black', -0.5), texteSurSegment(`${texNombre(distance)} m`, O, H))\n          texte = `Un observateur regarde ${objet[index][1]} ${objet[index][0]} sous un angle de $${alpha}\\\\degree$.<br>`;\n          texte += `Cet${objet[index][2]} ${objet[index][0]} est situé à une distance de $${texNombre(distance)}$ m de l'observateur.<br>`\n          texte += `l'oeil de l'observateur est situé à $${texNombre(hauteur)}$ m du sol.<br>`\n          if (this.sup) {\n\n            texte += `$O$ représente l'oeil de l'observateur, $[BS]$ représente cet${objet[index][2]} ${objet[index][0]}.<br>`\n\n            texte += `Le schéma ci-dessous n'est pas en vraie grandeur.<br>` + mathalea2d({ xmin: -1, ymin: -1, xmax: 14, ymax: 10, pixelsParCm: 20, scale: 0.5 }, objets);\n            texte += `<br>Calculer d'abord l'angle $${baita}$.<br>`\n            texte += `En déduire la mesure de l'angle $\\\\widehat{HOS}$.<br>`\n            texte += `Calculer alors la longueur $HS$.<br>`\n          }\n          texte += `Calculer la hauteur de cet${objet[index][2]} ${objet[index][0]} arrondie au mètre près.<br>`\n\n          texteCorr = mathalea2d({ xmin: -1, ymin: -1, xmax: 14, ymax: 10, pixelsParCm: 20, scale: 0.5 }, objets)\n          texteCorr += `<br>Dans le triangle $OHB$ rectangle en $H$, $\\\\tan(${baita})=\\\\dfrac{HB}{OH}$.<br>D'où $${baita}=\\\\arctan(\\\\dfrac{${texNombre(hauteur)}}{${texNombre(distance)}})\\\\approx ${arrondiVirgule(beta)}\\\\degree$.<br>`\n          texteCorr += `$\\\\widehat{HOS}=${alfa}-${baita}\\\\approx ${arrondiVirgule(alpha - beta)}$.<br>`\n          texteCorr += `$HS=OH\\\\times \\\\tan(\\\\widehat{HOS})\\\\approx ${distance}\\\\times \\\\tan(${arrondiVirgule(alpha - beta)})\\\\approx ${texNombrec(taille - hauteur)}$ m.<br>`\n          texteCorr += `$BS=BH+HS=${texNombre(hauteur)}+${texNombrec(taille - hauteur)}=${texNombre(taille)}$ m.<br>`\n          texteCorr += `Cet${objet[index][2]} ${objet[index][0]} mesure $${texNombre(Math.round(taille))}$ m de hauteur.`;\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireCaseACocher = ['Afficher un schéma et des questions intermédiaires'];\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n\n"],"sourceRoot":""}