{"version":3,"file":"js/70244.d8bdfa9bdfac77dbf54e.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6G10-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { combinaisonListes, enleveElement, lettreDepuisChiffre, listeQuestionsToContenu, randint, shuffle } from '../../modules/outils.js'\nimport { demiDroite, droite, labelPoint, mathalea2d, point, segmentAvecExtremites } from '../../modules/2d.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Choisir la bonne figure'\nexport const amcReady = true\nexport const amcType = 'qcmMono' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = ['cliqueFigure']\n\n/**\n * Plusieurs éléments sont proposés, il faut choisir le bon (par clic si interactif, par case à cocher par AMC)\n * @author ANGOT Rémi (Ajout AMC par Eric Elter)\n * Référence\n*/\nexport default function cliqueFigure () {\n  Exercice.call(this)\n  this.nbQuestions = 3\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.interactifType = 'cliqueFigure'\n    this.consigne = (this.interactif) ? 'Cliquer sur la bonne figure.' : 'Entourer la bonne figure.' /// Penser ici à AMC aussi.\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    this.figures = [] // Liste des objets de toutes les figures sur lesquelles on pourra cliquer avec leur id et un booléen de réponse\n    const typesDeQuestions = combinaisonListes(['segment', 'droite', 'demidroite', 'demidroite2'], this.nbQuestions)\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      const numeroLettre = randint(1, 20)\n      const A = point(0, 0)\n      const B = point(4, randint(-1, 3))\n      A.nom = lettreDepuisChiffre(numeroLettre)\n      B.nom = lettreDepuisChiffre(numeroLettre + 1)\n      const labels = labelPoint(A, B)\n      this.figures[i] = [{ id: `figure0Ex${this.numeroExercice}Q${i}`, solution: false },\n        { id: `figure1Ex${this.numeroExercice}Q${i}`, solution: false },\n        { id: `figure2Ex${this.numeroExercice}Q${i}`, solution: false },\n        { id: `figure3Ex${this.numeroExercice}Q${i}`, solution: false }\n      ]\n      const figSegment = mathalea2d({ xmin: -2, xmax: 6, ymin: -2, style: '', scale: 0.4, id: `figure0Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B))\n      const figDroite = mathalea2d({ xmin: -2, xmax: 6, ymin: -2, style: '', scale: 0.4, id: `figure1Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B), droite(A, B))\n      const figDemiDroite = mathalea2d({ xmin: -2, xmax: 6, ymin: -2, style: '', scale: 0.4, id: `figure2Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B), demiDroite(A, B))\n      const figDemiDroite2 = mathalea2d({ xmin: -2, xmax: 6, ymin: -2, style: '', scale: 0.4, id: `figure3Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B), demiDroite(B, A))\n      const figSegmentAMC = mathalea2d({ xmin: -2, xmax: 6, ymin: -2, style: '', scale: 0.3, id: `figure0Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B))\n      const figDroiteAMC = mathalea2d({ xmin: -2, xmax: 6, ymin: -2, style: '', scale: 0.3, id: `figure1Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B), droite(A, B))\n      const figDemiDroiteAMC = mathalea2d({ xmin: -2, xmax: 6, ymin: -2, style: '', scale: 0.3, id: `figure2Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B), demiDroite(A, B))\n      const figDemiDroite2AMC = mathalea2d({ xmin: -2, xmax: 6, ymin: -2, style: '', scale: 0.3, id: `figure3Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B), demiDroite(B, A))\n      let figCorr\n      let figCorrecteAMC\n      const figIncorrectAMC = [figSegmentAMC, figDroiteAMC, figDemiDroiteAMC, figDemiDroite2AMC]\n      switch (typesDeQuestions[i]) {\n        case 'segment':\n          texte = `Le segment d'extrémités $${A.nom}$ et $${B.nom}$.`\n          this.figures[i][0].solution = true\n          figCorr = {}\n          figCorrecteAMC = figSegmentAMC\n          break\n        case 'droite':\n          texte = `La droite passant par les points $${A.nom}$ et $${B.nom}$.`\n          this.figures[i][1].solution = true\n          figCorr = droite(A, B)\n          figCorrecteAMC = figDroiteAMC\n          break\n        case 'demidroite':\n          texte = `La demi-droite d'origine $${A.nom}$ passant par $${B.nom}$.`\n          this.figures[i][2].solution = true\n          figCorr = demiDroite(A, B)\n          figCorrecteAMC = figDemiDroiteAMC\n          break\n        case 'demidroite2':\n          texte = `La demi-droite d'origine $${B.nom}$ passant par $${A.nom}$.`\n          this.figures[i][3].solution = true\n          figCorr = demiDroite(B, A)\n          figCorrecteAMC = figDemiDroite2AMC\n          break\n      }\n\n      // PROPRE A AMC\n      enleveElement(figIncorrectAMC, figCorrecteAMC)\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].propositions = [\n        {\n          texte: figCorrecteAMC,\n          statut: true\n        },\n        {\n          texte: figIncorrectAMC[0],\n          statut: false\n        },\n        {\n          texte: figIncorrectAMC[1],\n          statut: false\n        },\n        {\n          texte: figIncorrectAMC[2],\n          statut: false\n        }\n      ]\n      this.autoCorrection[i].options = {\n        ordered: false,\n        lastChoice: 4\n      }\n      // FIN DE AMC\n\n      if (!context.isAmc) {\n        texte += '<br>'\n        texteCorr = texte + mathalea2d({ xmin: -4, xmax: 6, ymin: -2, style: '', scale: 0.4, id: `figure3Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B), figCorr)\n        const figures = shuffle([figSegment, figDroite, figDemiDroite, figDemiDroite2])\n        texte += figures.join('')\n        if (this.interactif && context.isHtml) {\n          texte += `<span id=\"resultatCheckEx${this.numeroExercice}Q${i}\"></span>`\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","amcType","interactifReady","interactifType","cliqueFigure","Exercice","this","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","autoCorrection","consigne","interactif","listeQuestions","listeCorrections","figures","typesDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","numeroLettre","randint","A","point","B","nom","lettreDepuisChiffre","labels","labelPoint","id","numeroExercice","solution","figSegment","mathalea2d","xmin","xmax","ymin","style","scale","segmentAvecExtremites","figDroite","droite","figDemiDroite","demiDroite","figDemiDroite2","figSegmentAMC","figDroiteAMC","figDemiDroiteAMC","figDemiDroite2AMC","figCorr","figCorrecteAMC","figIncorrectAMC","enleveElement","propositions","statut","options","ordered","lastChoice","context","shuffle","join","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}