{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4C32-1.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/dom.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["titre","amcReady","amcType","interactifReady","CalculsAvecPuissancesDeDix","Exercice","this","sup","sup2","nbCols","nbColsCorr","nbQuestions","nouvelleVersion","typeDeQuestionsDisponibles","parseInt","consigne","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","mantisse1","exp1","decalage","mantisse","exp","decimalstring","scientifiquestring","i","cpt","randint","calcul","choice","texNombrec","texNombre","miseEnEvidence","autoCorrection","enonce","options","ordered","lastChoice","propositions","statut","interactif","propositionsQcm","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceInteractif","exercice","document","addEventListener","button","querySelector","event","spanReponseLigne","champTexte","getElementById","value","replaceAll","reponse","valeur","toString","innerHTML","readOnly","style","fontSize","classList","add","questionNumerique","$","checkbox","monRouge","monVert","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","length","forEach","proposition","indice","label","check","backgroundColor","checked","typeFeedback","feedback","messageFeedback","id","message","type","querySelectorAll","uicheck","exerciceQcm","espace","context","undefined","shuffleJusqua","doublonsTrouves","j","splice","elimineDoublons","rep","ajouteChampTexte","texteApres","inline","numeric","setReponse","valeurs","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","reponses","Array","isArray","param","hasProp","object","prop","Object","prototype","hasOwnProperty","call","setStyles","elt","styles","split","paire","exec","key","error","console","addText","text","appendChild","window","createTextNode","get","strict","TypeError","Error","addElement","parent","tag","attrs","content","txtContent","createElement","attr","className","class","setAttribute","create","types","addFeedback","container","includes","div","cssIcon","remove","divTitre","test","messageUtilisateur","code","width"],"mappings":"4OAGO,MAAMA,EAAQ,oCAERC,GAAW,EACXC,EAAU,EACVC,GAAkB,EAQhB,SAASC,IACtBC,eAAcC,MACdA,KAAKC,IAAM,EACXD,KAAKE,KAAO,EACZF,KAAKN,MAAQA,EACbM,KAAKL,SAAWA,EAChBK,KAAKJ,QAAUA,EACfI,KAAKH,gBAAkBA,EACvBG,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKK,YAAc,EAGnBL,KAAKM,gBAAkB,WAMrB,IAAIC,EALJP,KAAKC,IAAMO,SAASR,KAAKC,KACzBD,KAAKE,KAAOM,SAASR,KAAKE,MAET,IAAbF,KAAKC,IAAWD,KAAKS,SAAW,uDAC/BT,KAAKS,SAAW,4CAErBT,KAAKU,eAAiB,GACtBV,KAAKW,iBAAmB,GACHJ,EAAH,IAAdP,KAAKE,KAAyC,CAAC,EAAG,EAAG,EAAG,EAAG,GACxC,IAAdF,KAAKE,KAAyC,CAAC,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,GAE/C,MAAMU,GAAuBC,SAAkBN,EAA4BP,KAAKK,aAChF,IAAK,IAAWS,EAAOC,EAAWC,EAAWC,EAAMC,EAAUC,EAAUC,EAAKC,EAAeC,EAAlFC,EAAI,EAAkGC,EAAM,EACnHD,EAAIvB,KAAKK,aAAemB,EAAM,IAAK,CAInC,OAAQZ,EAAqBW,IAC3B,KAAK,EACHL,GAAWO,UAAS,EAAG,EAAG,GAC1BN,GAAWM,SAAQ,EAAG,GACtBL,GAAMK,SAAQ,EAAG,GACjB,MACF,KAAK,EACHP,GAAWO,UAAS,EAAG,EAAG,GAC1BN,GAAWO,UAAOD,SAAQ,GAAI,IAAM,IACpCL,GAAMK,SAAQ,EAAG,GACjB,MACF,KAAK,EACHP,GAAWO,UAAS,EAAG,EAAG,GACDN,EAAH,KAAlBM,SAAQ,EAAG,IAAqBC,UAAOD,SAAQ,IAAK,KAAO,MAC/CC,UAAwB,KAAhBD,SAAQ,EAAG,IAAWA,SAAQ,EAAG,IAAM,KAC/DL,GAAMK,SAAQ,EAAG,IAAKE,SAAO,EAAE,EAAG,IAClC,MACF,KAAK,EACHT,GAAWO,UAAS,EAAG,EAAG,GACDN,EAAH,KAAlBM,SAAQ,EAAG,IAAqBC,UAAwB,KAAhBD,SAAQ,EAAG,GAA6B,GAAjBA,SAAQ,EAAG,KAAW,MACzEC,UAAOD,SAAQ,KAAM,MAAQ,KAC7CL,GAAMK,SAAQ,EAAG,IAAKE,SAAO,EAAE,EAAG,IAItCX,GAAYU,SAAOP,EAAW,IAAMD,GACpCD,EAAOG,EAAMF,EAEbG,EAAiB,IAAEO,SAAWZ,kBAA0BC,KACxDK,EAAsB,IAAEO,SAAUV,kBAAyBC,KAC1C,IAAbpB,KAAKC,KACPa,EAAS,IAAGO,KACZN,EAAa,KAAGe,QAAgB,IAAEF,SAAWZ,KAAc,mBAAkBc,QAAgB,OAAMb,YAAca,QAAgB,IAAED,SAAUV,iBAAwBD,KAAa,oBAAmBY,QAAgB,OAAMb,WAAcK,KACzOtB,KAAK+B,eAAeR,GAAK,GACzBvB,KAAK+B,eAAeR,GAAGS,OAAU,GAAElB,MACnCd,KAAK+B,eAAeR,GAAGU,QAAU,CAC/BC,SAAS,EACTC,WAAY,GAEdnC,KAAK+B,eAAeR,GAAGa,aAAe,CACpC,CACEtB,MAAQ,IAAGQ,KACXe,QAAQ,GAEV,CACEvB,MAAQ,KAAGe,SAAUV,kBAAyBC,EAAM,MACpDiB,QAAQ,GAEV,CACEvB,MAAQ,KAAGe,SAAUV,kBAAyBC,EAAM,MACpDiB,QAAQ,GAEV,CACEvB,MAAQ,KAAGe,SAAUV,mBAA0BC,MAC/CiB,QAAQ,MAIZtB,EAAa,KAAGe,SAAeD,SAAUb,GAAY,oBAAmBc,QAAgB,OAAMb,UAAYa,SAAeD,SAAUV,GAAa,eAAcD,KAAa,oBAAmBY,QAAgB,OAAMb,UAAaK,KACjOR,EAAS,KAAGe,SAAUb,kBAAyBc,QAAe,YAAYR,KAC1EtB,KAAK+B,eAAeR,GAAK,GACzBvB,KAAK+B,eAAeR,GAAGS,OAAU,GAAElB,MACnCd,KAAK+B,eAAeR,GAAGa,aAAe,CACpC,CACEtB,MAAQ,IAAGG,KACXoB,QAAQ,GAEV,CACEvB,MAAQ,IAAGG,EAAO,KAClBoB,QAAQ,GAEV,CACEvB,MAAQ,IAAGG,EAAO,KAClBoB,QAAQ,GAEV,CACEvB,MAAQ,KAAIG,KACZoB,QAAQ,IAGZrC,KAAK+B,eAAeR,GAAGU,QAAU,CAC/BC,SAAS,EACTC,WAAY,GAEVnC,KAAKsC,aACPxB,IAASyB,QAAgBvC,KAAMuB,GAAGT,QAGlCd,KAAKsC,aACPxB,IAASyB,QAAgBvC,KAAMuB,GAAGT,QAEQ,IAAxCd,KAAKU,eAAe8B,QAAQ1B,KAC9Bd,KAAKU,eAAe+B,KAAK3B,GACzBd,KAAKW,iBAAiB8B,KAAK1B,GAC3BQ,KAEFC,KAEFkB,SAAwB1C,OAG1BA,KAAK2C,0BAA4B,CAAC,mBAAoB,EAAG,8DACzD3C,KAAK4C,2BAA6B,CAAC,wBAAyB,EAAG,0C,6BC/IlD,SAAS7C,IAEtBC,KAAKN,MAAQ,GACbM,KAAKS,SAAW,GAChBT,KAAK6C,mBAAqB,GAC1B7C,KAAKU,eAAiB,GACtBV,KAAKW,iBAAmB,GACxBX,KAAK8C,aAAe,GACpB9C,KAAK+C,QAAU,GACf/C,KAAKgD,kBAAoB,GACzBhD,KAAKK,YAAc,GACnBL,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKiD,QAAU,EACfjD,KAAKkD,YAAc,EACnBlD,KAAKmD,QAAS,EAEdnD,KAAK2C,2BAA4B,EACjC3C,KAAKoD,uBAAwB,EAC7BpD,KAAKqD,6BAA8B,EACnCrD,KAAKsD,oBAAqB,EAC1BtD,KAAKuD,uBAAwB,EAC7BvD,KAAKwD,kBAAmB,EACxBxD,KAAKyD,sBAAuB,EAC5BzD,KAAK0D,mBAAoB,EACzB1D,KAAK2D,uBAAwB,EAC7B3D,KAAK4D,+BAAgC,EACrC5D,KAAK6D,qBAAsB,EAC3B7D,KAAK8D,MAAQ,GACb9D,KAAK+D,YAAa,EAClB/D,KAAKgE,gBAAkB,GAMvBhE,KAAKiE,mBAAoB,EACzBjE,KAAKsC,YAAa,EAClBtC,KAAKkE,uBAAwB,EAC7BlE,KAAKmE,KAAM,EACXnE,KAAKoE,eAAgB,EACrBpE,KAAKqE,SAAU,EACfrE,KAAK+B,eAAiB,GACtB/B,KAAKsE,sBAAwB,GAC7BtE,KAAKuE,cAAe,EACpBvE,KAAKM,gBAAkB,SAAUkE,KACjCxE,KAAKyE,cAAgB,G,8IC/ChB,SAASC,EAAoBC,GACT,IAArBA,EAAS/E,SAAsC,IAArB+E,EAAS/E,SAgKlC,SAA4B+E,GACjCC,SAASC,iBAAiB,qBAAqB,KAC7C,MAAMC,EAASF,SAASG,cAAe,YAAWJ,EAASH,kBACvDM,GACFA,EAAOD,iBAAiB,SAASG,IAGGL,EAAStE,YAC3C,IAAK,MAAMkB,KAAKoD,EAAS5C,eAAgB,CACvC,MAAMkD,EAAmBL,SAASG,cAAe,mBAAkBJ,EAASH,kBAAkBjD,KAExF2D,EAAaN,SAASO,eAAgB,eAAcR,EAASH,kBAAkBjD,KACjF2D,EAAWE,MAAMC,WAAW,IAAK,MAAQV,EAAS5C,eAAeR,GAAG+D,QAAQC,OAAOC,WAAWH,WAAW,IAAK,IAAIA,WAAW,IAAK,MACpIJ,EAAiBQ,UAAY,OAG7BR,EAAiBQ,UAAY,MAG/BP,EAAWQ,UAAW,EACtBT,EAAiBU,MAAMC,SAAW,QAEpCd,EAAOe,UAAUC,IAAI,kBAtL2BC,CAAkBpB,GAC/C,IAArBA,EAAS/E,SAAsC,IAArB+E,EAAS/E,SASlC,SAAsB+E,GAC3BC,SAASC,iBAAiB,qBAAqB,KAE7CmB,EAAE,gBAAgBC,WAElB,MAAMC,EAAW,yBACXC,EAAU,2BACVrB,EAASF,SAASG,cAAe,YAAWJ,EAASH,kBACvDM,GACFA,EAAOD,iBAAiB,SAASG,IAC/B,IAAK,IAAIzD,EAAI,EAAGA,EAAIoD,EAAStE,YAAakB,IAAK,CAE7C,IAGI6E,EAHAC,EAAmB,EACnBC,EAAsB,EACtBC,EAA4B,EAGhC,IAAK,IAAIC,EAAI,EAAGA,EAAI7B,EAAS5C,eAAeR,GAAGa,aAAaqE,OAAQD,IAC9D7B,EAAS5C,eAAeR,GAAGa,aAAaoE,GAAGnE,QAAQkE,IAEzD,MAAMtB,EAAmBL,SAASG,cAAe,mBAAkBJ,EAASH,kBAAkBjD,KAC9FoD,EAAS5C,eAAeR,GAAGa,aAAasE,SAAQ,CAACC,EAAaC,KAC5D,MAAMC,EAAQjC,SAASG,cAAe,WAAUJ,EAASH,kBAAkBjD,KAAKqF,KAC1EE,EAAQlC,SAASG,cAAe,WAAUJ,EAASH,kBAAkBjD,KAAKqF,KAC5ED,EAAYtE,QACdwE,EAAMlB,MAAMoB,gBAAkBZ,EAC1BW,EAAME,UACRX,IACAD,EAAiBQ,KAEQ,IAAlBE,EAAME,UACfH,EAAMlB,MAAMoB,gBAAkBb,EAC9BI,IACAF,EAAiBQ,MAGrB,IAAIK,EAAe,WACS,IAAxBX,GAA6BD,IAAqBE,EACpDtB,EAAiBQ,UAAY,MAE7BR,EAAiBQ,UAAY,KAC7BwB,EAAe,SAEjBhC,EAAiBU,MAAMC,SAAW,QAC9BQ,GAAkB,GAAKzB,EAAS5C,eAAeR,GAAGa,aAAagE,GAAgBc,WACjFC,QAAgB,CACdC,GAAK,aAAYzC,EAASH,kBAAkBjD,IAC5C8F,QAAS1C,EAAS5C,eAAeR,GAAGa,aAAagE,GAAgBc,SACjEI,KAAML,IAIKrC,SAAS2C,iBAAkB,kBAAiB5C,EAASH,kBAC7DkC,SAAQ,SAAUc,GACzBA,EAAQ3B,UAAUC,IAAI,gBAExBhB,EAAOe,UAAUC,IAAI,kBAjE2B2B,CAAY9C,GA4E7D,SAASpC,EAAiBoC,EAAUpD,GACzCoD,EAASjF,MAAQ,aACjB,IAAIoB,EAAQ,GACRC,EAAY,GACZ2G,EAAS,GAeb,GAbEA,EADEC,YACO,SAEA,eAGgCC,IAAvCjD,EAAS5C,eAAeR,GAAGU,QACxB0C,EAAS5C,eAAeR,GAAGU,QAAQC,UACtCyC,EAAS5C,eAAeR,GAAGa,cAAeyF,SAAclD,EAAS5C,eAAeR,GAAGa,aAAcuC,EAAS5C,eAAeR,GAAGU,QAAQE,aAGtIwC,EAAS5C,eAAeR,GAAGa,cAAeyF,SAAclD,EAAS5C,eAAeR,GAAGa,cAqChF,SAA0BA,GAC/B,IAAI0F,GAAkB,EACtB,IAAK,IAAIvG,EAAI,EAAGA,EAAIa,EAAaqE,OAAS,EAAGlF,IAC3C,IAAK,IAAIwG,EAAIxG,EAAI,EAAGwG,EAAI3F,EAAaqE,QAC/BrE,EAAab,GAAGT,QAAUsB,EAAa2F,GAAGjH,OAE5CgH,GAAkB,EACd1F,EAAab,GAAGc,OAClBD,EAAa4F,OAAOD,EAAG,GACd3F,EAAa2F,GAAG1F,QAEzBD,EAAa4F,OAAOD,EAAG,GACvB3F,EAAab,GAAGc,QAAS,GAEzBD,EAAa4F,OAAOD,EAAG,IAGzBA,IApDNE,CAAgBtD,EAAS5C,eAAeR,GAAGa,eACtCuF,WAAe,CACdA,YACF7G,GAAU,yBAAwB6D,EAASH,kBAAkBjD,MAE7DT,GAAS,OAEX,IAAK,IAAIoH,EAAM,EAAGA,EAAMvD,EAAS5C,eAAeR,GAAGa,aAAaqE,OAAQyB,IAClEP,YACF7G,GAAU,6BAA4B6D,EAASH,sGACqBG,EAASH,kBAAkBjD,KAAK2G,sCAC5EvD,EAASH,kBAAkBjD,KAAK2G,MAAQvD,EAAS5C,eAAeR,GAAGa,aAAa8F,GAAKpH,MAAQ4G,8BAGrH5G,GAAU,iBAAgB6D,EAAS5C,eAAeR,GAAGa,aAAa8F,GAAKpH,QAAU4G,EAE/E/C,EAAS5C,eAAeR,GAAGa,aAAa8F,GAAK7F,OAC/CtB,GAAc,sBAAqB4D,EAAS5C,eAAeR,GAAGa,aAAa8F,GAAKpH,QAAU4G,EAE1F3G,GAAc,iBAAgB4D,EAAS5C,eAAeR,GAAGa,aAAa8F,GAAKpH,QAAU4G,EAGrFC,cACF7G,GAAU,4BAA2B6D,EAASH,kBAAkBjD,aAChET,GAAU,wBAAuB6D,EAASH,kBAAkBjD,qBAGhE,MAAO,CAAET,MAAOA,EAAOC,UAAWA,GAkE7B,SAASoH,EAAkBxD,EAAUpD,GAAG,MAAET,EAAQ,GAAV,WAAcsH,EAAa,GAA3B,OAA+BC,GAAS,EAAxC,QAA8CC,GAAU,EAAxD,OAA8D1B,GAAW,IACtH,OAAIe,aAAkBhD,EAASrC,WACrB,uBAAsB+F,EAAS,SAAW,uDAEzCvH,uCACcwH,EAAU,6DAA+D,uBAAuB3D,EAASH,kBAAkBjD,IAAIqF,GAAU,sBACtJwB,4CACmBzD,EAASH,kBAAkBjD,qCAIjD,GAUJ,SAASgH,EAAY5D,EAAUpD,EAAGiH,GAAS,OAAEC,EAAS,EAAX,SAAcC,EAAW,EAAzB,MAA4BC,GAAQ,EAApC,mBAA2CC,EAAqB,EAAhE,cAAmEC,GAAgB,EAAnF,OAA0FC,EAAS,GAAM,IACzJ,IAAIC,EAAW,GAIbA,EAHGC,MAAMC,QAAQT,GAGNA,EAFA,CAACA,QAIqBZ,IAA/BjD,EAAS5C,eAAeR,KAC1BoD,EAAS5C,eAAeR,GAAK,SAEYqG,IAAvCjD,EAAS5C,eAAeR,GAAG+D,UAC7BX,EAAS5C,eAAeR,GAAG+D,QAAU,IAEvCX,EAAS5C,eAAeR,GAAG+D,QAAQ4D,MAAQ,CAAET,OAAQA,EAAQC,SAAUA,EAAUC,MAAOA,EAAOC,mBAAoBA,EAAoBC,cAAeA,EAAeC,OAAQA,GAC7K,IAAK,MAAMxD,KAAWyD,EACpBpE,EAAS5C,eAAeR,GAAG+D,QAAQC,OAASD,I,wDC5NhD,MAAM6D,EAAU,CAACC,EAAQC,IAA2B,iBAAXD,GAAuBE,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,GAQ7G,SAASK,EAAWC,EAAKC,GACvB,IACE,GAAID,GAAOA,EAAIhE,MACb,GAAsB,iBAAXiE,GACTA,EAASA,EAAOC,MAAM,MACfnD,SAAQ,SAAUoD,GAEvB,GADAA,EAAQ,eAAeC,KAAKD,GACjB,CACT,MAAO,CAAEE,EAAK5E,GAAS0E,EACvBH,EAAIhE,MAAMqE,GAAO5E,WAGhB,GAAsB,iBAAXwE,EAChB,IAAK,MAAMP,KAAQO,EACbT,EAAQS,EAAQP,KAClBM,EAAIhE,MAAM0D,GAAQO,EAAOP,IAKjC,MAAOY,GACPC,QAAQD,MAAMA,IASX,SAASE,EAASR,EAAKS,GAC5BT,EAAIU,YAAYC,OAAO1F,SAAS2F,eAAeH,IAW1C,SAASI,EAAKpD,EAAIqD,GAAS,GAChC,GAAkB,iBAAPrD,EAAiB,MAAMsD,UAAU,qBAC5C,MAAMf,EAAM/E,SAASO,eAAeiC,GACpC,IAAKuC,GAAOc,EAAQ,MAAME,MAAO,kBAAiBvD,kBAClD,OAAOuC,EAwCF,SAASiB,EAAYC,EAAQC,EAAKC,EAAOC,GAC9C,MAAMrB,EAhCD,SAAiBmB,EAAKC,EAAOE,GAClC,MAAMtB,EAAMW,OAAO1F,SAASsG,cAAcJ,GAC1C,IAAIK,EACJ,IACE,GAAIJ,EACF,IAAKI,KAAQJ,EACP5B,EAAQ4B,EAAOI,KACJ,UAATA,EAAkBxB,EAAIyB,UAAYL,EAAMM,MAC1B,cAATF,EAAsBxB,EAAIyB,UAAYL,EAAMK,UACnC,UAATD,EAAkBzB,EAAUC,EAAKoB,EAAMpF,OAC3CgE,EAAI2B,aAAaH,EAAMJ,EAAMI,KAIxC,MAAOlB,GACPC,QAAQD,MAAMA,GAKhB,OAFIgB,GAAYd,EAAQR,EAAKsB,GAEtBtB,EAYK4B,CAAOT,EAAKC,EAAOC,GAE/B,OADAH,EAAOR,YAAYV,GACZA,ECjGT,MAAM6B,EAAQ,CAAC,OAAQ,UAAW,QAAS,YAWpC,SAASC,EAAaC,GAAW,QAAErE,EAAF,KAAWC,EAAO,QAAlB,MAA2B5H,GAAU,IAK3E,GAJK8L,EAAMG,SAASrE,KAClB4C,QAAQD,MAAMU,MAAO,6BAA4BrD,MACjDA,EAAO,UAEJD,EAAS,MAAMsD,MAAM,oDAC1B,MACMiB,EAAMhB,EAAWc,EAAW,MAAO,CAAEN,UAAY,cAD/B,SAAT9D,EAAkB,GAAKA,MAEhCuE,EAAmB,UAATvE,EACZ,gBACU,YAATA,EACG,WACA,eAGR,GAFkBsD,EAAWgB,EAAK,IAAK,CAAER,UAAW,eAC1CvG,iBAAiB,SAAS,IAAM+G,EAAIE,WAC1CpM,EAAO,CACT,MAAMqM,EAAWnB,EAAWgB,EAAK,MAAO,CAAER,UAAW,WACrDR,EAAWmB,EAAU,IAAK,CAAEX,UAAY,GAAES,WAC1C1B,EAAQ4B,EAAUrM,GAIpB,MAFI,oBAAoBsM,KAAK3E,GAAUuE,EAAInG,WAAa4B,EACnD8C,EAAQyB,EAAKvE,GACXuE,EAUF,SAASK,GAAoB,KAAEC,EAAF,SAAQvH,IAC1C,MAAM+G,EAAYlB,EAAI,mBACtB,OAAQ0B,GACN,IAAK,sBACHT,EAAYC,EAAW,CACrBhM,MAAO,yCACP2H,QAAU,iBAAgB1C,0GAC1B2C,KAAM,UAER,MACF,IAAK,WACHmE,EAAYC,EAAW,CACrBhM,MAAO,sCACP2H,QAAU,wPAEVC,KAAM,YAER,MACF,IAAK,cACHmE,EAAYC,EAAW,CACrBhM,MAAO,yCACP2H,QAAU,wPAEVC,KAAM,YAER,MACF,QACE4C,QAAQD,MAAMU,MAAO,QAAOuB,sCAC5BT,EAAYC,EAAW,CACrBhM,MAAO,iBACP2H,QAAU,wLAEVC,KAAM,aAaP,SAASH,GAAiB,GAAEC,EAAF,QAAMC,EAAU,GAAhB,KAAoBC,EAAO,SAAY,IACtE,IAAKF,IAAOC,EAAS,OAAO6C,QAAQD,MAAMS,UAAU,wBAExCe,EADMjB,EAAIpD,GACa,CAAEC,UAASC,SAC1C3B,MAAMwG,MAAQ","file":"js/4273.769ccff3b0b6c63b176b.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, calcul, texNombrec, texNombre, miseEnEvidence } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nexport const titre = 'Calcul avec les puissances de dix'\n\nexport const amcReady = false // tant qu'il n'a pas été adapté à la version 2.6\nexport const amcType = 1 // QCM\nexport const interactifReady = true\n\n/**\n * type 1 : Un nombre est donné par le produit d'un décimal par une puissance de dix, il faut l'écrire en notation scientifique\n * type 2 : On donne la notation scientifique d'un nombre et on doit trouver l'exposant manquant de 10 dans le membre de gauche.\n * @author Jean-Claude Lhote\n * 4C32-1\n */\nexport default function CalculsAvecPuissancesDeDix () {\n  Exercice.call(this)\n  this.sup = 1\n  this.sup2 = 1\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.nbQuestions = 5\n\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.sup2 = parseInt(this.sup2)\n    \n    if (this.sup === 1) this.consigne = 'Donner l\\'écriture scientifique des nombres suivants.'\n    else this.consigne = 'Compléter l\\'égalité des nombres suivants.'\n    let typeDeQuestionsDisponibles\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (this.sup2 === 1) typeDeQuestionsDisponibles = [0, 0, 0, 1, 1]\n    else if (this.sup2 === 2) typeDeQuestionsDisponibles = [0, 1, 1, 2, 2]\n    else typeDeQuestionsDisponibles = [2, 2, 3, 3, 3]\n\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, mantisse1, exp1, decalage, mantisse, exp, decimalstring, scientifiquestring, cpt = 0;\n      i < this.nbQuestions && cpt < 50;) {\n      //        nombre=calcul(randint(1001,9999)/10**randint(1,6))\n      //      mantisse=calcul(nombre/10**(Math.floor(Math.log10(nombre))))\n      //        exp=Math.floor(Math.log10(nombre))\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          decalage = randint(-1, 1, 0)\n          mantisse = randint(1, 9)\n          exp = randint(1, 5)\n          break\n        case 1:\n          decalage = randint(-2, 2, 0)\n          mantisse = calcul(randint(11, 99) / 10)\n          exp = randint(1, 5)\n          break\n        case 2:\n          decalage = randint(-3, 3, 0)\n          if (randint(0, 1) === 1) mantisse = calcul(randint(111, 999) / 100)\n          else mantisse = calcul((randint(1, 9) * 100 + randint(1, 9)) / 100)\n          exp = randint(1, 7) * choice([-1, 1])\n          break\n        case 3:\n          decalage = randint(-4, 4, 0)\n          if (randint(0, 1) === 1) mantisse = calcul((randint(1, 9) * 1000 + randint(1, 19) * 5) / 1000)\n          else mantisse = calcul(randint(1111, 9999) / 1000)\n          exp = randint(3, 7) * choice([-1, 1])\n          break\n      }\n      // nombre = calcul(mantisse * 10 ** exp)\n      mantisse1 = calcul(mantisse * 10 ** decalage)\n      exp1 = exp - decalage\n\n      decimalstring = `${texNombrec(mantisse1)} \\\\times 10^{${exp1}}`\n      scientifiquestring = `${texNombre(mantisse)} \\\\times 10^{${exp}}`\n      if (this.sup === 1) {\n        texte = `$${decimalstring}$`\n        texteCorr = `$${miseEnEvidence(`${texNombrec(mantisse1)}`, 'blue')}\\\\times ${miseEnEvidence(`10^{${exp1}}`)} = ${miseEnEvidence(`${texNombre(mantisse)}\\\\times 10^{${decalage}}`, 'blue')}\\\\times  ${miseEnEvidence(`10^{${exp1}}`)} = ${scientifiquestring}$`\n        this.autoCorrection[i] = {}\n        this.autoCorrection[i].enonce = `${texte}\\n`\n        this.autoCorrection[i].options = {\n          ordered: false,\n          lastChoice: 5\n        }\n        this.autoCorrection[i].propositions = [\n          {\n            texte: `$${scientifiquestring}$`,\n            statut: true\n          },\n          {\n            texte: `$${texNombre(mantisse)} \\\\times 10^{${exp - 1}}$`,\n            statut: false\n          },\n          {\n            texte: `$${texNombre(mantisse)} \\\\times 10^{${exp + 1}}$`,\n            statut: false\n          },\n          {\n            texte: `$${texNombre(mantisse)} \\\\times 10^{${-exp}}$`,\n            statut: false\n          }\n        ]\n      } else {\n        texteCorr = `$${miseEnEvidence(texNombre(mantisse1), 'blue')}\\\\times  ${miseEnEvidence(`10^{${exp1}}`)}=${miseEnEvidence(texNombre(mantisse) + `\\\\times 10^{${decalage}}`, 'blue')}\\\\times  ${miseEnEvidence(`10^{${exp1}}`)} =${scientifiquestring}$`\n        texte = `$${texNombre(mantisse1)}\\\\times 10^{${miseEnEvidence('....')}}=${scientifiquestring}$`\n        this.autoCorrection[i] = {}\n        this.autoCorrection[i].enonce = `${texte}\\n`\n        this.autoCorrection[i].propositions = [\n          {\n            texte: `$${exp1}$`,\n            statut: true\n          },\n          {\n            texte: `$${exp1 - 1}$`,\n            statut: false\n          },\n          {\n            texte: `$${exp1 + 1}$`,\n            statut: false\n          },\n          {\n            texte: `$${-exp1}$`,\n            statut: false\n          }\n        ]\n        this.autoCorrection[i].options = {\n          ordered: false,\n          lastChoice: 5\n        }\n        if (this.interactif) {\n          texte += propositionsQcm(this, i).texte\n        }\n      }\n      if (this.interactif) {\n        texte += propositionsQcm(this, i).texte\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n\n  this.besoinFormulaireNumerique = [\"Type d'exercices\", 2, '1 : Traduire en notation scientifique\\n2 : Exercice à trou']\n  this.besoinFormulaire2Numerique = ['Niveaux de difficulté', 3, '1 : Facile\\n2 : Moyen\\n3 : Difficile']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4 || exercice.amcType === 5) questionNumerique(exercice)\n  if (exercice.amcType === 1 || exercice.amcType === 2) exerciceQcm(exercice)\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1 && exercice.autoCorrection[i].propositions[indiceFeedback].feedback) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              message: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {exercice}\n * @param {i} i indice de la question\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          const champTexte = document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`)\n          if (champTexte.value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '').replaceAll('.', ',')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          champTexte.readOnly = true\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true, indice } = {}) {\n  if (context.isHtml && exercice.interactif) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}${indice || ''}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {array || number} a\n */\nexport function setReponse (exercice, i, valeurs, { digits = 0, decimals = 0, signe = false, exposantNbChiffres = 0, exposantSigne = false, approx = 0 } = {}) {\n  let reponses = []\n  if (!Array.isArray(valeurs)) {\n    reponses = [valeurs]\n  } else {\n    reponses = valeurs\n  }\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.param = { digits: digits, decimals: decimals, signe: signe, exposantNbChiffres: exposantNbChiffres, exposantSigne: exposantSigne, approx: approx }\n  for (const reponse of reponses) {\n    exercice.autoCorrection[i].reponse.valeur = reponse\n  }\n}\n","/**\n * Fonctions de gestion du dom\n * @module\n */\n/**\n * Retourne true si l'objet à la propriété\n * @param {Object} object\n * @param {string} prop\n * @return {boolean}\n */\nconst hasProp = (object, prop) => typeof object === 'object' && Object.prototype.hasOwnProperty.call(object, prop)\n\n/**\n * Affecte des styles à un élément html (on peut pas affecter elt.style directement car read only, faut faire du elt.style.foo = bar)\n * sans planter en cas de pb (on le signale juste en console)\n * @param {HTMLElement} elt\n * @param {string|object} styles\n */\nfunction setStyles (elt, styles) {\n  try {\n    if (elt && elt.style) {\n      if (typeof styles === 'string') {\n        styles = styles.split(';')\n        styles.forEach(function (paire) {\n          paire = /([\\w]+):(.+)/.exec(paire)\n          if (paire) {\n            const [, key, value] = paire\n            elt.style[key] = value\n          }\n        })\n      } else if (typeof styles === 'object') {\n        for (const prop in styles) {\n          if (hasProp(styles, prop)) {\n            elt.style[prop] = styles[prop]\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Ajoute du texte dans un élément\n * @param {HTMLElement} elt\n * @param {string} text\n */\nexport function addText (elt, text) {\n  elt.appendChild(window.document.createTextNode(text))\n}\n\n/**\n * Retourne l'élément du dom\n * @param {string} id\n * @param {boolean} [strict=true] Passer false pour retourner null plutôt que throw une erreur si id n'existe pas\n * @return {HTMLElement}\n * @throws {TypeError} Si id n'est pas une string\n * @throws {Error} Si l'élément id n'existe pas\n */\nexport function get (id, strict = true) {\n  if (typeof id !== 'string') throw TypeError('argument invalide')\n  const elt = document.getElementById(id)\n  if (!elt && strict) throw Error(`L’élément html ${id} n’existe pas`)\n  return elt\n}\n\n/**\n * Retourne un élément html de type tag (non inséré dans le dom)\n * @param {string} tag\n * @param {Object} [attrs] Les attributs\n * @param {string} [txtContent] Contenu textuel éventuel\n */\nexport function create (tag, attrs, txtContent) {\n  const elt = window.document.createElement(tag)\n  let attr\n  try {\n    if (attrs) {\n      for (attr in attrs) {\n        if (hasProp(attrs, attr)) {\n          if (attr === 'class') elt.className = attrs.class\n          else if (attr === 'className') elt.className = attrs.className\n          else if (attr === 'style') setStyles(elt, attrs.style)\n          else elt.setAttribute(attr, attrs[attr])\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (txtContent) addText(elt, txtContent)\n\n  return elt\n}\n\n/**\n * Ajoute un élément html de type tag à parent\n * @param {HTMLElement} parent\n * @param {string} tag\n * @param {Object=} attrs Les attributs\n * @param {string=} content\n * @returns {HTMLElement} L'élément ajouté\n */\nexport function addElement (parent, tag, attrs, content) {\n  const elt = create(tag, attrs, content)\n  parent.appendChild(elt)\n  return elt\n}\n","import { addElement, addText, get } from './dom'\n/**\n * Fonctions pour gérer les messages utilisateur (feedback erreur|warning ou messages positifs)\n * @module\n */\n\n/**\n * Les types possibles\n * @type {string[]}\n */\nconst types = ['info', 'warning', 'error', 'positive']\n\n/**\n * Ajoute le feedback dans container\n * @param {HTMLElement} container\n * @param {Object} feedback\n * @param {string} feedback.message\n * @param {string} [feedback.type=error]\n * @param {string} [feedback.titre]\n * @return {HTMLElement} L'élément du feedback (déjà ajouté dans le container)\n */\nexport function addFeedback (container, { message, type = 'error', titre } = {}) {\n  if (!types.includes(type)) {\n    console.error(Error(`type de message inconnu : ${type}`))\n    type = 'error'\n  }\n  if (!message) throw Error('Message obligatoire pour tout retour utilisateur')\n  const cssDiv = type === 'info' ? '' : type\n  const div = addElement(container, 'div', { className: `ui message ${cssDiv}` })\n  const cssIcon = type === 'error'\n    ? 'frown outline'\n    : (type === 'warning')\n        ? 'bullhorn'\n        : 'bell outline' // info\n  const iconClose = addElement(div, 'i', { className: 'close icon' })\n  iconClose.addEventListener('click', () => div.remove())\n  if (titre) {\n    const divTitre = addElement(div, 'div', { className: 'header' })\n    addElement(divTitre, 'i', { className: `${cssIcon} icon` })\n    addText(divTitre, titre)\n  }\n  if (/<[a-zA-Z0-9_ \"']+/.test(message)) div.innerHTML += message\n  else addText(div, message)\n  return div\n}\n\n/**\n* Affiche un message à l'utilisateur\n* @author Cédric GROLLEAU\n* @param {Object} datas\n* @param {string} datas.code codeExerciceInconnu|mg32load|scratchLoad\n* @param {string} [datas.exercice] à fournir si code vaut 'codeExerciceInconnu'\n*/\nexport function messageUtilisateur ({ code, exercice }) {\n  const container = get('containerErreur')\n  switch (code) {\n    case 'codeExerciceInconnu':\n      addFeedback(container, {\n        titre: 'le code de l’exercice n’est pas valide',\n        message: `L'identifiant ${exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n        type: 'error'\n      })\n      break\n    case 'mg32load':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module mg32',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    case 'scratchLoad':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module scratch',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    default:\n      console.error(Error(`code ${code} non géré par messageUtilisateur`))\n      addFeedback(container, {\n        titre: 'Erreur interne',\n        message: `Une erreur est survenue.<br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n  }\n}\n\n/**\n * Ajoute un feedback (erreur ou encouragement)\n * @param {Object} feedback\n * @param {string} feedback.id id du div conteneur à utiliser\n * @param {string} feedback.message Le message à afficher\n * @param {string} feedback.type error|positive\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, message = '', type = 'error' } = {}) {\n  if (!id || !message) return console.error(TypeError('arguments manquants'))\n  const container = get(id)\n  const div = addFeedback(container, { message, type })\n  div.style.width = '400px'\n}\n"],"sourceRoot":""}