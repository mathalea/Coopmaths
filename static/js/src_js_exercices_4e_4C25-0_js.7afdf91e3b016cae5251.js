/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_4e_4C25-0_js"],{

/***/ "./src/js/exercices/4e/4C25-0.js":
/*!***************************************!*\
  !*** ./src/js/exercices/4e/4C25-0.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Problemes_additifs_fractions)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\n\nconst Algebrite = __webpack_require__(/*! algebrite */ \"./node_modules/.pnpm/algebrite@1.4.0/node_modules/algebrite/dist/algebrite.js\"); //import {fraction,ListeFraction} from '../../modules/Fractions.js'\n\n\nconst titre = 'Problèmes additifs et de comparaison sur les rationnels';\n/**\n * Problèmes additifs et de comparaion sur les rationnels\n * 4C25-0\n * Mise à jour le 2021-01-30\n * @author Sébastien Lozano\n */\n\nfunction Problemes_additifs_fractions() {\n  \"use strict\";\n\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\n  this.debug = false;\n  this.sup = 1;\n\n  if (this.debug) {\n    this.nbQuestions = 5;\n  } else {\n    this.nbQuestions = 2;\n  }\n\n  this.titre = titre;\n  this.consigne = `Justifier vos réponses aux problèmes suivants.`;\n  this.nbCols = 1;\n  this.nbColsCorr = 1; //this.nbQuestionsModifiable = false;\n\n  sortieHtml ? this.spacing = 2 : this.spacing = 1.5;\n  sortieHtml ? this.spacingCorr = 3 : this.spacingCorr = 1.15;\n  let type_de_questions_disponibles;\n  /**\n  * @class ListeFraction\n  * @classdesc Classe Fraction - Méthodes utiles sur les collections de fractions\n  * @author Sébastien Lozano\n  */\n\n  function ListeFraction() {\n    //'use strict'; pas de use strict avec un paramètre du reste\n\n    /**\n     * @constant {array} denominateurs_amis tableau de tableaux de dénominateurs qui vont bien ensemble pour les calculs\n     * le tableau [12,2,3,4,6] faisait planter 4C25-0\n     */\n    //let denominateurs_amis = [[12,2,3,4,6],[16,2,4,8],[18,2,3,6,9],[20,2,4,5,10],[24,2,3,4,8,12],[30,2,3,5,6],[32,2,16,4,8],[36,2,18,4,9],[40,2,20,4,10,5,8]]\n    let denominateurs_amis = [[16, 2, 4, 8], [18, 2, 3, 6, 9], [20, 2, 4, 5, 10], [24, 2, 3, 4, 8, 12], [30, 2, 3, 5, 6], [32, 2, 16, 4, 8], [36, 2, 18, 4, 9], [40, 2, 20, 4, 10, 5, 8]];\n    /**\n     * \n     * @param  {...any} fractions contient la liste des numérateurs et denominateurs dans l'ordre n1,d1,n2,d2, ... de deux ou plus de fractions\n     * @return {array} renvoie un tableau avec les numérateurs et les dénominateurs triés selon la croissance des quotients [n_frac_min,d_frac_min,...,n_frac_max,d_frac_max]\n     * @example sortFraction(1,2,1,5,1,4,1,3) renvoie [1,5,1,4,1,3,1,2] \n     */\n\n    let sortFractions = function sortFractions(...fractions) {\n      try {\n        fractions.forEach(function (element) {\n          if (typeof element != 'number') {\n            throw new TypeError(`${element} n'est pas un nombre !`);\n          }\n\n          ;\n\n          if (fractions.indexOf(element) % 2 == 1 && element == 0) {\n            throw new RangeError(`${element} est exclu des valeurs possibles pour les dénominateurs !`);\n          }\n\n          ;\n        });\n\n        if (Math.floor(fractions.length / 2) <= 1) {\n          throw new Error(`Il faut au moins deux fractions !`);\n        }\n\n        ;\n\n        if (fractions.length % 2 != 0) {\n          throw new Error(`Il faut un nombre pair de valeurs puisque q'une fraction est représentée par son numérateur et son dénominateur`);\n        }\n\n        ;\n        let changed;\n\n        do {\n          changed = false;\n\n          for (let i = 0; i < fractions.length - 1; i += 2) {\n            if (fractions[i] / fractions[i + 1] > fractions[i + 2] / fractions[i + 3]) {\n              let tmp = [fractions[i], fractions[i + 1]];\n              fractions[i] = fractions[i + 2];\n              fractions[i + 1] = fractions[i + 3];\n              fractions[i + 2] = tmp[0];\n              fractions[i + 3] = tmp[1];\n              changed = true;\n            }\n\n            ;\n          }\n\n          ;\n        } while (changed);\n\n        return fractions;\n      } catch (e) {\n        console.log(e.message);\n      }\n\n      ;\n    };\n    /**\n     * fonction locale pour trouver le ppcm d'un nombre indeterminé d'entiers\n     * @param  {integer} n parametre du reste contenant une liste d'entiers\n     * * la liste d'entiers doit être passé dans un tableau\n     * @return {number} renvoie le ppcm des nombres entiers passés dans le paramètre du reste n\n     * @example ppcm(2,6,4,15) renvoie 60\n     */\n\n\n    function ppcm([...n]) {\n      try {\n        n.forEach(function (element) {\n          if (typeof element != 'number') {\n            throw new TypeError(`${element} n'est pas un nombre !`);\n          }\n\n          ;\n        }); // Quoi faire sans nombres ?\n\n        if (n.length == 0) {\n          throw new Error(`C'est mieux avec quelques nombres !`);\n        }\n\n        ;\n        return parseInt(Algebrite.run(`lcm(${n})`));\n      } catch (e) {\n        console.log(e.message);\n      }\n\n      ;\n    }\n\n    ;\n    /**\n     * \n     * @param  {...any} fractions contient la liste des numérateurs et des dénominateurs dans l'ordre n1,d1,n2,d2, ... de deux ou plus de fractions\n     * @return {array} renvoie un tableau de numérateurs et de dénominateurs avec le même dénominateur dans l'ordre initial.\n     * * Le dénominateur choisi est toujours le ppcm\n     * * Les fractions ne sont pas réduites\n     * @example reduceSameDenominateur(1,2,1,5,2,3) renvoie [15,30,6,30,20,30]\n     */\n\n    function reduceSameDenominateur(...fractions) {\n      try {\n        fractions.forEach(function (element) {\n          if (typeof element != 'number') {\n            throw new TypeError(`${element} n'est pas un nombre !`);\n          }\n\n          ;\n\n          if (fractions.indexOf(element) % 2 == 1 && element == 0) {\n            throw new RangeError(`${element} est exclu des valeurs possibles pour les dénominateurs !`);\n          }\n\n          ;\n        });\n\n        if (Math.floor(fractions.length / 2) <= 1) {\n          throw new Error(`Il faut au moins deux fractions !`);\n        }\n\n        ;\n\n        if (fractions.length % 2 != 0) {\n          throw new Error(`Il faut un nombre pair de valeurs puisque q'une fraction est représentée par son numérateur et son dénominateur`);\n        }\n\n        ;\n        let denominateur_commun;\n        let liste_denominateurs = [];\n\n        for (let i = 0; i < fractions.length - 1; i += 2) {\n          liste_denominateurs.push(fractions[i + 1]);\n        }\n\n        ;\n        denominateur_commun = ppcm(liste_denominateurs);\n        let fractions_reduites = [];\n\n        for (let i = 0; i < fractions.length - 1; i += 2) {\n          //on calcule le nouveau numérateur\n          fractions_reduites.push(fractions[i] * denominateur_commun / fractions[i + 1]);\n          fractions_reduites.push(denominateur_commun);\n        }\n\n        ; //return [fractions,'-',liste_denominateurs,'-',denominateur_commun,'-',fractions_reduites];\n\n        return fractions_reduites;\n      } catch (e) {\n        console.log(e.message);\n      }\n\n      ;\n    }\n\n    ;\n    this.sortFractions = sortFractions;\n    this.reduceSameDenominateur = reduceSameDenominateur;\n    this.denominateurs_amis = denominateurs_amis;\n    this.fractionSimplifiee = _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fractionSimplifiee;\n  }\n\n  ;\n\n  this.nouvelleVersion = function () {\n    if (this.debug) {\n      type_de_questions_disponibles = [1, 2, 3, 4, 5];\n    } else {\n      type_de_questions_disponibles = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([1, 2]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([3, 4, 5])];\n    } //let listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\n\n    let listeTypeDeQuestions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaisonListesSansChangerOrdre)(type_de_questions_disponibles, this.nbQuestions); // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    this.listeQuestions = []; // Liste de questions\n\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // on aura besoin des méthodes de la classe Fraction()\n      let frac = new ListeFraction(); // on récupère les dénominateurs qui vont bien\n      //let denoms_amis = frac.denominateurs_amis;\n      //C'est mieux avec ceux là, l'algo trouve plus rapidement une solution avec les contraintes à ajouter dans mathsalea_outils.js quand ça sera possible.\n\n      let denoms_amis = [[40, 2, 20, 4, 10, 5, 8], [60, 2, 30, 3, 20, 4, 15, 5, 12, 6, 10], [80, 2, 40, 4, 20, 5, 16, 8, 10]]; // on aura besoin de ranger tout ça !\n\n      let frac_rangees, frac_meme_denom_rangees; //======================================================\n      //======== \t\tAVEC 3 FRACTIONS\t\t\t  \t========\n      //======================================================\n      // le tableau d'objets contenant tout le necesssaire, fractions, énoncé, question ... pour les problème avec 3 fractions\n\n      let pb_3_f = []; // les numérateurs et dénominateurs des 3 fractions attention les deux premières doivent être inférieures à 1/2 si on veut qu'elles soient toutes positives !\n      // et on veut des fractions distinctes !\n\n      let nt1, nt2, nt3, dt1, dt2, dt3;\n      let n1, n2, n3, d1, d2, d3; // on choisit un tableau de dénominateurs qui vont bien\n\n      let denoms_cool_3 = denoms_amis[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, denoms_amis.length - 1)];\n\n      while (nt1 == nt2 || nt1 == nt3 || nt2 == nt3 || nt1 / dt1 >= 1 / 2 || nt2 / dt2 >= 1 / 2) {\n        n1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 6);\n        d1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_3);\n        n2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 10, [n1]); //on évite n1 pour pouvoir retrouver le texte de la plus grande fraction\n\n        d2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_3, [d1]);\n        n3 = d1 * d2 - n1 * d2 - n2 * d1; //la somme des trois vaut 1 !\n\n        d3 = d1 * d2;\n        nt1 = frac.fractionSimplifiee(n1, d1)[0];\n        dt1 = frac.fractionSimplifiee(n1, d1)[1];\n        nt2 = frac.fractionSimplifiee(n2, d2)[0];\n        dt2 = frac.fractionSimplifiee(n2, d2)[1];\n        nt3 = frac.fractionSimplifiee(n3, d3)[0];\n        dt3 = frac.fractionSimplifiee(n3, d3)[1];\n      } //======================================================\n      //========= indice 0 le triathlon des neiges  ==========\n      //======================================================\n\n\n      pb_3_f.push({\n        prenoms: [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomM)()],\n        fractionsSimp: [nt1, dt1, \"VTT\", nt2, dt2, \"ski de fond\", nt3, dt3, \"pied\"],\n        fractionsB: {\n          f1: [nt1, dt1],\n          cat1: \"VTT\",\n          f2: [nt2, dt2],\n          cat2: \"ski de fond\",\n          f3: [nt3, dt3],\n          cat3: \"pied\"\n        },\n        enonce: ``,\n        question: `Pour quelle discipline, la distance est-elle la plus grande ?`,\n        correction: ``\n      }); // les 3 prénomns doivent être distincts\n\n      let p1, p2, p3; // les 3 prénoms\n\n      while (p1 == p2 || p1 == p3 || p2 == p3) {\n        p1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomF)();\n        p2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomF)();\n        p3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomF)();\n      } //======================================================\n      //=========== \t\tindice 1 Miss Math\t\t ===========\n      //======================================================\n\n\n      pb_3_f.push({\n        prenoms: [],\n        fractionsSimp: [nt1, dt1, p1, nt2, dt2, p2, nt3, dt3, p3],\n        fractionsB: {\n          f1: [nt1, dt1],\n          cat1: p1,\n          f2: [nt2, dt2],\n          cat2: p2,\n          f3: [nt3, dt3],\n          cat3: p3\n        },\n        enonce: ``,\n        question: `Qui a été élue ?`,\n        correction: ``\n      });\n      let currentDate = new Date();\n      let currentAnnee = currentDate.getFullYear(); //======================================================\n      //====== énoncé indice 0 le triathlon des neiges  ======\n      //======================================================\n\n      pb_3_f[0].enonce += `Le triathlon des neiges de la vallée des loups comprend trois épreuves qui s'enchaînent : VTT, ski de fond et course à pied.`;\n      pb_3_f[0].enonce += `<br>${pb_3_f[0].prenoms[0]}, un passionné de cette épreuve, s'entraîne régulièrement sur le même circuit. `;\n      pb_3_f[0].enonce += `<br>À chaque entraînement, il parcourt le circuit de la façon suivante : $\\\\dfrac{${pb_3_f[0].fractionsB.f1[0]}}{${pb_3_f[0].fractionsB.f1[1]}}$ à ${pb_3_f[0].fractionsB.cat1}, `;\n      pb_3_f[0].enonce += `$\\\\dfrac{${pb_3_f[0].fractionsB.f2[0]}}{${pb_3_f[0].fractionsB.f2[1]}}$ à ${pb_3_f[0].fractionsB.cat2} et le reste à ${pb_3_f[0].fractionsB.cat3}.`; //======================================================\n      //=========== énoncé indice 1 Miss Math\t\t ===========\n      //======================================================\n\n      pb_3_f[1].enonce = `À l'élection de Miss Math ${currentAnnee}, ${pb_3_f[1].fractionsB.cat1} a remporté $\\\\dfrac{${pb_3_f[1].fractionsB.f1[0]}}{${pb_3_f[1].fractionsB.f1[1]}}$ des suffrages, `;\n      pb_3_f[1].enonce += `${pb_3_f[1].fractionsB.cat2} $\\\\dfrac{${pb_3_f[1].fractionsB.f2[0]}}{${pb_3_f[1].fractionsB.f2[1]}}$ et `;\n      pb_3_f[1].enonce += `${pb_3_f[1].fractionsB.cat3} tous les autres.`; //======================================================\n      //=========== \t\tCorrection Commune  \t ===========\n      //======================================================\n\n      let frac_meme_denom;\n\n      for (let _i = 0; _i < 2; _i++) {\n        pb_3_f[_i].correction = `Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>`;\n\n        if (!(dt1 == dt2)) {\n          pb_3_f[_i].correction += `Réduisons les fractions de l'énoncé au même dénominateur :  `;\n          frac_meme_denom = frac.reduceSameDenominateur(pb_3_f[_i].fractionsB.f1[0], pb_3_f[_i].fractionsB.f1[1], pb_3_f[_i].fractionsB.f2[0], pb_3_f[_i].fractionsB.f2[1], pb_3_f[_i].fractionsB.f3[0], pb_3_f[_i].fractionsB.f3[1]);\n\n          if (frac_meme_denom[1] == dt1) {\n            pb_3_f[_i].correction += `$\\\\dfrac{${pb_3_f[_i].fractionsB.f1[0]}}{${pb_3_f[_i].fractionsB.f1[1]}}$ et `;\n            pb_3_f[_i].correction += `$\\\\dfrac{${pb_3_f[_i].fractionsB.f2[0]}}{${pb_3_f[_i].fractionsB.f2[1]}} = \\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$.<br>`;\n          } else if (frac_meme_denom[1] == dt2) {\n            pb_3_f[_i].correction += `$\\\\dfrac{${pb_3_f[_i].fractionsB.f1[0]}}{${pb_3_f[_i].fractionsB.f1[1]}} = \\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ et `;\n            pb_3_f[_i].correction += `$\\\\dfrac{${pb_3_f[_i].fractionsB.f2[0]}}{${pb_3_f[_i].fractionsB.f2[1]}}$<br>`;\n          } else {\n            pb_3_f[_i].correction += `$\\\\dfrac{${pb_3_f[_i].fractionsB.f1[0]}}{${pb_3_f[_i].fractionsB.f1[1]}} = \\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ et `;\n            pb_3_f[_i].correction += `$\\\\dfrac{${pb_3_f[_i].fractionsB.f2[0]}}{${pb_3_f[_i].fractionsB.f2[1]}} = \\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$.<br>`;\n          }\n        } else {\n          frac_meme_denom = frac.reduceSameDenominateur(pb_3_f[_i].fractionsB.f1[0], pb_3_f[_i].fractionsB.f1[1], pb_3_f[_i].fractionsB.f2[0], pb_3_f[_i].fractionsB.f2[1], pb_3_f[_i].fractionsB.f3[0], pb_3_f[_i].fractionsB.f3[1]);\n          pb_3_f[_i].correction += `Les fractions de l'énoncé ont déjà le même dénominateur.`;\n        }\n      } //======================================================\n      //==== Correction indice 0 le triathlon des neiges  ====\n      //======================================================\n\n\n      pb_3_f[0].correction += `Calculons alors la distance à `; //======================================================\n      //======== \t\tCorrection indice 1 Miss Math  \t========\n      //======================================================\n\n      pb_3_f[1].correction += `Calculons d'abord la fraction des suffrages remportés par `; //======================================================\n      //=========== \t\tCorrection Commune  \t ===========\n      //======================================================\n\n      for (let _i2 = 0; _i2 < 2; _i2++) {\n        pb_3_f[_i2].correction += `${pb_3_f[_i2].fractionsB.cat3} : <br>`;\n        pb_3_f[_i2].correction += `$1-\\\\dfrac{${pb_3_f[_i2].fractionsB.f1[0]}}{${pb_3_f[_i2].fractionsB.f1[1]}}-\\\\dfrac{${pb_3_f[_i2].fractionsB.f2[0]}}{${pb_3_f[_i2].fractionsB.f2[1]}} = `;\n        pb_3_f[_i2].correction += `\\\\dfrac{${frac_meme_denom[1]}}{${frac_meme_denom[1]}}-\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}-\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}} = `;\n        pb_3_f[_i2].correction += `\\\\dfrac{${frac_meme_denom[1]}-${frac_meme_denom[0]}-${frac_meme_denom[2]}}{${frac_meme_denom[3]}} = `;\n        pb_3_f[_i2].correction += `\\\\dfrac{${frac_meme_denom[1] - frac_meme_denom[0] - frac_meme_denom[2]}}{${frac_meme_denom[1]}}`;\n\n        if (!(frac_meme_denom[1] == pb_3_f[0].fractionsB.f3[1])) {\n          pb_3_f[_i2].correction += ` = \\\\dfrac{${pb_3_f[_i2].fractionsB.f3[0]}}{${pb_3_f[_i2].fractionsB.f3[1]}}$`;\n        } else {\n          pb_3_f[_i2].correction += `$`;\n        }\n      } //======================================================\n      //==== Conclusion indice 0 le triathlon des neiges  ====\n      //======================================================\n\n\n      pb_3_f[0].correction += `<br>${pb_3_f[0].prenoms[0]} fait donc $\\\\dfrac{${pb_3_f[0].fractionsB.f1[0]}}{${pb_3_f[0].fractionsB.f1[1]}}$ à ${pb_3_f[0].fractionsB.cat1}, `;\n      pb_3_f[0].correction += `$\\\\dfrac{${pb_3_f[0].fractionsB.f2[0]}}{${pb_3_f[0].fractionsB.f2[1]}}$ à ${pb_3_f[0].fractionsB.cat2} et `;\n      pb_3_f[0].correction += `$\\\\dfrac{${pb_3_f[0].fractionsB.f3[0]}}{${pb_3_f[0].fractionsB.f3[1]}}$ à ${pb_3_f[0].fractionsB.cat3}.`;\n      pb_3_f[0].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_3_f[0].correction += `${pb_3_f[0].prenoms[0]} fait donc $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ à ${pb_3_f[0].fractionsB.cat1}, `;\n      pb_3_f[0].correction += `$\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ à ${pb_3_f[0].fractionsB.cat2} et `;\n      pb_3_f[0].correction += `$\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$ à ${pb_3_f[0].fractionsB.cat3}.`; //let frac_rangees,frac_meme_denom_rangees;\n\n      if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt1 / dt1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt2 / dt2) && (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt1 / dt1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt3 / dt3)) {\n        pb_3_f[0].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(`Les trois fractions sont équivalentes, ${pb_3_f[0].prenoms[0]} parcours donc la même distance dans les trois disciplines.`)}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(frac_meme_denom[0], frac_meme_denom[1], frac_meme_denom[2], frac_meme_denom[3], frac_meme_denom[4], frac_meme_denom[5]);\n        pb_3_f[0].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$.`;\n        frac_rangees = frac.sortFractions(pb_3_f[0].fractionsB.f1[0], pb_3_f[0].fractionsB.f1[1], pb_3_f[0].fractionsB.f2[0], pb_3_f[0].fractionsB.f2[1], pb_3_f[0].fractionsB.f3[0], pb_3_f[0].fractionsB.f3[1]);\n        pb_3_f[0].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$.`;\n        pb_3_f[0].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(`C'est donc à ${pb_3_f[0].fractionsSimp[pb_3_f[0].fractionsSimp.indexOf(frac_rangees[4]) + 2]} que ${pb_3_f[0].prenoms[0]} fait la plus grande distance.`)}`;\n      } //======================================================\n      //======== \t\tConclusion indice 1 Miss Math  \t========\n      //======================================================\n\n\n      pb_3_f[1].correction += `<br>${pb_3_f[1].fractionsB.cat1} a donc remporté $\\\\dfrac{${pb_3_f[1].fractionsB.f1[0]}}{${pb_3_f[1].fractionsB.f1[1]}}$, `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat2} a remporté $\\\\dfrac{${pb_3_f[1].fractionsB.f2[0]}}{${pb_3_f[1].fractionsB.f2[1]}}$ et `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat3} $\\\\dfrac{${pb_3_f[1].fractionsB.f3[0]}}{${pb_3_f[1].fractionsB.f3[1]}}$.`;\n      pb_3_f[1].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat1} remporte donc $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$, `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat2} $\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ et `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat3} $\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$.`;\n\n      if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt1 / dt1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt2 / dt2) && (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt1 / dt1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt3 / dt3)) {\n        pb_3_f[1].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(`Les trois fractions sont équivalentes, les trois candidates ont donc remporté le même nombre de suffrages.`)}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(frac_meme_denom[0], frac_meme_denom[1], frac_meme_denom[2], frac_meme_denom[3], frac_meme_denom[4], frac_meme_denom[5]);\n        pb_3_f[1].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$.`;\n        frac_rangees = frac.sortFractions(pb_3_f[1].fractionsB.f1[0], pb_3_f[1].fractionsB.f1[1], pb_3_f[1].fractionsB.f2[0], pb_3_f[1].fractionsB.f2[1], pb_3_f[1].fractionsB.f3[0], pb_3_f[1].fractionsB.f3[1]);\n        pb_3_f[1].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$.`;\n        pb_3_f[1].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(`C'est donc ${pb_3_f[1].fractionsSimp[pb_3_f[1].fractionsSimp.indexOf(frac_rangees[4]) + 2]} qui a été élue.`)}`;\n      } //======================================================\n      //======== \t\tAVEC 4 FRACTIONS\t\t\t  \t========\n      //======================================================\n      // le tableau d'objets contenant tout le necesssaire, fractions, énoncé, question ... pour les problème avec 4 fractions\n\n\n      let pb_4_f = []; // les numérateurs et dénominateurs des 4 fractions attention les trois premières doivent être inférieures à 1/3 si on veut qu'elles soient toutes positives !\n      // et on veut des fractions distinctes\n\n      let nq1, nq2, nq3, nq4, dq1, dq2, dq3, dq4;\n      let n4, d4; // en plus parce qu'il y a 4 fractions\n      // on choisit un tableau de dénominateurs qui vont bien\n\n      let denoms_cool_4 = denoms_amis[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, denoms_amis.length - 1)];\n\n      while (nq1 == nq2 || nq1 == nq3 || nq1 == nq4 || nq2 == nq3 || nq2 == nq4 || nq3 == nq4 || nq1 / dq1 >= 1 / 3 || nq2 / dq2 >= 1 / 3 || nq3 / dq3 >= 1 / 3) {\n        n1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 5);\n        d1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_4);\n        n2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 11, [n1]); //on évite n1 pour pouvoir retrouver le texte de la plus grande fraction\n\n        d2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_4);\n        n3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 17, [n1, n2]); //on évite n1 et n2 pour pouvoir retrouver le texte de la plus grande fraction\n\n        d3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_4);\n        n4 = d1 * d2 * d3 - n1 * d2 * d3 - n2 * d1 * d3 - n3 * d1 * d2; //la somme des quatre vaut 1 !\n\n        d4 = d1 * d2 * d3;\n        nq1 = frac.fractionSimplifiee(n1, d1)[0];\n        dq1 = frac.fractionSimplifiee(n1, d1)[1];\n        nq2 = frac.fractionSimplifiee(n2, d2)[0];\n        dq2 = frac.fractionSimplifiee(n2, d2)[1];\n        nq3 = frac.fractionSimplifiee(n3, d3)[0];\n        dq3 = frac.fractionSimplifiee(n3, d3)[1];\n        nq4 = frac.fractionSimplifiee(n4, d4)[0];\n        dq4 = frac.fractionSimplifiee(n4, d4)[1];\n      } //======================================================\n      //=========== \t\tindice 0 le mandala\t\t ===========\n      //======================================================\n\n\n      pb_4_f.push({\n        //\n        prenoms: [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenom)()],\n        fractionsSimp: [nq1, dq1, \"carmin\", nq2, dq2, \"ocre jaune\", nq3, dq3, \"turquoise\", nq4, dq4, \"pourpre\"],\n        fractionsB: {\n          f1: [nq1, dq1],\n          cat1: \"carmin\",\n          f2: [nq2, dq2],\n          cat2: \"ocre jaune\",\n          f3: [nq3, dq3],\n          cat3: \"turquoise\",\n          f4: [nq4, dq4],\n          cat4: \"pourpre\"\n        },\n        enonce: ``,\n        question: `Quelle est elle la couleur qui recouvre le plus de surface ?`,\n        correction: ``\n      }); //======================================================\n      //===========\t\tindice 1 le jardin\t \t ===========\n      //======================================================\n\n      pb_4_f.push({\n        // indice 1 le jardin\n        prenoms: [],\n        fractionsSimp: [nq1, dq1, \"la culture des légumes\", nq2, dq2, \"la culture des plantes aromatiques\", nq3, dq3, \"une serre servant aux semis\", nq4, dq4, \"la culture des fraisiers\"],\n        fractionsB: {\n          f1: [nq1, dq1],\n          cat1: \"la culture des légumes\",\n          f2: [nq2, dq2],\n          cat2: \"la culture des plantes aromatiques\",\n          f3: [nq3, dq3],\n          cat3: \"une serre servant aux semis\",\n          f4: [nq4, dq4],\n          cat4: \"la culture des fraisiers\"\n        },\n        enonce: ``,\n        question: `Quelle est la culture qui occupe le plus de surface ?`,\n        correction: ``\n      }); //======================================================\n      //===========\tindice 2 le stade\t\t \t ===========\n      //======================================================\n\n      pb_4_f.push({\n        // indice 2 le stade\n        prenoms: [],\n        fractionsSimp: [nq1, dq1, \"le pays organisateur\", nq2, dq2, \"l'ensemble des supporters des deux équipes en jeu\", nq3, dq3, \"les sponsors et officiels\", nq4, dq4, \"les places en vente libre\"],\n        fractionsB: {\n          f1: [nq1, dq1],\n          cat1: \"le pays organisateur\",\n          f2: [nq2, dq2],\n          cat2: \"l'ensemble des supporters des deux équipes en jeu\",\n          f3: [nq3, dq3],\n          cat3: \"les sponsors et officiels\",\n          f4: [nq4, dq4],\n          cat4: \"les places en vente libre\"\n        },\n        enonce: ``,\n        question: `Quelle est la catégorie la plus importante dans le stade ?`,\n        correction: ``\n      }); //======================================================\n      //===========\ténoncé indice 0 le mandala \t ===========\n      //======================================================\n\n      pb_4_f[0].enonce = `${pb_4_f[0].prenoms[0]} colorie un mandala selon les proportions suivantes :  $\\\\dfrac{${pb_4_f[0].fractionsB.f1[0]}}{${pb_4_f[0].fractionsB.f1[1]}}$ en ${pb_4_f[0].fractionsB.cat1}, `;\n      pb_4_f[0].enonce += `$\\\\dfrac{${pb_4_f[0].fractionsB.f2[0]}}{${pb_4_f[0].fractionsB.f2[1]}}$ en  ${pb_4_f[0].fractionsB.cat2}, `;\n      pb_4_f[0].enonce += `$\\\\dfrac{${pb_4_f[0].fractionsB.f3[0]}}{${pb_4_f[0].fractionsB.f3[1]}}$ en  ${pb_4_f[0].fractionsB.cat3} et `;\n      pb_4_f[0].enonce += `le reste en ${pb_4_f[0].fractionsB.cat4}.`; //======================================================\n      //===========\ténoncé indice 1 le jardin \t ===========\n      //======================================================\n\n      pb_4_f[1].enonce = `Un jardin est aménagé selon les proportions suivantes :  $\\\\dfrac{${pb_4_f[1].fractionsB.f1[0]}}{${pb_4_f[1].fractionsB.f1[1]}}$ par ${pb_4_f[1].fractionsB.cat1}, `;\n      pb_4_f[1].enonce += `$\\\\dfrac{${pb_4_f[1].fractionsB.f2[0]}}{${pb_4_f[1].fractionsB.f2[1]}}$ par  ${pb_4_f[1].fractionsB.cat2}, `;\n      pb_4_f[1].enonce += `$\\\\dfrac{${pb_4_f[1].fractionsB.f3[0]}}{${pb_4_f[1].fractionsB.f3[1]}}$ par  ${pb_4_f[1].fractionsB.cat3} et `;\n      pb_4_f[1].enonce += `le reste par ${pb_4_f[1].fractionsB.cat4}.`; //======================================================\n      //===========\ténoncé indice 2 le stade \t ===========\n      //======================================================\n\n      pb_4_f[2].enonce = `Pour chaque match, les places du stade sont mises en vente dans les proportions suivantes :  $\\\\dfrac{${pb_4_f[2].fractionsB.f1[0]}}{${pb_4_f[2].fractionsB.f1[1]}}$ pour ${pb_4_f[2].fractionsB.cat1}, `;\n      pb_4_f[2].enonce += `$\\\\dfrac{${pb_4_f[2].fractionsB.f2[0]}}{${pb_4_f[2].fractionsB.f2[1]}}$ pour  ${pb_4_f[2].fractionsB.cat2}, `;\n      pb_4_f[2].enonce += `$\\\\dfrac{${pb_4_f[2].fractionsB.f3[0]}}{${pb_4_f[2].fractionsB.f3[1]}}$ pour  ${pb_4_f[2].fractionsB.cat3} et `;\n      pb_4_f[2].enonce += `le reste pour ${pb_4_f[2].fractionsB.cat4}.`; //======================================================\n      //=========== \t\tCorrection Commune  \t ===========\n      //======================================================\n      //let frac_meme_denom;\n\n      for (let _i3 = 0; _i3 < 3; _i3++) {\n        pb_4_f[_i3].correction = `Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>`;\n\n        if (!(dq1 == dq2 && dq1 == dq3)) {\n          //pb_4_f[i].correction += `${!(dq1 == dq2 && dq1 == dq3)} - ${dq1} - ${dq2} - ${dq3} - Réduisons les fractions de l'énoncé au même dénominateur :  `;\n          pb_4_f[_i3].correction += `Réduisons les fractions de l'énoncé au même dénominateur :  `;\n          frac_meme_denom = frac.reduceSameDenominateur(pb_4_f[_i3].fractionsB.f1[0], pb_4_f[_i3].fractionsB.f1[1], pb_4_f[_i3].fractionsB.f2[0], pb_4_f[_i3].fractionsB.f2[1], pb_4_f[_i3].fractionsB.f3[0], pb_4_f[_i3].fractionsB.f3[1], pb_4_f[_i3].fractionsB.f4[0], pb_4_f[_i3].fractionsB.f4[1]);\n\n          if (frac_meme_denom[1] == dq1) {\n            pb_4_f[_i3].correction += `$\\\\dfrac{${pb_4_f[_i3].fractionsB.f1[0]}}{${pb_4_f[_i3].fractionsB.f1[1]}}$, `;\n          } else {\n            pb_4_f[_i3].correction += `$\\\\dfrac{${pb_4_f[_i3].fractionsB.f1[0]}}{${pb_4_f[_i3].fractionsB.f1[1]}} = \\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$, `;\n          }\n\n          if (frac_meme_denom[1] == dq2) {\n            pb_4_f[_i3].correction += `$\\\\dfrac{${pb_4_f[_i3].fractionsB.f2[0]}}{${pb_4_f[_i3].fractionsB.f2[1]}}$ et `;\n          } else {\n            pb_4_f[_i3].correction += `$\\\\dfrac{${pb_4_f[_i3].fractionsB.f2[0]}}{${pb_4_f[_i3].fractionsB.f2[1]}} = \\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ et `;\n          }\n\n          if (frac_meme_denom[1] == dq3) {\n            pb_4_f[_i3].correction += `$\\\\dfrac{${pb_4_f[_i3].fractionsB.f3[0]}}{${pb_4_f[_i3].fractionsB.f3[1]}}$.<br>`;\n          } else {\n            pb_4_f[_i3].correction += `$\\\\dfrac{${pb_4_f[_i3].fractionsB.f3[0]}}{${pb_4_f[_i3].fractionsB.f3[1]}} = \\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$.<br>`;\n          }\n        } else {\n          frac_meme_denom = frac.reduceSameDenominateur(pb_4_f[_i3].fractionsB.f1[0], pb_4_f[_i3].fractionsB.f1[1], pb_4_f[_i3].fractionsB.f2[0], pb_4_f[_i3].fractionsB.f2[1], pb_4_f[_i3].fractionsB.f3[0], pb_4_f[_i3].fractionsB.f3[1], pb_4_f[_i3].fractionsB.f4[0], pb_4_f[_i3].fractionsB.f4[1]);\n          pb_4_f[_i3].correction += `Les fractions de l'énoncé ont déjà le même dénominateur : `;\n          pb_4_f[_i3].correction += `$\\\\dfrac{${pb_4_f[_i3].fractionsB.f1[0]}}{${pb_4_f[_i3].fractionsB.f1[1]}}$, $\\\\dfrac{${pb_4_f[_i3].fractionsB.f2[0]}}{${pb_4_f[_i3].fractionsB.f2[1]}}$ et $\\\\dfrac{${pb_4_f[_i3].fractionsB.f3[0]}}{${pb_4_f[_i3].fractionsB.f3[1]}}$.<br>`;\n        }\n      } //======================================================\n      //===========\tCorrection indice 0 le mandala==========\n      //======================================================\n\n\n      pb_4_f[0].correction += `Calculons alors la fraction du mandala recouverte en `; //======================================================\n      //===========\tCorrection indice 1 le jardin===========\n      //======================================================\n\n      pb_4_f[1].correction += `Calculons d'abord la fraction du jardin occupée par `; //======================================================\n      //===========\ténoncé indice 2 le stade \t ===========\n      //======================================================\n\n      pb_4_f[2].correction += `Calculons d'abord la fraction du stade occupée par `; //======================================================\n      //=========== \t\tCorrection Commune  \t ===========\n      //======================================================\n\n      for (let _i4 = 0; _i4 < 3; _i4++) {\n        pb_4_f[_i4].correction += `${pb_4_f[_i4].fractionsB.cat3} : <br>`;\n        pb_4_f[_i4].correction += `$1-\\\\dfrac{${pb_4_f[_i4].fractionsB.f1[0]}}{${pb_4_f[_i4].fractionsB.f1[1]}}-\\\\dfrac{${pb_4_f[_i4].fractionsB.f2[0]}}{${pb_4_f[_i4].fractionsB.f2[1]}}-\\\\dfrac{${pb_4_f[_i4].fractionsB.f3[0]}}{${pb_4_f[_i4].fractionsB.f3[1]}} = `;\n        pb_4_f[_i4].correction += `\\\\dfrac{${frac_meme_denom[1]}}{${frac_meme_denom[1]}}-\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}-\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}-\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}} = `;\n        pb_4_f[_i4].correction += `\\\\dfrac{${frac_meme_denom[1]}-${frac_meme_denom[0]}-${frac_meme_denom[2]}-${frac_meme_denom[4]}}{${frac_meme_denom[1]}} = `;\n        pb_4_f[_i4].correction += `\\\\dfrac{${frac_meme_denom[1] - frac_meme_denom[0] - frac_meme_denom[2] - frac_meme_denom[4]}}{${frac_meme_denom[1]}}`;\n\n        if (!(frac_meme_denom[1] == pb_4_f[0].fractionsB.f4[1])) {\n          pb_4_f[_i4].correction += ` = \\\\dfrac{${pb_4_f[_i4].fractionsB.f4[0]}}{${pb_4_f[_i4].fractionsB.f4[1]}}$`;\n        } else {\n          pb_4_f[_i4].correction += `$`;\n        }\n      } //======================================================\n      //=========== Conclusion indice 0 le mandala ===========\n      //======================================================\n\n\n      pb_4_f[0].correction += `<br>Le mandala est donc colorié de la façon suivante : $\\\\dfrac{${pb_4_f[0].fractionsB.f1[0]}}{${pb_4_f[0].fractionsB.f1[1]}}$ en ${pb_4_f[0].fractionsB.cat1}, `;\n      pb_4_f[0].correction += `$\\\\dfrac{${pb_4_f[0].fractionsB.f2[0]}}{${pb_4_f[0].fractionsB.f2[1]}}$ en ${pb_4_f[0].fractionsB.cat2}, `;\n      pb_4_f[0].correction += `$\\\\dfrac{${pb_4_f[0].fractionsB.f3[0]}}{${pb_4_f[0].fractionsB.f3[1]}}$ en ${pb_4_f[0].fractionsB.cat3} et `;\n      pb_4_f[0].correction += `$\\\\dfrac{${pb_4_f[0].fractionsB.f4[0]}}{${pb_4_f[0].fractionsB.f4[1]}}$ en ${pb_4_f[0].fractionsB.cat4}.`;\n      pb_4_f[0].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_4_f[0].correction += `le mandala est donc colorié de la façon suivante : $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ en ${pb_4_f[0].fractionsB.cat1}, `;\n      pb_4_f[0].correction += `$\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ en ${pb_4_f[0].fractionsB.cat2}, `;\n      pb_4_f[0].correction += `$\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$ en ${pb_4_f[0].fractionsB.cat3} et `;\n      pb_4_f[0].correction += `$\\\\dfrac{${frac_meme_denom[6]}}{${frac_meme_denom[7]}}$ en ${pb_4_f[0].fractionsB.cat4}.`; //let frac_rangees,frac_meme_denom_rangees;\n\n      if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq2 / dq2) && (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq3 / dq3) && (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq4 / dq4)) {\n        pb_4_f[0].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(`Les quatre fractions sont équivalentes, ${pb_4_f[0].prenoms[0]} colorie donc la même surface avec les quatre couleurs.`)}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(frac_meme_denom[0], frac_meme_denom[1], frac_meme_denom[2], frac_meme_denom[3], frac_meme_denom[4], frac_meme_denom[5], frac_meme_denom[6], frac_meme_denom[7]);\n        pb_4_f[0].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$, $\\\\dfrac{${frac_meme_denom_rangees[6]}}{${frac_meme_denom_rangees[7]}}$.`;\n        frac_rangees = frac.sortFractions(pb_4_f[0].fractionsB.f1[0], pb_4_f[0].fractionsB.f1[1], pb_4_f[0].fractionsB.f2[0], pb_4_f[0].fractionsB.f2[1], pb_4_f[0].fractionsB.f3[0], pb_4_f[0].fractionsB.f3[1], pb_4_f[0].fractionsB.f4[0], pb_4_f[0].fractionsB.f4[1]);\n        pb_4_f[0].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$, $\\\\dfrac{${frac_rangees[6]}}{${frac_rangees[7]}}$.`;\n        pb_4_f[0].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(`C'est donc en ${pb_4_f[0].fractionsSimp[pb_4_f[0].fractionsSimp.indexOf(frac_rangees[6]) + 2]} que le mandala est le plus recouvert.`)}`;\n      } //======================================================\n      //=========== Conclusion indice 1 le jardin\t ===========\n      //======================================================\n\n\n      pb_4_f[1].correction += `<br>Le jardin est donc occupé de la façon suivante : $\\\\dfrac{${pb_4_f[1].fractionsB.f1[0]}}{${pb_4_f[1].fractionsB.f1[1]}}$ par ${pb_4_f[1].fractionsB.cat1}, `;\n      pb_4_f[1].correction += `$\\\\dfrac{${pb_4_f[1].fractionsB.f2[0]}}{${pb_4_f[1].fractionsB.f2[1]}}$ par ${pb_4_f[1].fractionsB.cat2}, `;\n      pb_4_f[1].correction += `$\\\\dfrac{${pb_4_f[1].fractionsB.f3[0]}}{${pb_4_f[1].fractionsB.f3[1]}}$ par ${pb_4_f[1].fractionsB.cat3} et `;\n      pb_4_f[1].correction += `$\\\\dfrac{${pb_4_f[1].fractionsB.f4[0]}}{${pb_4_f[1].fractionsB.f4[1]}}$ par ${pb_4_f[1].fractionsB.cat4}.`;\n      pb_4_f[1].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_4_f[1].correction += `le jardin est donc occupé de la façon suivante : $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ par ${pb_4_f[1].fractionsB.cat1}, `;\n      pb_4_f[1].correction += `$\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ par ${pb_4_f[1].fractionsB.cat2}, `;\n      pb_4_f[1].correction += `$\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$ par ${pb_4_f[1].fractionsB.cat3} et `;\n      pb_4_f[1].correction += `$\\\\dfrac{${frac_meme_denom[6]}}{${frac_meme_denom[7]}}$ par ${pb_4_f[1].fractionsB.cat4}.`; //let frac_rangees,frac_meme_denom_rangees;\n\n      if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq2 / dq2) && (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq3 / dq3) && (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq4 / dq4)) {\n        pb_4_f[1].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(`Les quatre fractions sont équivalentes, la même surface du jardin est donc occupée par les quatre cultures.`)}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(frac_meme_denom[0], frac_meme_denom[1], frac_meme_denom[2], frac_meme_denom[3], frac_meme_denom[4], frac_meme_denom[5], frac_meme_denom[6], frac_meme_denom[7]);\n        pb_4_f[1].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$, $\\\\dfrac{${frac_meme_denom_rangees[6]}}{${frac_meme_denom_rangees[7]}}$.`;\n        frac_rangees = frac.sortFractions(pb_4_f[1].fractionsB.f1[0], pb_4_f[1].fractionsB.f1[1], pb_4_f[1].fractionsB.f2[0], pb_4_f[1].fractionsB.f2[1], pb_4_f[1].fractionsB.f3[0], pb_4_f[1].fractionsB.f3[1], pb_4_f[1].fractionsB.f4[0], pb_4_f[1].fractionsB.f4[1]);\n        pb_4_f[1].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$, $\\\\dfrac{${frac_rangees[6]}}{${frac_rangees[7]}}$.`;\n        pb_4_f[1].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(`C'est donc par ${pb_4_f[1].fractionsSimp[pb_4_f[1].fractionsSimp.indexOf(frac_rangees[6]) + 2]} que le jardin est le plus occupé.`)}`;\n      } //======================================================\n      //=========== Conclusion indice 2 le stade\t ===========\n      //======================================================\n\n\n      pb_4_f[2].correction += `<br>Le stade est donc occupé de la façon suivante : $\\\\dfrac{${pb_4_f[2].fractionsB.f1[0]}}{${pb_4_f[2].fractionsB.f1[1]}}$ pour ${pb_4_f[2].fractionsB.cat1}, `;\n      pb_4_f[2].correction += `$\\\\dfrac{${pb_4_f[2].fractionsB.f2[0]}}{${pb_4_f[2].fractionsB.f2[1]}}$ pour ${pb_4_f[2].fractionsB.cat2}, `;\n      pb_4_f[2].correction += `$\\\\dfrac{${pb_4_f[2].fractionsB.f3[0]}}{${pb_4_f[2].fractionsB.f3[1]}}$ pour ${pb_4_f[2].fractionsB.cat3} et `;\n      pb_4_f[2].correction += `$\\\\dfrac{${pb_4_f[2].fractionsB.f4[0]}}{${pb_4_f[2].fractionsB.f4[1]}}$ pour ${pb_4_f[2].fractionsB.cat4}.`;\n      pb_4_f[2].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_4_f[2].correction += `le stade est donc occupé de la façon suivante : $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ pour ${pb_4_f[2].fractionsB.cat1}, `;\n      pb_4_f[2].correction += `$\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ pour ${pb_4_f[2].fractionsB.cat2}, `;\n      pb_4_f[2].correction += `$\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$ pour ${pb_4_f[2].fractionsB.cat3} et `;\n      pb_4_f[2].correction += `$\\\\dfrac{${frac_meme_denom[6]}}{${frac_meme_denom[7]}}$ pour ${pb_4_f[2].fractionsB.cat4}.`; //let frac_rangees,frac_meme_denom_rangees;\n\n      if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq2 / dq2) && (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq3 / dq3) && (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq4 / dq4)) {\n        pb_4_f[2].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(`Les quatre fractions sont équivalentes, chaque catégorie a donc la même importance dans le stade.`)}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(frac_meme_denom[0], frac_meme_denom[1], frac_meme_denom[2], frac_meme_denom[3], frac_meme_denom[4], frac_meme_denom[5], frac_meme_denom[6], frac_meme_denom[7]);\n        pb_4_f[2].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$, $\\\\dfrac{${frac_meme_denom_rangees[6]}}{${frac_meme_denom_rangees[7]}}$.`;\n        frac_rangees = frac.sortFractions(pb_4_f[2].fractionsB.f1[0], pb_4_f[2].fractionsB.f1[1], pb_4_f[2].fractionsB.f2[0], pb_4_f[2].fractionsB.f2[1], pb_4_f[2].fractionsB.f3[0], pb_4_f[2].fractionsB.f3[1], pb_4_f[2].fractionsB.f4[0], pb_4_f[2].fractionsB.f4[1]);\n        pb_4_f[2].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$, $\\\\dfrac{${frac_rangees[6]}}{${frac_rangees[7]}}$.`;\n        pb_4_f[2].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(`C'est donc pour ${pb_4_f[2].fractionsSimp[pb_4_f[2].fractionsSimp.indexOf(frac_rangees[6]) + 2]} que le nombre de places est le plus important.`)}`;\n      }\n\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          // Triathlon des neiges --> VTT, ski de fond, course\n          texte = `${pb_3_f[0].enonce} <br> ${pb_3_f[0].question}`;\n\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_3_f[0].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${pb_3_f[0].correction}`;\n          }\n\n          break;\n\n        case 2:\n          //Miss Math --> Noémie, Samia, Alexia\n          texte = `${pb_3_f[1].enonce} <br> ${pb_3_f[1].question}`;\n\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_3_f[1].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${pb_3_f[1].correction}`;\n          }\n\n          break;\n\n        case 3:\n          // Mandala --> carmin, ocre jaune, turquoise, pourpre\n          texte = `${pb_4_f[0].enonce} <br> ${pb_4_f[0].question}`;\n\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_4_f[0].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${pb_4_f[0].correction}`;\n          }\n\n          break;\n\n        case 4:\n          // Jardin --> légumes, plantes aromatiques, semis, fraisiers\n          texte = `${pb_4_f[1].enonce} <br> ${pb_4_f[1].question}`;\n\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_4_f[1].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${pb_4_f[1].correction}`;\n          }\n\n          break;\n\n        case 5:\n          // Stade --> pays organisatuers, supporters, sponsors, vente libre\n          texte = `${pb_4_f[2].enonce} <br> ${pb_4_f[2].question}`;\n\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_4_f[2].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${pb_4_f[2].correction}`;\n          }\n\n          break;\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n\n      cpt++;\n    }\n\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeQuestionsToContenu)(this);\n  }; //this.besoinFormulaireNumerique = ['Niveau de difficulté',4,\"1 : nombre enier positif\\n2 : nombre décimal positif\\n3 : nombre enier positif inférieur à un\\n4 : Mélange\"];\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/exercices/4e/4C25-0.js\n");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice() {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigneCorrection = '';\n  this.listeQuestions = [];\n  this.listeCorrections = [];\n  this.introduction = '';\n  this.contenu = '';\n  this.contenuCorrection = '';\n  this.nbQuestions = 10;\n  this.nbCols = 2;\n  this.nbColsCorr = 2;\n  this.spacing = 1;\n  this.spacingCorr = 1;\n  this.beamer = false;\n  this.besoinFormulaireNumerique = false; // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n\n  this.besoinFormulaireTexte = false; // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n\n  this.besoinFormulaireCaseACocher = false; // Sinon this.besoinFormulaireCaseACocher = [texte];\n\n  this.consigneModifiable = true;\n  this.nbQuestionsModifiable = true;\n  this.nbColsModifiable = true;\n  this.nbColsCorrModifiable = true;\n  this.spacingModifiable = true;\n  this.spacingCorrModifiable = true;\n  this.correctionDetailleeDisponible = false;\n  this.correctionDetaillee = true;\n  this.video = '';\n  this.boutonAide = false;\n  this.tailleDiaporama = 50; // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  this.pasDeVersionLatex = false;\n  this.qcm = false; // Pour les exercices de type QCM : contient un tableau.\n\n  this.qcmDisponible = false; // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n\n  this.modeQcm = false; // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false; // pas d'interface par défaut pour les figures MG32\n\n  this.nouvelleVersion = function (numeroExercice) {};\n\n  this.listePackages = []; // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWF0aGFsZWEvLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzP2RiNDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogIENsYXNzZSBwYXJlbnRlIGRlIHRvdXMgbGVzIGV4ZXJjaWNlc1xuICpcbiAqIEBBdXRldXIgUsOpbWkgQW5nb3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRXhlcmNpY2UgKCkge1xuICAvLyBDbGFzc2UgcGFyZW50ZSBkZSB0b3VzIGxlcyBleGVyY2ljZXMgcXVpIHNlcm9udCBjcsOpw6lzXG4gIHRoaXMudGl0cmUgPSAnJ1xuICB0aGlzLmNvbnNpZ25lID0gJydcbiAgdGhpcy5jb25zaWduZUNvcnJlY3Rpb24gPSAnJ1xuICB0aGlzLmxpc3RlUXVlc3Rpb25zID0gW11cbiAgdGhpcy5saXN0ZUNvcnJlY3Rpb25zID0gW11cbiAgdGhpcy5pbnRyb2R1Y3Rpb24gPSAnJ1xuICB0aGlzLmNvbnRlbnUgPSAnJ1xuICB0aGlzLmNvbnRlbnVDb3JyZWN0aW9uID0gJydcbiAgdGhpcy5uYlF1ZXN0aW9ucyA9IDEwXG4gIHRoaXMubmJDb2xzID0gMlxuICB0aGlzLm5iQ29sc0NvcnIgPSAyXG4gIHRoaXMuc3BhY2luZyA9IDFcbiAgdGhpcy5zcGFjaW5nQ29yciA9IDFcbiAgdGhpcy5iZWFtZXIgPSBmYWxzZVxuXG4gIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IGZhbHNlIC8vIFNpbm9uIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IFt0ZXh0ZSxtYXgsdG9vbHRpcCBmYWN1bHRhdGlmXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlVGV4dGUgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVUZXh0ZSA9IFt0ZXh0ZSx0b29sdGlwXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlQ2FzZUFDb2NoZXIgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVDYXNlQUNvY2hlciA9IFt0ZXh0ZV07XG4gIHRoaXMuY29uc2lnbmVNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iUXVlc3Rpb25zTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5uYkNvbHNNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iQ29sc0NvcnJNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdDb3JyTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5jb3JyZWN0aW9uRGV0YWlsbGVlRGlzcG9uaWJsZSA9IGZhbHNlXG4gIHRoaXMuY29ycmVjdGlvbkRldGFpbGxlZSA9IHRydWVcbiAgdGhpcy52aWRlbyA9ICcnXG4gIHRoaXMuYm91dG9uQWlkZSA9IGZhbHNlXG4gIHRoaXMudGFpbGxlRGlhcG9yYW1hID0gNTAgLy8gVGFpbGxlIGVuIHBpeGVscyBwb3VyIGxlIGNhbGN1bCBjaHJvbm9tw6l0csOpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsVGV4dGVDb3VydChudW1lcm9FeGVyY2ljZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFRleHRlTG9uZyhudW1lcm9FeGVyY2ljZSx0aXRyZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFlvdXR1YmUobnVtZXJvRXhlcmNpY2UsaWRfeW91dHViZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlIC0gVmlkw6lvXCIsaWNvbmU9XCJ5b3V0dWJlXCIpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsUGRmKG51bWVyb0V4ZXJjaWNlLHVybF9wZGYsdGV4dGU9XCJBaWRlXCIsbGFiZWxfYm91dG9uPVwiQWlkZSAtIFBERlwiLGljb25lPVwiZmlsZSBwZGZcIilcbiAgLy8gdGhpcy52c3BhY2UgPSAtMSAvL0Fqb3V0ZSB1biBcXHZzcGFjZXstMWNtfSBhdmFudCBsJ8Opbm9uY8OpIGNlIHF1aSBwZXV0IMOqdHJlIHByYXRpcXVlIHBvdXIgZGVzIGV4ZXJjaWNlcyBhdmVjIGRlcyBmaWd1cmVzLlxuICB0aGlzLnBhc0RlVmVyc2lvbkxhdGV4ID0gZmFsc2VcbiAgdGhpcy5xY20gPSBmYWxzZSAvLyBQb3VyIGxlcyBleGVyY2ljZXMgZGUgdHlwZSBRQ00gOiBjb250aWVudCB1biB0YWJsZWF1LlxuICB0aGlzLnFjbURpc3BvbmlibGUgPSBmYWxzZSAvLyBQb3VyIGFqb3V0ZXIgdW5lIGNhc2Ugw6AgY29jaGVyIE1vZGUgUUNNIHF1aSBwZXJtZXQgZGUgY2hhbmdlciBsZSBzdGF0dXQgZGUgdGhpcy5tb2RlUWNtXG4gIHRoaXMubW9kZVFjbSA9IGZhbHNlIC8vIFBvdXIgY2hvaXNpciBsYSB2ZXJzaW9uIFFDTSBvdSBsYSB2ZXJzaW9uIGNsYXNzaXF1ZSAoZmFsc2UgPSB2ZXJzaW9uIGNsYXNzaXF1ZSlcblxuICB0aGlzLm1nMzJFZGl0YWJsZSA9IGZhbHNlIC8vIHBhcyBkJ2ludGVyZmFjZSBwYXIgZMOpZmF1dCBwb3VyIGxlcyBmaWd1cmVzIE1HMzJcbiAgdGhpcy5ub3V2ZWxsZVZlcnNpb24gPSBmdW5jdGlvbiAobnVtZXJvRXhlcmNpY2UpIHt9XG4gIHRoaXMubGlzdGVQYWNrYWdlcyA9IFtdIC8vIHN0cmluZyBvdSBsaXN0ZSBkZSBzdHJpbmcgYXZlYyBsZSBub20gZGVzIHBhY2thZ2VzIHNww6ljaWZpcXVlcyDDoCBham91dGVyIGRhbnMgbGUgcHLDqWFtYnVsZVxuICAvLyB0aGlzLnR5cGVFeGVyY2ljZSA9IFwiTUczMlwiO1xuICAvLyB0aGlzLmRpbWVuc2lvbnNEaXZNZzMyID0gWzUwMCwgNDUwXTtcbiAgLy8gdGhpcy50eXBlRXhlcmNpY2UgPSBcIlNjcmF0Y2hcIlxuICAvLyB0aGlzLnFjbT1bXCJRdWVscyBzb250IGxlcyBub21icmVzIHBhaXJzID9cIixbNywxMiwzNCwyNSwxOF0sWzAsMSwxLDAsMV1dID0+W1wiTGEgcXVlc3Rpb25cIixbbGVzIHLDqXBvbnNlc10sW2Jvbm5lPTEgZXQgbWF1dmFpc2U9MF1dXG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/exercices/ClasseExercice.js\n");

/***/ })

}]);