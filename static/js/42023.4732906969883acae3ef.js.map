{"version":3,"file":"js/42023.4732906969883acae3ef.js","mappings":"kRAMO,MAAMA,GAAW,EACXC,EAAU,aACVC,GAAkB,EAClBC,EAAiB,WAEjBC,EAAQ,wEAcN,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKH,MAAQA,EACbG,KAAKC,WAAa,EAClBD,KAAKE,SAAW,2CAChBF,KAAKG,QAAU,EACfC,EAAAA,GAAAA,OAAkBJ,KAAKK,YAAc,EAAML,KAAKK,YAAc,EAC9DL,KAAKM,YAAc,EACnBN,KAAKO,cAAgB,OACrBP,KAAKQ,gBAAkB,IAEvBR,KAAKS,gBAAkB,WAGrB,IAAIC,EAAkBC,EAFtBX,KAAKY,eAAiB,GACtBZ,KAAKa,iBAAmB,GAGxB,IAAIC,GAAuBC,EAAAA,EAAAA,KADS,CAAC,EAAG,EAAG,EAAG,EAAG,GAG/Cf,KAAKM,aAEkB,IAArBN,KAAKM,cACPQ,EAAuB,CAAC,EAAG,EAAG,IAEP,IAArBd,KAAKM,cACPQ,EAAuB,CAAC,EAAG,EAAG,EAAG,IAGnC,IAAK,IAAWE,EAAOC,EAAoBC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAA1DC,EAAI,EAAqBC,EAAM,EAA8BD,EAAI3B,KAAKM,aAAesB,EAAM,IAAK,CAGvG,OAFAlB,EAAmBI,EAAqBa,GACxC3B,KAAK6B,eAAeF,GAAK,GACjBjB,GACN,KAAK,EACHQ,EACkB,KAAhBY,EAAAA,EAAAA,KAAQ,EAAG,GACK,KAAhBA,EAAAA,EAAAA,KAAQ,EAAG,GACK,KAAhBA,EAAAA,EAAAA,KAAQ,EAAG,GACK,IAAhBA,EAAAA,EAAAA,KAAQ,EAAG,IACXA,EAAAA,EAAAA,KAAQ,EAAG,GACbX,EAAoB,KAAhBW,EAAAA,EAAAA,KAAQ,EAAG,GAA2B,IAAhBA,EAAAA,EAAAA,KAAQ,EAAG,IAAUA,EAAAA,EAAAA,KAAQ,EAAG,GAC1Dd,EAAS,KAAGe,EAAAA,EAAAA,KAAUb,MAAMC,IACxBnB,KAAKC,aAAeG,EAAAA,GAAAA,MAAeY,GAAS,MAAOgB,EAAAA,EAAAA,IAAyBhC,KAAM2B,EAAG,UACpFX,GAAS,IACdL,GAAUsB,EAAAA,EAAAA,KAAOf,EAAIC,GACrBF,GAAYiB,EAAAA,EAAAA,GAAU,CAAEC,UAAWjB,EAAGkB,UAAWjB,EAAGkB,KAAM,aAC1D,MACF,KAAK,EACHnB,GAAIY,EAAAA,EAAAA,KAAQ,EAAG,GACfX,GAAIW,EAAAA,EAAAA,KAAQ,EAAG,GACfV,GAAIU,EAAAA,EAAAA,KAAQ,EAAG,GACfR,GAAIQ,EAAAA,EAAAA,KAAQX,EAAG,GACfI,GAAIO,EAAAA,EAAAA,KAAQV,EAAG,GACfI,GAAIM,EAAAA,EAAAA,KAAQ,EAAG,GACfL,EAAQ,IAAJP,EAAe,IAAJC,EAAc,GAAJC,EACzBM,EAAQ,IAAJJ,EAAc,GAAJC,EAASC,EACvBR,EAAS,KAAGe,EAAAA,EAAAA,KAAUN,MAAMC,IACxB1B,KAAKC,aAAeG,EAAAA,GAAAA,MAAeY,GAAS,MAAOgB,EAAAA,EAAAA,IAAyBhC,KAAM2B,EAAG,UACpFX,GAAS,IACdL,GAAUsB,EAAAA,EAAAA,KAAOR,EAAIC,GACrBT,GAAYiB,EAAAA,EAAAA,GAAU,CAAEC,UAAWV,EAAGW,UAAWV,EAAGW,KAAM,iBAC1D,MACF,KAAK,EACHnB,GAAIY,EAAAA,EAAAA,KAAQ,EAAG,GACfX,GAAIW,EAAAA,EAAAA,KAAQ,EAAG,GACfV,GAAIU,EAAAA,EAAAA,KAAQ,EAAG,GACfT,GAAIS,EAAAA,EAAAA,KAAQZ,EAAG,GACfI,GAAIQ,EAAAA,EAAAA,KAAQ,EAAG,GACfP,GAAIO,EAAAA,EAAAA,KAAQV,EAAG,GACfK,EAAI,IAAW,IAAJP,EAAc,GAAJC,EAASC,EAC9BM,EAAQ,IAAJL,EAAc,GAAJC,EAASC,EACvBP,EAAS,KAAGe,EAAAA,EAAAA,KAAUN,MAAMC,IACxB1B,KAAKC,aAAeG,EAAAA,GAAAA,MAAeY,GAAS,MAAOgB,EAAAA,EAAAA,IAAyBhC,KAAM2B,EAAG,UACpFX,GAAS,IACdL,GAAUsB,EAAAA,EAAAA,KAAOR,EAAIC,GACrBT,GAAYiB,EAAAA,EAAAA,GAAU,CAAEC,UAAWV,EAAGW,UAAWV,EAAGW,KAAM,iBAC1D,MACF,KAAK,EACHnB,GAAIY,EAAAA,EAAAA,KAAQ,EAAG,GACfX,GAAIW,EAAAA,EAAAA,KAAQ,EAAG,GACfV,GAAIU,EAAAA,EAAAA,KAAQ,EAAG,GACfT,GAAIS,EAAAA,EAAAA,KAAQ,EAAG,GACfR,GAAIQ,EAAAA,EAAAA,KAAQ,EAAG,GACfL,EAAI,IAAMP,EAAI,GAAKC,EAAIC,EACvBM,EAAQ,IAAJL,EAAUC,EACdN,EAAS,KAAGe,EAAAA,EAAAA,KAAUN,YAAYC,IAC9B1B,KAAKC,aAAeG,EAAAA,GAAAA,MAAeY,GAAS,MAAOgB,EAAAA,EAAAA,IAAyBhC,KAAM2B,EAAG,UACpFX,GAAS,IACdL,GAAUsB,EAAAA,EAAAA,KAAOR,EAAIC,GACrBT,GAAYiB,EAAAA,EAAAA,GAAU,CAAEC,UAAWV,EAAGW,UAAWV,EAAGW,KAAM,mBAC1D,MACF,KAAK,EACHnB,GAAIY,EAAAA,EAAAA,KAAQ,EAAG,GACfX,GAAIW,EAAAA,EAAAA,KAAQ,EAAG,GACfV,GAAIU,EAAAA,EAAAA,KAAQ,EAAG,GACfT,GAAIS,EAAAA,EAAAA,KAAQ,EAAG,GACfR,GAAIQ,EAAAA,EAAAA,KAAQ,EAAG,GACfL,EAAI,IAAMP,EAAI,GAAKC,EAAIC,EACvBM,EAAI,GAAKL,EAAIC,EACbN,EAAS,IAAGS,WAAWC,IACnB1B,KAAKC,aAAeG,EAAAA,GAAAA,MAAeY,GAAS,MAAOgB,EAAAA,EAAAA,IAAyBhC,KAAM2B,EAAG,UACpFX,GAAS,IACdL,GAAUsB,EAAAA,EAAAA,KAAOR,EAAIC,GACrBT,GAAYiB,EAAAA,EAAAA,GAAU,CAAEC,UAAWV,EAAGW,UAAWV,EAAGW,KAAM,mBAI1DrC,KAAKsC,oBAAoBX,EAAGT,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,KAEhDxB,KAAKY,eAAe2B,KAAKvB,GACpBZ,EAAAA,GAAAA,QAAwB,IAANuB,IACrBV,EAAY,4BAA8BA,GAE5CjB,KAAKa,iBAAiB0B,KAAKtB,GACtBb,EAAAA,GAAAA,MAGHJ,KAAK6B,eAAeF,GAAK,CACvBa,OAAQxB,EACRyB,aAAc,CACZ,CACEJ,KAAM,UACNI,aAAc,CAAC,CACbzB,MAAOC,EACPyB,OAAQ,KAGZ,CACEL,KAAM,SACNI,aAAc,CAAC,CACbzB,MAAOL,EACP+B,OAAQ,GACR/B,QAAS,CACPK,MAAO,WACP2B,OAAQhC,EACRiC,MAAO,CACLC,QAAQC,EAAAA,EAAAA,KAAmBnC,GAC3BoC,SAAU,EACVC,OAAO,EACPC,OAAQ,UAxBpBC,EAAAA,EAAAA,IAAWlD,KAAM2B,EAAGhB,EAAS,CAAEkC,OAAQ,IAgCzClB,KAEFC,KAEFuB,EAAAA,EAAAA,KAAwBnD","sources":["webpack://mathalea/./src/js/exercices/6e/6C10.js"],"sourcesContent":["import Operation from '../../modules/operations'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListesSansChangerOrdre, texNombre, calcul, nombreDeChiffresDe } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif'\n\nexport const amcReady = true\nexport const amcType = 'AMCHybride' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\nexport const titre = 'Additions, soustractions et multiplications posées de nombres entiers'\n\n/**\n * Additions, soustractions et multiplications posées de nombres entiers\n *\n * * abcd +efg\n * * abc0-efg\n * * 1abc-def\n * * abc*d0e tables de 2 à 5\n * * abc*de tables de 5 à 9\n * @author Rémi Angot\n * Support des opérations posées en html par Jean-Claude Lhote.\n * Référence 6C10\n */\nexport default function AdditionsSoustractionsMultiplicationsPosees () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactif = 1\n  this.consigne = 'Poser et effectuer les calculs suivants.'\n  this.spacing = 2\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1) // Important sinon les opérations posées ne sont pas jolies\n  this.nbQuestions = 5\n  this.listePackages = 'xlop'\n  this.tailleDiaporama = 100\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestions, reponse\n    const typesDequestionsDisponibles = [1, 2, 3, 4, 5]\n    let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(\n      typesDequestionsDisponibles,\n      this.nbQuestions\n    )\n    if (this.nbQuestions === 3) {\n      listeTypeDeQuestions = [1, 2, 5]\n    }\n    if (this.nbQuestions === 4) {\n      listeTypeDeQuestions = [1, 2, 4, 5]\n    }\n\n    for (let i = 0, texte, texteCorr, cpt = 0, a, b, c, d, e, f, g, x, y; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      this.autoCorrection[i] = {}\n      switch (typesDeQuestions) {\n        case 1: // abcd +efg\n          a =\n            randint(1, 9) * 10000 +\n            randint(5, 9) * 1000 +\n            randint(5, 9) * 100 +\n            randint(7, 9) * 10 +\n            randint(1, 9)\n          b = randint(5, 9) * 100 + randint(7, 9) * 10 + randint(1, 9)\n          texte = `$${texNombre(a)}+${b}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexteMathLive(this, i, 'inline') // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte += '$'\n          reponse = calcul(a + b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break\n        case 2: // abc0-efg\n          a = randint(1, 9)\n          b = randint(1, 9)\n          c = randint(1, 9)\n          e = randint(b, 9)\n          f = randint(c, 9)\n          g = randint(2, 9)\n          x = a * 1000 + b * 100 + c * 10\n          y = e * 100 + f * 10 + g\n          texte = `$${texNombre(x)}-${y}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexteMathLive(this, i, 'inline') // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte += '$'\n          reponse = calcul(x - y)\n          texteCorr = Operation({ operande1: x, operande2: y, type: 'soustraction' })\n          break\n        case 3: // 1abc-def\n          a = randint(1, 9)\n          b = randint(1, 9)\n          c = randint(1, 9)\n          d = randint(a, 9)\n          e = randint(1, 9)\n          f = randint(c, 9)\n          x = 1000 + a * 100 + b * 10 + c\n          y = d * 100 + e * 10 + f\n          texte = `$${texNombre(x)}-${y}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexteMathLive(this, i, 'inline') // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte += '$'\n          reponse = calcul(x - y)\n          texteCorr = Operation({ operande1: x, operande2: y, type: 'soustraction' })\n          break\n        case 4: // abc*d0e tables de 2 à 5\n          a = randint(2, 5)\n          b = randint(2, 5)\n          c = randint(2, 5)\n          d = randint(2, 5)\n          e = randint(2, 5)\n          x = 100 * a + 10 * b + c\n          y = d * 100 + e\n          texte = `$${texNombre(x)}\\\\times${y}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexteMathLive(this, i, 'inline') // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte += '$'\n          reponse = calcul(x * y)\n          texteCorr = Operation({ operande1: x, operande2: y, type: 'multiplication' })\n          break\n        case 5: // abc*de tables de 5 à 9\n          a = randint(5, 9)\n          b = randint(5, 9)\n          c = randint(5, 9)\n          d = randint(5, 9)\n          e = randint(5, 9)\n          x = 100 * a + 10 * b + c\n          y = 10 * d + e\n          texte = `$${x}\\\\times${y}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexteMathLive(this, i, 'inline') // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte += '$'\n          reponse = calcul(x * y)\n          texteCorr = Operation({ operande1: x, operande2: y, type: 'multiplication' })\n          break\n      }\n\n      if (this.questionJamaisPosee(i, a, b, c, d, e, f, g)) {\n        // Si la question n'a jamais été posée, on l'enregistre\n        this.listeQuestions.push(texte)\n        if (!context.isHtml && i === 0) {\n          texteCorr = '\\\\setlength\\\\itemsep{2em}' + texteCorr\n        } // espacement entre les questions\n        this.listeCorrections.push(texteCorr)\n        if (!context.isAmc) {\n          setReponse(this, i, reponse, { digits: 0 }) // fonction qui va renseigner this.autocorrection[i]\n        } else {\n          this.autoCorrection[i] = {\n            enonce: texte,\n            propositions: [\n              {\n                type: 'AMCOpen',\n                propositions: [{\n                  texte: texteCorr,\n                  statut: 3\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: reponse,\n                  statut: '',\n                  reponse: {\n                    texte: 'Résultat',\n                    valeur: reponse,\n                    param: {\n                      digits: nombreDeChiffresDe(reponse),\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              }\n            ]\n          }\n        }\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","AdditionsSoustractionsMultiplicationsPosees","Exercice","this","interactif","consigne","spacing","context","spacingCorr","nbQuestions","listePackages","tailleDiaporama","nouvelleVersion","typesDeQuestions","reponse","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","a","b","c","d","e","f","g","x","y","i","cpt","autoCorrection","randint","texNombre","ajouteChampTexteMathLive","calcul","Operation","operande1","operande2","type","questionJamaisPosee","push","enonce","propositions","statut","valeur","param","digits","nombreDeChiffresDe","decimals","signe","approx","setReponse","listeQuestionsToContenu"],"sourceRoot":""}