{"version":3,"file":"js/31011.ab5c344d3588ca07c9b5.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C10-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, creerCouples, randint, choice, texNombre, texNombre2, calcul } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, propositionsQcm, setReponse } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const amcType = 'qcmMono' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = ['qcm', 'mathLive']\n\nexport const titre = 'Tables de multiplications et multiples de 10'\n\n/**\n * Les 2 facteurs peuvent terminer par aucun, 1, 2 ou 3 zéros\n * @author Rémi Angot\n* Référence 6C10-2\n */\nexport default function ExerciceTablesMultiplicationsEtMultiplesDe10 (\n  tablesParDefaut = '2-3-4-5-6-7-8-9'\n) {\n  // Multiplier deux nombres\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = tablesParDefaut\n  this.sup2 = 1\n  this.titre = titre\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.tailleDiaporama = 100\n\n  this.nouvelleVersion = function () {\n    this.interactifType = parseInt(this.sup2) === 2 ? 'mathLive' : 'qcm'\n    this.autoCorrection = []\n    let tables = []\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (!this.sup) {\n      // Si aucune table n'est saisie\n      this.sup = '2-3-4-5-6-7-8-9'\n    }\n    if (typeof this.sup === 'number') {\n      // Si c'est un nombre c'est qu'il y a qu'une seule table\n      tables[0] = this.sup\n    } else {\n      tables = this.sup.split('-') // Sinon on crée un tableau à partir des valeurs séparées par des ;\n    }\n    const couples = creerCouples(\n      tables,\n      [2, 3, 4, 5, 6, 7, 8, 9, 10],\n      this.nbQuestions\n    ) // Liste tous les couples possibles (2,3)≠(3,2)\n    for (\n      let i = 0, a, b, k1, k2, texte, texteCorr, melange;\n      i < this.nbQuestions;\n      i++\n    ) {\n      this.autoCorrection[i] = {}\n      a = couples[i][0]\n      b = couples[i][1]\n      if (a > 1) {\n        k1 = choice([1, 10, 100, 1000])\n      } else {\n        k1 = choice([10, 100, 1000])\n      }\n      k2 = choice([1, 10, 100, 1000])\n      a = k1 * a\n      b = k2 * b\n      melange = randint(0, 1)\n      if (melange === 1) {\n        // échange a et b pour que les multiplications ne soient pas toujours dans le même ordre (surtout lorsque tables n'a qu'un seul élément)\n        const c = a\n        a = b\n        b = c\n      }\n      texte =\n        '$ ' + texNombre(a) + ' \\\\times ' + texNombre(b) + ' = \\\\dotfill $'\n      texteCorr =\n        '$ ' +\n        texNombre(a) +\n        ' \\\\times ' +\n        texNombre(b) +\n        ' = ' +\n        texNombre(a * b) +\n        ' $'\n\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: `$${texNombre2(a * b)}$`,\n          statut: true,\n          feedback: 'Correct !'\n        },\n        {\n          texte: `$${texNombre2(calcul(a * b / 10))}$`,\n          statut: false,\n          feedback: 'Compte le nombre de zéros dans chaque facteur'\n        },\n        {\n          texte: `$${texNombre2(calcul(a * b * 10))}$`,\n          statut: false,\n          feedback: 'Compte le nombre de zéros dans chaque facteur'\n        },\n        {\n          texte: `$${texNombre2(calcul(a * b / 100))}$`,\n          statut: false,\n          feedback: 'Compte le nombre de zéros dans chaque facteur'\n        },\n        {\n          texte: `$${texNombre2(calcul(a * b * 100))}$`,\n          statut: false,\n          feedback: 'Compte le nombre de zéros dans chaque facteur'\n        }\n      ]\n      this.autoCorrection[i].options = {\n        ordered: false,\n        lastChoice: 5\n      }\n      if (this.interactif && this.interactifType === 'qcm') {\n        texte += propositionsQcm(this, i).texte\n      } else {\n        texte += ajouteChampTexteMathLive(this, i)\n        setReponse(this, i, a * b)\n        texte = texte.replace('\\\\dotfill', '')\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = ['Choix des tables', 'Nombres séparés par des tirets'] // Texte, tooltip\n  if (context.isHtml && !context.isDiaporama) this.besoinFormulaire2Numerique = ['Exercice interactif', 2, '1 : QCM\\n2 : Numérique'] // Texte, tooltip\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","ExerciceTablesMultiplicationsEtMultiplesDe10","tablesParDefaut","Exercice","this","sup","sup2","consigne","spacing","tailleDiaporama","nouvelleVersion","parseInt","autoCorrection","tables","listeQuestions","listeCorrections","split","couples","creerCouples","nbQuestions","a","b","k1","k2","texte","texteCorr","melange","i","choice","randint","c","texNombre","enonce","propositions","texNombre2","statut","feedback","calcul","options","ordered","lastChoice","interactif","propositionsQcm","ajouteChampTexteMathLive","setReponse","replace","push","listeQuestionsToContenu","besoinFormulaireTexte","context","besoinFormulaire2Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}