{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N31-3.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta4N10.js"],"names":["amcReady","amcType","interactifReady","interactifType","titre","ArrondirUneValeur","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","sup2","interactif","context","spacingCorr","nouvelleVersion","parseInt","autoCorrection","consigne","tabrep","tabicone","preTabRep","m","c","d","u","di","ci","mi","me","ce","de","n","den","num","nb","rac","preTabIcone","espace","listeQuestions","listeCorrections","i","texte","texteCorr","cpt","randint","calcul","texNombre","choice","texFraction","troncature","listeNombresPremiersStrictJusqua","Math","sqrt","miseEnEvidence","shuffle2tableaux","push","enonce","options","vertical","ordered","propositions","statut","feedback","modeQcm","indexOf","propositionsQcm","length","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","spacing","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","Arrondir_une_valeur_4e","Arrondir_une_valeur"],"mappings":"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","file":"js/708.852229cad4b28b57ab74.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeNombresPremiersStrictJusqua, shuffle2tableaux, choice, listeQuestionsToContenu, randint, troncature, calcul, texNombre, miseEnEvidence, texFraction } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType = 2 // type de question AMC\nexport const interactifReady = true\nexport const interactifType = ' '\nexport const titre = 'Arrondir une valeur'\n\n/**\n * * Encadrer_puis_arrondir_une_valeur\n * * 6N31-3\n * @author Mireille Gain, s'inspirant de 6N31-1 de Sébastien Lozano\n */\n\nexport default function ArrondirUneValeur () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n\n  this.nbQuestions = 3\n  this.nbCols = 3\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.sup2 = false\n  this.interactifReady = true\n  this.interactif = true\n  this.amcType = amcType\n  context.isHtml ? (this.spacingCorr = 2.5) : (this.spacingCorr = 3.5)\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.autoCorrection = []\n    if (!context.isAmc && !this.interactif) {\n      this.consigne = \"Encadrer chaque nombre à l'unité, puis au dixième, puis au centième.<br>Dans chaque cas, mettre ensuite en évidence son arrondi.\"\n    } else {\n      this.consigne = \"Quelles sont les encadrements où la valeur orange est la valeur arrondie du nombre à l'unité, au dixième et au centième\"\n    }\n    const tabrep = []; const tabicone = []; const preTabRep = []; let preTabIcone = []\n    let espace = ''\n    if (context.isHtml) {\n      espace = '<br>'\n    } else {\n      espace = '\\\\\\\\'\n    }\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let m, c, d, u, di, ci, mi, me, ce, de, n, den, num, nb, rac\n\n    for (let i = 0, texte = '', texteCorr = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      this.autoCorrection[i] = {}\n      if (this.sup === 1) {\n        m = randint(0, 9)\n        c = randint(0, 9)\n        d = randint(0, 9)\n        u = randint(0, 9)\n        di = randint(1, 9)\n        ci = randint(1, 9)\n        mi = randint(1, 9, 5)\n        me = randint(0, 1)\n        ce = randint(0, 1)\n        de = randint(0, 1)\n        n = me * m * 1000 + ce * c * 100 + de * d * 10 + u * 1 + calcul(di * 0.1 + ci * 0.01 + mi * 0.001)\n        nb = texNombre(n)\n      } else if (this.sup === 2) {\n        den = choice([7, 9, 11, 13])\n        num = randint(1, 50, [7, 9, 11, 13, 14, 18, 21, 22, 26, 27, 28, 33, 35, 36, 39, 42, 44, 45, 49])\n        n = num / den\n        nb = texFraction(num, den)\n        di = 10 * (troncature(n - troncature(n, 0), 1))\n        ci = 100 * (troncature(n - troncature(n, 1), 2))\n        mi = 1000 * (troncature(n - troncature(n, 2), 3))\n      } else if (this.sup === 3) {\n        rac = randint(2, 300, [listeNombresPremiersStrictJusqua(300)])\n        n = Math.sqrt(rac)\n        nb = `\\\\sqrt{${rac}}`\n        di = 10 * (troncature(n - troncature(n, 0), 1))\n        ci = 100 * (troncature(n - troncature(n, 1), 2))\n        mi = 1000 * (troncature(n - troncature(n, 2), 3))\n      }\n\n      if (this.sup === 1) texte = `$${nb}$`\n      else if (this.sup === 2) texte = `$\\\\text{Quand~on~écrit~sur~la~calculatrice~} ${num}\\\\div ${den}, \\\\text{~elle~renvoie} : ${texNombre(n)}$`\n      else if (this.sup === 3) texte = `$\\\\text{Quand~on~écrit~sur~la~calculatrice~} ${nb}, \\\\text{~elle~renvoie} : ${texNombre(n)}$`\n\n      texteCorr = \"Encadrement et arrondi à l'unité : \"\n      if (di < 5) {\n        texteCorr += `$\\\\phantom{1234567}${miseEnEvidence(texNombre(troncature(n, 0)))} < ${nb} < ${texNombre(troncature(n + 1, 0))}$`\n        preTabRep[0] = `$${miseEnEvidence(texNombre(troncature(n, 0)))} < ${nb} < ${texNombre(troncature(n + 1, 0))}$`\n        preTabRep[1] = `$${texNombre(troncature(n, 0))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 1, 0)))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      } else {\n        texteCorr += `$\\\\phantom{1234567}${texNombre(troncature(n, 0))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 1, 0)))}$`\n        preTabRep[0] = `$${texNombre(troncature(n, 0))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 1, 0)))}$`\n        preTabRep[1] = `$${miseEnEvidence(texNombre(troncature(n, 0)))} < ${nb} < ${texNombre(troncature(n + 1, 0))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      }\n\n      texteCorr += '<br>Encadrement et arrondi au dixième : '\n      if (ci < 5) {\n        texteCorr += `$\\\\phantom{123}${miseEnEvidence(texNombre(troncature(n, 1)))} < ${nb} < ${texNombre(troncature(n + 0.1, 1))}$`\n        preTabRep[0] = `$${miseEnEvidence(texNombre(troncature(n, 1)))} < ${nb} < ${texNombre(troncature(n + 0.1, 1))}$`\n        preTabRep[1] = `$${texNombre(troncature(n, 1))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.1, 1)))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      } else {\n        texteCorr += `$\\\\phantom{123}${texNombre(troncature(n, 1))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.1, 1)))}$`\n        preTabRep[0] = `$${texNombre(troncature(n, 1))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.1, 1)))}$`\n        preTabRep[1] = `$${miseEnEvidence(texNombre(troncature(n, 1)))} < ${nb} < ${texNombre(troncature(n + 0.1, 1))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      }\n\n      texteCorr += '<br>Encadrement et arrondi au centième : $~$'\n      if (mi < 5) {\n        texteCorr += `$${miseEnEvidence(texNombre(troncature(n, 2)))} < ${nb} < ${texNombre(troncature(n + 0.01, 2))}$`\n        preTabRep[0] = `$${miseEnEvidence(texNombre(troncature(n, 2)))} < ${nb} < ${texNombre(troncature(n + 0.01, 2))}$`\n        preTabRep[1] = `$${texNombre(troncature(n, 2))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.01, 2)))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      } else {\n        texteCorr += `$${texNombre(troncature(n, 2))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.01, 2)))}$`\n        preTabRep[0] = `$${texNombre(troncature(n, 2))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.01, 2)))}$`\n        preTabRep[1] = `$${miseEnEvidence(texNombre(troncature(n, 2)))} < ${nb} < ${texNombre(troncature(n + 0.01, 2))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      }\n      this.autoCorrection[i].enonce = `Quels sont les encadrements où la valeur orange est l'arrondi de ${texte} ?\\\\\\\\ \\n Réponses possibles`\n      this.autoCorrection[i].options = { vertical: true, ordered: true }\n      this.autoCorrection[i].propositions = [\n        {\n          texte: tabrep[0],\n          statut: tabicone[0],\n          feedback: ''\n        },\n        {\n          texte: tabrep[1],\n          statut: tabicone[1],\n          feedback: ''\n        },\n        {\n          texte: tabrep[2],\n          statut: tabicone[2],\n          feedback: ''\n        },\n        {\n          texte: tabrep[3],\n          statut: tabicone[3],\n          feedback: ''\n        },\n        {\n          texte: tabrep[4],\n          statut: tabicone[4],\n          feedback: ''\n        },\n        {\n          texte: tabrep[5],\n          statut: tabicone[5],\n          feedback: ''\n        }\n      ]\n      if (this.modeQcm && !context.isAmc) {\n        texte += '<br><br>Réponses possibles : <br>  '\n        texteCorr = ''\n        // shuffle2tableaux(tabrep, tabicone);\n        for (let i = 0; i < 6; i++) {\n          texte += `$\\\\square\\\\;$ ${tabrep[i]}` + espace\n          if (tabicone[i] === 1) {\n            texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[i]}` + espace\n          } else {\n            texteCorr += `$\\\\square\\\\;$ ${tabrep[i]}` + espace\n          }\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        if (this.interactif) {\n          texte += propositionsQcm(this, i).texte\n        }\n        this.listeQuestions.push(texte) // Sinon on enregistre la question dans listeQuestions\n        this.listeCorrections.push(texteCorr) // On fait pareil pour la correction\n        tabrep.length = 0\n        tabicone.length = 0\n        i++ // On passe à la question suivante\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de nombre', 2, '1 : Nombre décimal\\n 2 : Fraction']\n  this.besoinFormulaire2CaseACocher = ['Affichage de la valeur donnée à la calculatrice', false]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Arrondir_une_valeur from '../6e/6N31-3.js'\nexport const titre = 'Arrondir une valeur numérique'\n\n/**\n *\n * référence ?\n */\nexport default function Arrondir_une_valeur_4e() {\n  Arrondir_une_valeur.call(this);\n  this.sup = 3;\n  this.titre = titre;\n  this.besoinFormulaireNumerique = ['Type de nombre', 3, `1 : Nombre décimal\\n 2 : Fraction\\n 3 : Racine carrée`];\n}\n"],"sourceRoot":""}