{"version":3,"file":"js/97299.a17c772a9cc9fa35aa5d.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5G40-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, texteEnCouleurEtGras, shuffle2tableaux } from '../../modules/outils.js'\nexport const titre = 'Citer les propriétés des parallélogrammes'\n\n/**\n * On doit compléter des propriétés des parallélogrammes\n * @author Rémi Angot\n * Référence 5G40-1\n * Publié le 5/4/2021\n*/\nexport default function ProprietesDesParallelogrammes () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Compléter les phrases suivantes à l'aide de la définition ou des propriétés des parallélogrammes.\"\n  this.nbQuestionsModifiable = false\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  // this.sup = 1\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.introduction = 'Dans cet exercice, on supposera que tous les quadrilatères sont non croisés.'\n\n    const question1 = 'Si un quadrilatère est un parallélogramme alors ses côtés…'\n    const correction1 = `Si un quadrilatère est un parallélogramme alors ses côtés ${texteEnCouleurEtGras('opposés sont parallèles et de même longueur')}.`\n\n    const question2 = 'Si un quadrilatère est un parallélogramme alors ses diagonales…'\n    const correction2 = `Si un quadrilatère est un parallélogramme alors ses diagonales ${texteEnCouleurEtGras('se coupent en leur milieu')}.`\n\n    const question3 = 'Si un quadrilatère est un parallélogramme alors ses angles…'\n    const correction3 = `Si un quadrilatère est un parallélogramme alors ses angles ${texteEnCouleurEtGras('opposés sont égaux et la somme de deux angles consécutifs est égale à 180°')}.`\n\n    const question4 = 'Si un quadrilatère est un parallélogramme alors … symétrie …'\n    const correction4 = `Si un quadrilatère est un parallélogramme alors ${\"il a un centre de symétrie qui est le point d'intersection de ses diagonales\"}.`\n\n    const question5 = \"Si un quadrilatère a ses diagonales … alors c'est un parallélogramme.\"\n    const correction5 = `Si un quadrilatère a ses diagonales ${texteEnCouleurEtGras('qui se coupent en leur milieu')} alors c'est un parallélogramme`\n\n    const question6 = \"Si un quadrilatère a … parallèles alors c'est un parallélogramme.\"\n    const correction6 = `Si un quadrilatère a ${texteEnCouleurEtGras('ses côtés opposés')} parallèles alors c'est un parallélogramme`\n\n    const question7 = \"Si un quadrilatère a … longueur alors c'est un parallélogramme.\"\n    const correction7 = `Si un quadrilatère a ${texteEnCouleurEtGras('ses côtés opposés de même')} longueur alors c'est un parallélogramme`\n\n    const question8 = \"Si un quadrilatère a deux côtés … alors c'est un parallélogramme.\"\n    const correction8 = `Si un quadrilatère a deux côtés ${texteEnCouleurEtGras('opposés parallèles et de même longueur')} alors c'est un parallélogramme`\n\n    const question9 = \"Si un quadrilatère a … angles … alors c'est un parallélogramme.\"\n    const correction9 = `Si un quadrilatère a ${texteEnCouleurEtGras('ses angles opposés égaux')} alors c'est un parallélogramme`\n\n    if (parseInt(this.sup) === 1) {\n      this.listeQuestions = [question1, question2, question3, question4]\n      this.listeCorrections = [correction1, correction2, correction3, correction4]\n    } else if (parseInt(this.sup) === 2) {\n      this.listeQuestions = [question5, question6, question7, question8, question9]\n      this.listeCorrections = [correction5, correction6, correction7, correction8, correction9]\n    } else {\n      this.listeQuestions = [question1, question2, question3, question4, question5, question6, question7, question8, question9]\n      this.listeCorrections = [correction1, correction2, correction3, correction4, correction5, correction6, correction7, correction8, correction9]\n    }\n    shuffle2tableaux(this.listeQuestions, this.listeCorrections)\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, \"1 : Propriétés du parallélogramme\\n2 : Propriétés pour montrer qu'un quadrilatère est un parallélogramme\\n3 : Toutes les propriétés\"]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ProprietesDesParallelogrammes","Exercice","this","consigne","nbQuestionsModifiable","nbCols","nbColsCorr","tailleDiaporama","video","nouvelleVersion","introduction","question1","correction1","texteEnCouleurEtGras","question2","correction2","question3","correction3","question4","correction4","question5","correction5","question6","correction6","question7","correction7","question8","correction8","question9","correction9","parseInt","sup","listeQuestions","listeCorrections","shuffle2tableaux","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push"],"sourceRoot":""}