{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G31-MG32.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Exercice_Trigo_angles","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","context","spacingCorr","listePackages","typeExercice","nouvelleVersion","numeroExercice","dimensionsDivMg32","listeQuestions","listeCorrections","lettre0","randint","s0","lettreDepuisChiffre","lettre1","s1","lettre2","s2","angle1","angle2","typesDeQuestions","nom_du_triangle","choice","k1","Math","round","random","k2","degres","atan","alpha1","PI","alpha1deg","x1","y2","s01","arrondiVirgule","s02","dist12","cos","s12","texte","texteCorr","codeBase64","MG32codeBase64","mg32init","mtg32App","idDoc","giveFormula2","rename","calculate","display","texFraction","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable"],"mappings":"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","file":"js/4859.5ea5607203e62a4e93fe.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, randint, choice, arrondiVirgule, lettreDepuisChiffre, texFraction } from '../../modules/outils.js'\nimport { degres } from '../../modules/fonctionsMaths.js'\nexport const titre = 'Déterminer un angle grâce à la trigonométrie'\n\n/**\n * @author Jean-Claude Lhote\n * 3G31\n * Calcul d'angle dans le triangle rectangle\n * Le niveau 1 se limite à l'utilisation de Arccos\n * Le niveau 2 utilise la fonction trigo la plus pertinente pour un calcul direct\n */\nexport default function Exercice_Trigo_angles () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1 // 1 calcul avec Arccos\n  context.isHtml ? (this.spacingCorr = 3) : (this.spacingCorr = 1.5)\n  this.listePackages = 'tkz-euclide'\n  this.typeExercice = 'MG32'\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.dimensionsDivMg32 = [700, 500]\n    this.listeQuestions = []\n    this.listeCorrections = [] // Liste de questions corrigées\n    const lettre0 = randint(11, 25) // aleatoirisation du nom des points\n    const s0 = lettreDepuisChiffre(lettre0)\n    const lettre1 = randint(11, 25, [lettre0])\n    const s1 = lettreDepuisChiffre(lettre1)\n    const lettre2 = randint(11, 25, [lettre0, lettre1])\n    const s2 = lettreDepuisChiffre(lettre2)\n    let angle1, angle2\n    let typesDeQuestions\n    if (this.sup == 1) {\n      typesDeQuestions = randint(1, 2) // utilisation de Arccos\n    }\n    if (this.sup == 2) {\n      typesDeQuestions = randint(1, 6, [2]) // utilisation des 3 fonctions Arccos, Arcsin et Arctan\n    }\n\n    const nom_du_triangle = choice([\n      s0 + s1 + s2,\n      s0 + s2 + s1,\n      s1 + s0 + s2,\n      s1 + s2 + s0,\n      s2 + s0 + s1,\n      s2 + s1 + s0\n    ])\n    const k1 = Math.round((Math.random() * 5 + 1) * 10) / 10\n    const k2 = Math.round((Math.random() * 5 + 1) * 10) / 10\n    angle1 = Math.round(degres(Math.atan(k2 / k1)))\n    angle2 = 90 - angle1\n    const alpha1 = Math.random() * Math.PI - Math.PI / 2\n    const alpha1deg = Math.round((alpha1 * 180) / Math.PI)\n    const x1 = k1 // coordonnées des deux sommets du triangle\n    const y2 = k2\n    const s01 = arrondiVirgule(k1, 1) // mise en texte avec 1 chiffres après la virgule pour énoncé\n    const s02 = arrondiVirgule(k2, 1)\n\n    let dist12 = k1 / Math.cos(Math.atan(k2 / k1)) // calcul de l'hypoténuse\n    dist12 = Math.round(dist12 * 10) / 10 // On ne garde qu'une approximation au dixième pour l'exercice\n    const s12 = arrondiVirgule(dist12, 1)\n    let texte\n    let texteCorr = `Dans le triangle $${nom_du_triangle}$ rectangle en $${s0}$ :<br>`\n    if (context.isHtml) {\n      // sortie html MG32\n      let codeBase64\n      if (typesDeQuestions % 2 != 0) {\n        if (alpha1deg < 0) {\n          codeBase64 =\n            'TWF0aEdyYXBoSmF2YTEuMAAAABI+TMzNAAJmcv###wEA#wEAAAAAAAAAAAYfAAADsgAAAQEAAAAAAAAAAQAAACL#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAWAAFBAMA7AAAAAAAAwCAAAAAAAAAFAAFAcLFHrhR64UBneFHrhR64#####wAAAAEAFENEcm9pdGVEaXJlY3Rpb25GaXhlAP####8BAAAAABYAAAEAAQAAAAEBP#AAAAAAAAD#####AAAAAQAPQ1BvaW50TGllRHJvaXRlAP####8BAAAAAA4AAUkAwBgAAAAAAAAAAAAAAAAAAAUAAUBHq0OVgQYlAAAAAv####8AAAABAAlDRHJvaXRlQUIA#####wEAAAAAEAAAAQABAAAAAQAAAAP#####AAAAAQAWQ0Ryb2l0ZVBlcnBlbmRpY3VsYWlyZQD#####AQAAAAAWAAABAAEAAAABAAAABP####8AAAABAAlDQ2VyY2xlT0EA#####wEAAAAAAQAAAAEAAAAD#####wAAAAEAEENJbnREcm9pdGVDZXJjbGUA#####wAAAAUAAAAG#####wAAAAEAEENQb2ludExpZUJpcG9pbnQA#####wEAAAAAFgAAAQUAAQAAAAcAAAAJAP####8BAAAAAA4AAUoAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAAQAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAJ4MQABNgAAAAFAGAAAAAAAAAAAABEA#####wACeDIAATQAAAABQBAAAAAAAAAAAAARAP####8ACGFscGhhZGVnAAMtOTD#####AAAAAQAMQ01vaW5zVW5haXJlAAAAAUBWgAAAAAAA#####wAAAAEAEENQb2ludERhbnNSZXBlcmUA#####wEAAAAAFgABWgDAFAAAAAAAAEAAAAAAAAAABwAAAAAKAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAEwD#####AQAAAAAWAAFGAAAAAAAAAAAAQAgAAAAAAAAHAAAAAAoAAAAOAAAADwAAAAEAAAAAAAAAAAAAABMA#####wEAAAAAFgABRAAAAAAAAAAAAEAIAAAAAAAABwAAAAAKAAAAAQAAAAAAAAAAAAAADgAAABD#####AAAAAQAJQ1JvdGF0aW9uAP####8AAAASAAAADgAAABEAAAAPAP####8AAAAAABYAAUIAQCoAAAAAAADALgAAAAAAAAcAAAAAEwAAABUAAAAPAP####8AAAAAABYAAUMAQBAAAAAAAADAOwAAAAAAAAcAAAAAFAAAABX#####AAAAAQAJQ1BvbHlnb25lAP####8AAAAAAAIAAAAEAAAAEgAAABYAAAAXAAAAEv####8AAAACABdDTWFycXVlQW5nbGVHZW9tZXRyaXF1ZQD#####AAAA#wAEAAAAAUAwAAAAAAAAAAAAFgAAABIAAAAX#####wAAAAEACENTZWdtZW50AP####8BAAD#ABAAAAEABAAAABcAAAAW#####wAAAAEAEENNYWNyb0FwcGFyaXRpb24A#####wD#AAAB#####xBAh8ij1wo9cUBHYUeuFHrhAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAFQXBwQkMAAAAAAAEAAAAaAP####8AAAABABFDTWFjcm9EaXNwYXJpdGlvbgD#####AP8AAAH#####EECKaKPXCj1xQEphR64UeuECAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAZNYXNxQkMAAAAAAAEAAAAa#####wAAAAEAC0NNYWNyb1BhdXNlAP####8A#wAAAf####8QQI1oo9cKPXFASuFHrhR64QIAAAAAAAAAAAAAAAABAAAAAAAAAAAABVBhdXNlAAAAAAABAAAAGQD#####AAAA#wH#####EECIIKPXCj1xQFqwo9cKPXACAAAAAAAAAAAAAAAAAQAAAAAAAAAAAApNYXNxQW5nZHJ0AAAAAAABAAAAGQAAABgA#####wAAAP8B#####xBAjAij1wo9cUBa8KPXCj1wAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAJQXBwQW5nRHJ0AAAAAAABAAAAGQD#####AAAAAQARQ01hY3JvU3VpdGVNYWNyb3MA#####wAAAP8B#####xBAWMUeuFHrhUB4fCj1wo9cAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAALaHlwb3TDqW51c2UAAAAAAAsAAAAeAAAAGwAAAB0AAAAfAAAAHAAAAB0AAAAeAAAAGwAAAB0AAAAcAAAAHwAAABYA#####wAAAP8ABQAAACBAQIGJiJxJngAAAAEAAAAWAAAAFwAAAA7##########w=='\n        } else {\n          codeBase64 =\n            'TWF0aEdyYXBoSmF2YTEuMAAAABI#AAAAAAJmcv###wEA#wEAAAAAAAAAAAYfAAADsgAAAQEAAAAAAAAAAQAAACL#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAWAAFBAMAUAAAAAAAAQBQAAAAAAAAFAAFAbFo9cKPXBkB0BhR64Ueu#####wAAAAEAFENEcm9pdGVEaXJlY3Rpb25GaXhlAP####8BAAAAABYAAAEAAQAAAAEBP#AAAAAAAAD#####AAAAAQAPQ1BvaW50TGllRHJvaXRlAP####8BAAAAAA4AAUkAwBgAAAAAAAAAAAAAAAAAAAUAAUBHq0OVgQYlAAAAAv####8AAAABAAlDRHJvaXRlQUIA#####wEAAAAAEAAAAQABAAAAAQAAAAP#####AAAAAQAWQ0Ryb2l0ZVBlcnBlbmRpY3VsYWlyZQD#####AQAAAAAWAAABAAEAAAABAAAABP####8AAAABAAlDQ2VyY2xlT0EA#####wEAAAAAAQAAAAEAAAAD#####wAAAAEAEENJbnREcm9pdGVDZXJjbGUA#####wAAAAUAAAAG#####wAAAAEAEENQb2ludExpZUJpcG9pbnQA#####wEAAAAAFgAAAQUAAQAAAAcAAAAJAP####8BAAAAAA4AAUoAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAAQAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAJ4MQABNgAAAAFAGAAAAAAAAAAAABEA#####wACeDIAATQAAAABQBAAAAAAAAAAAAARAP####8ACGFscGhhZGVnAAI5MAAAAAFAVoAAAAAAAP####8AAAABABBDUG9pbnREYW5zUmVwZXJlAP####8BAAAAABYAAVoAwBQAAAAAAABAAAAAAAAAAAcAAAAACgAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAAAAABIA#####wEAAAAAFgABRgAAAAAAAAAAAEAIAAAAAAAABwAAAAAKAAAADgAAAA8AAAABAAAAAAAAAAAAAAASAP####8BAAAAABYAAUQAAAAAAAAAAABACAAAAAAAAAcAAAAACgAAAAEAAAAAAAAAAAAAAA4AAAAQ#####wAAAAEACUNSb3RhdGlvbgD#####AAAAEgAAAA4AAAARAAAADwD#####AAAAAAAWAAFCAEAqAAAAAAAAwDgAAAAAAAAHAAAAABMAAAAVAAAADwD#####AAAAAAAWAAFDAMA3AAAAAAAAwEAAAAAAAAAHAAAAABQAAAAV#####wAAAAEACUNQb2x5Z29uZQD#####AAAAAAACAAAABAAAABIAAAAWAAAAFwAAABL#####AAAAAgAXQ01hcnF1ZUFuZ2xlR2VvbWV0cmlxdWUA#####wAAAP8ABAAAAAFAMAAAAAAAAAAAABYAAAASAAAAF#####8AAAABAAhDU2VnbWVudAD#####AQAA#wAQAAABAAQAAAAXAAAAFv####8AAAABABBDTWFjcm9BcHBhcml0aW9uAP####8A#wAAAf####8QQIfIo9cKPXFAR2FHrhR64QIAAAAAAAAAAAAAAAABAAAAAAAAAAAABUFwcEJDAAAAAAABAAAAGgD#####AAAAAQARQ01hY3JvRGlzcGFyaXRpb24A#####wAAAP8B#####xBAimij1wo9cUBKYUeuFHrhAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAGTWFzcUJDAAAAAAABAAAAGv####8AAAABAAtDTWFjcm9QYXVzZQD#####AP8AAAH#####EECNaKPXCj1xQErhR64UeuECAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAVQYXVzZQAAAAAAAQAAABgA#####wAAAP8B#####xBAh#Cj1wo9cUBbcKPXCj1wAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAKTWFzcUFuZ0RydAAAAAAAAQAAABkAAAAXAP####8AAAD#Af####8QQIw4o9cKPXFAXPCj1wo9cAIAAAAAAAAAAAAAAAABAAAAAAAAAAAACUFwcEFuZ0RydAAAAAAAAQAAABkA#####wAAAAEAEUNNYWNyb1N1aXRlTWFjcm9zAP####8AAAD#Af####8QQFjFHrhR64VAeHwo9cKPXAIAAAAAAAAAAAAAAAABAAAAAAAAAAAAC2h5cG90w6ludXNlAAAAAAALAAAAHgAAABsAAAAdAAAAHwAAABwAAAAdAAAAHgAAABsAAAAdAAAAHwAAABwAAAAVAP####8AAAD#AAUAAAAgQEHcp2T0QTQAAAABAAAAFgAAABcAAAAO##########8='\n        }\n      } else {\n        if (alpha1deg < 0) {\n          codeBase64 =\n            'TWF0aEdyYXBoSmF2YTEuMAAAABI+TMzNAAJmcv###wEA#wEAAAAAAAAAAAYfAAADsgAAAQEAAAAAAAAAAQAAACL#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAWAAFBAMA7AAAAAAAAwCAAAAAAAAAFAAFAcLFHrhR64UBneFHrhR64#####wAAAAEAFENEcm9pdGVEaXJlY3Rpb25GaXhlAP####8BAAAAABYAAAEAAQAAAAEBP#AAAAAAAAD#####AAAAAQAPQ1BvaW50TGllRHJvaXRlAP####8BAAAAAA4AAUkAwBgAAAAAAAAAAAAAAAAAAAUAAUBHq0OVgQYlAAAAAv####8AAAABAAlDRHJvaXRlQUIA#####wEAAAAAEAAAAQABAAAAAQAAAAP#####AAAAAQAWQ0Ryb2l0ZVBlcnBlbmRpY3VsYWlyZQD#####AQAAAAAWAAABAAEAAAABAAAABP####8AAAABAAlDQ2VyY2xlT0EA#####wEAAAAAAQAAAAEAAAAD#####wAAAAEAEENJbnREcm9pdGVDZXJjbGUA#####wAAAAUAAAAG#####wAAAAEAEENQb2ludExpZUJpcG9pbnQA#####wEAAAAAFgAAAQUAAQAAAAcAAAAJAP####8BAAAAAA4AAUoAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAAQAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAJ4MQABNgAAAAFAGAAAAAAAAAAAABEA#####wACeDIAATQAAAABQBAAAAAAAAAAAAARAP####8ACGFscGhhZGVnAAMtOTD#####AAAAAQAMQ01vaW5zVW5haXJlAAAAAUBWgAAAAAAA#####wAAAAEAEENQb2ludERhbnNSZXBlcmUA#####wEAAAAAFgABWgDAFAAAAAAAAEAAAAAAAAAABwAAAAAKAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAEwD#####AQAAAAAWAAFGAAAAAAAAAAAAQAgAAAAAAAAHAAAAAAoAAAAOAAAADwAAAAEAAAAAAAAAAAAAABMA#####wEAAAAAFgABRAAAAAAAAAAAAEAIAAAAAAAABwAAAAAKAAAAAQAAAAAAAAAAAAAADgAAABD#####AAAAAQAJQ1JvdGF0aW9uAP####8AAAASAAAADgAAABEAAAAPAP####8AAAAAABYAAUIAQCoAAAAAAADALgAAAAAAAAcAAAAAEwAAABUAAAAPAP####8AAAAAABYAAUMAQBAAAAAAAADAOwAAAAAAAAcAAAAAFAAAABX#####AAAAAQAJQ1BvbHlnb25lAP####8AAAAAAAIAAAAEAAAAEgAAABYAAAAXAAAAEv####8AAAACABdDTWFycXVlQW5nbGVHZW9tZXRyaXF1ZQD#####AAAA#wAEAAAAAUAwAAAAAAAAAAAAFgAAABIAAAAX#####wAAAAEACENTZWdtZW50AP####8BAAD#ABAAAAEABAAAABcAAAAW#####wAAAAEAEENNYWNyb0FwcGFyaXRpb24A#####wD#AAAB#####xBAh8ij1wo9cUBHYUeuFHrhAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAFQXBwQkMAAAAAAAEAAAAaAP####8AAAABABFDTWFjcm9EaXNwYXJpdGlvbgD#####AP8AAAH#####EECKaKPXCj1xQEphR64UeuECAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAZNYXNxQkMAAAAAAAEAAAAa#####wAAAAEAC0NNYWNyb1BhdXNlAP####8A#wAAAf####8QQI1oo9cKPXFASuFHrhR64QIAAAAAAAAAAAAAAAABAAAAAAAAAAAABVBhdXNlAAAAAAABAAAAGQD#####AAAA#wH#####EECIIKPXCj1xQFqwo9cKPXACAAAAAAAAAAAAAAAAAQAAAAAAAAAAAApNYXNxQW5nZHJ0AAAAAAABAAAAGQAAABgA#####wAAAP8B#####xBAjAij1wo9cUBa8KPXCj1wAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAJQXBwQW5nRHJ0AAAAAAABAAAAGQD#####AAAAAQARQ01hY3JvU3VpdGVNYWNyb3MA#####wAAAP8B#####xBAWMUeuFHrhUB4fCj1wo9cAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAALaHlwb3TDqW51c2UAAAAAAAsAAAAeAAAAGwAAAB0AAAAfAAAAHAAAAB0AAAAeAAAAGwAAAB0AAAAcAAAAHwAAABYA#####wAAAP8AAwAAACBAQHXBUVjTVQAAAAEAAAAXAAAAFgAAAA7##########w=='\n        } else {\n          codeBase64 =\n            'TWF0aEdyYXBoSmF2YTEuMAAAABI#AAAAAAJmcv###wEA#wEAAAAAAAAAAAYfAAADsgAAAQEAAAAAAAAAAQAAACL#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAWAAFBAMAUAAAAAAAAQBQAAAAAAAAFAAFAbFo9cKPXBkB0BhR64Ueu#####wAAAAEAFENEcm9pdGVEaXJlY3Rpb25GaXhlAP####8BAAAAABYAAAEAAQAAAAEBP#AAAAAAAAD#####AAAAAQAPQ1BvaW50TGllRHJvaXRlAP####8BAAAAAA4AAUkAwBgAAAAAAAAAAAAAAAAAAAUAAUBHq0OVgQYlAAAAAv####8AAAABAAlDRHJvaXRlQUIA#####wEAAAAAEAAAAQABAAAAAQAAAAP#####AAAAAQAWQ0Ryb2l0ZVBlcnBlbmRpY3VsYWlyZQD#####AQAAAAAWAAABAAEAAAABAAAABP####8AAAABAAlDQ2VyY2xlT0EA#####wEAAAAAAQAAAAEAAAAD#####wAAAAEAEENJbnREcm9pdGVDZXJjbGUA#####wAAAAUAAAAG#####wAAAAEAEENQb2ludExpZUJpcG9pbnQA#####wEAAAAAFgAAAQUAAQAAAAcAAAAJAP####8BAAAAAA4AAUoAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAAQAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAJ4MQABNgAAAAFAGAAAAAAAAAAAABEA#####wACeDIAATQAAAABQBAAAAAAAAAAAAARAP####8ACGFscGhhZGVnAAI5MAAAAAFAVoAAAAAAAP####8AAAABABBDUG9pbnREYW5zUmVwZXJlAP####8BAAAAABYAAVoAwBQAAAAAAABAAAAAAAAAAAcAAAAACgAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAAAAABIA#####wEAAAAAFgABRgAAAAAAAAAAAEAIAAAAAAAABwAAAAAKAAAADgAAAA8AAAABAAAAAAAAAAAAAAASAP####8BAAAAABYAAUQAAAAAAAAAAABACAAAAAAAAAcAAAAACgAAAAEAAAAAAAAAAAAAAA4AAAAQ#####wAAAAEACUNSb3RhdGlvbgD#####AAAAEgAAAA4AAAARAAAADwD#####AAAAAAAWAAFCAEAqAAAAAAAAwDgAAAAAAAAHAAAAABMAAAAVAAAADwD#####AAAAAAAWAAFDAMA3AAAAAAAAwEAAAAAAAAAHAAAAABQAAAAV#####wAAAAEACUNQb2x5Z29uZQD#####AAAAAAACAAAABAAAABIAAAAWAAAAFwAAABL#####AAAAAgAXQ01hcnF1ZUFuZ2xlR2VvbWV0cmlxdWUA#####wAAAP8ABAAAAAFAMAAAAAAAAAAAABYAAAASAAAAF#####8AAAABAAhDU2VnbWVudAD#####AQAA#wAQAAABAAQAAAAXAAAAFv####8AAAABABBDTWFjcm9BcHBhcml0aW9uAP####8A#wAAAf####8QQIfIo9cKPXFAR2FHrhR64QIAAAAAAAAAAAAAAAABAAAAAAAAAAAABUFwcEJDAAAAAAABAAAAGgD#####AAAAAQARQ01hY3JvRGlzcGFyaXRpb24A#####wAAAP8B#####xBAimij1wo9cUBKYUeuFHrhAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAGTWFzcUJDAAAAAAABAAAAGv####8AAAABAAtDTWFjcm9QYXVzZQD#####AP8AAAH#####EECNaKPXCj1xQErhR64UeuECAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAVQYXVzZQAAAAAAAQAAABgA#####wAAAP8B#####xBAh#Cj1wo9cUBbcKPXCj1wAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAKTWFzcUFuZ0RydAAAAAAAAQAAABkAAAAXAP####8AAAD#Af####8QQIw4o9cKPXFAXPCj1wo9cAIAAAAAAAAAAAAAAAABAAAAAAAAAAAACUFwcEFuZ0RydAAAAAAAAQAAABkA#####wAAAAEAEUNNYWNyb1N1aXRlTWFjcm9zAP####8AAAD#Af####8QQFjFHrhR64VAeHwo9cKPXAIAAAAAAAAAAAAAAAABAAAAAAAAAAAAC2h5cG90w6ludXNlAAAAAAALAAAAHgAAABsAAAAdAAAAHwAAABwAAAAdAAAAHgAAABsAAAAdAAAAHwAAABwAAAAVAP####8AAAD#AAMAAAAgQELJWhOPSZcAAAABAAAAFwAAABYAAAAO##########8='\n        }\n      }\n      texte = `Dans la figure ci-dessous, le triangle $${nom_du_triangle}$ est rectangle en $${s0}$.<br>`\n\n      if (typesDeQuestions == 1) {\n        // calcul de l'angle 1 (arccos)\n        texte += `$${s1 + s2}=${s12}$ cm<br>`\n        texte += `$${s0 + s1}=${s01}$ cm<br>`\n        texte += `Calculer l'angle $\\\\widehat{${s0 + s1 + s2}}$ à 1° près.`\n      }\n      if (typesDeQuestions == 2) {\n        // Calcul de l'angle 2 (90-arccos)\n        texte += `$${s1 + s2}=${s12}$ cm<br>`\n        texte += `$${s0 + s1}=${s01}$ cm<br>`\n        texte += `Calculer l'angle $\\\\widehat{${s0 + s2 + s1}}$ à 1° près.`\n      }\n      if (typesDeQuestions == 3) {\n        // calcul de l'angle 1 (arcsin)\n        texte += `$${s0 + s2}=${s02}$ cm<br>`\n        texte += `$${s1 + s2}=${s12}$ cm<br>`\n        texte += `Calculer l'angle $\\\\widehat{${s0 + s1 + s2}}$ à 1° près.`\n      }\n      if (typesDeQuestions == 4) {\n        // Calcul de l'angle 2 (arcsin)\n        texte += `$${s1 + s2}=${s12}$ cm<br>`\n        texte += `$${s0 + s1}=${s01}$ cm<br>`\n        texte += `Calculer l'angle $\\\\widehat{${s0 + s2 + s1}}$ à 1° près.`\n      }\n      if (typesDeQuestions == 5) {\n        // calcul de l'angle 1 (arctan)\n        texte += `$${s0 + s2}=${s02}$ cm<br>`\n        texte += `$${s0 + s1}=${s01}$ cm<br>`\n        texte += `Calculer l'angle $\\\\widehat{${s0 + s1 + s2}}$ à 1° près.`\n      }\n      if (typesDeQuestions == 6) {\n        // Calcul de l'angle 2 (arctan)\n        texte += `$${s0 + s2}=${s02}$ cm<br>`\n        texte += `$${s0 + s1}=${s01}$ cm<br>`\n        texte += `Calculer l'angle $\\\\widehat{${s0 + s2 + s1}}$ à 1° près.`\n      }\n\n      this.typeExercice = 'MG32'\n      this.MG32codeBase64 = codeBase64\n      this.mg32init = (mtg32App, idDoc) => {\n        mtg32App.giveFormula2(idDoc, 'x2', y2)\n        mtg32App.giveFormula2(idDoc, 'x1', x1)\n        mtg32App.giveFormula2(idDoc, 'alphadeg', alpha1deg)\n        mtg32App.rename(idDoc, 'A', s0)\n        mtg32App.rename(idDoc, 'B', s1)\n        mtg32App.rename(idDoc, 'C', s2)\n        mtg32App.calculate(idDoc)\n        mtg32App.display(idDoc)\n      }\n      texte += `<br>$\\\\footnotesize{\\\\textit{Le point \\\\thickspace ${s0} peut être déplacé (si la figure est tronquée).}}$<br>`\n    } else {\n      // sortie Latex\n      texte = '\\\\begin{minipage}{.7 \\\\linewidth} \t\\\\vspace{0cm} Sur la figure ci-contre, on a  : \\\\begin{itemize}'\n      texte += `\\n\\t\\\\item Le triangle $${nom_du_triangle}$ est rectangle en $${s0}$;`\n\n      if (typesDeQuestions == 1) {\n        // Calcul de l'angle coté adjacent (Arccos)\n        texte += `\\n\\t\\\\item $${s1 + s2}=${s12}~\\\\text{cm}$`\n        texte += `\\n\\t\\\\item $${s0 + s1}=${s01}~\\\\text{cm}$`\n        texte += `\\\\end{itemize} \\\\bigskip\\n\\t  Calculer l'angle $\\\\widehat{${s0 + s1 + s2}}$ à 1° près. \\\\end{minipage}`\n      }\n      if (typesDeQuestions == 2) {\n        // Calcul de l'angle opposé (90-Arccos)\n        texte += `\\n\\t\\\\item $${s1 + s2}=${s12}~\\\\text{cm}$`\n        texte += `\\n\\t\\\\item $${s0 + s1}=${s01}~\\\\text{cm}$`\n        texte += `\\\\end{itemize} \\\\bigskip\\n\\t  Calculer l'angle $\\\\widehat{${s0 + s2 + s1}}$ à 1° près. \\\\end{minipage}`\n      }\n      if (typesDeQuestions == 3) {\n        // Calcul de l'angle 1 (Arcsin)\n        texte += `\\n\\t\\\\item $${s1 + s2}=${s12}~\\\\text{cm}$`\n        texte += `\\n\\t\\\\item $${s0 + s2}=${s02}~\\\\text{cm}$`\n        texte += `\\\\end{itemize} \\\\bigskip\\n\\t  Calculer l'angle $\\\\widehat{${s0 + s1 + s2}}$ à 1° près. \\\\end{minipage}`\n      }\n      if (typesDeQuestions == 4) {\n        // Calcul de l'angle 2 (Arcsin)\n        texte += `\\n\\t\\\\item $${s1 + s2}=${s12}~\\\\text{cm}$`\n        texte += `\\n\\t\\\\item $${s0 + s1}=${s01}~\\\\text{cm}$`\n        texte += `\\\\end{itemize} \\\\bigskip\\n\\t  Calculer l'angle $\\\\widehat{${s0 + s2 + s1}}$ à 1° près. \\\\end{minipage}`\n      }\n      if (typesDeQuestions == 5) {\n        // Calcul de l'angle 1 (Arctan)\n        texte += `\\n\\t\\\\item $${s0 + s2}=${s02}~\\\\text{cm}$`\n        texte += `\\n\\t\\\\item $${s0 + s1}=${s01}~\\\\text{cm}$`\n        texte += `\\\\end{itemize} \\\\bigskip\\n\\t  Calculer l'angle $\\\\widehat{${s0 + s1 + s2}}$ à 1° près. \\\\end{minipage}`\n      }\n      if (typesDeQuestions == 6) {\n        // Calcul de l'angle 2 (Arctan)\n        texte += `\\n\\t\\\\item $${s0 + s2}=${s02}~\\\\text{cm}$`\n        texte += `\\n\\t\\\\item $${s0 + s1}=${s01}~\\\\text{cm}$`\n        texte += `\\\\end{itemize} \\\\bigskip\\n\\t  Calculer l'angle $\\\\widehat{${s0 + s2 + s1}}$ à 1° près. \\\\end{minipage}`\n      }\n      texte += '\\\\begin{minipage}{0.3 \\\\linewidth}'\n      // dessin de la figure\n      texte += '\\n \\\\begin{tikzpicture}[scale=0.7]' // Balise début de figure\n      texte +=\n        '\\n\\t \\\\tkzDefPoints{0/0/' + s0 + ',' + x1 + '/0/B,0/' + y2 + '/C}' // créer les points du triangle initial\n\n      // Définit les points M et N par homothétie de centre C et de rapport 0,3<k<0,8\n      texte +=\n        '\\n\\t \\\\tkzDefPointBy[rotation= center ' +\n        s0 +\n        ' angle ' +\n        alpha1deg +\n        '](B) \\\\tkzGetPoint{' +\n        s1 +\n        '}' // transformer le premier point par rotation\n      texte +=\n        '\\n\\t \\\\tkzDefPointBy[rotation= center ' +\n        s0 +\n        ' angle ' +\n        alpha1deg +\n        '](C) \\\\tkzGetPoint{' +\n        s2 +\n        '}' // transformer le deuxième point par rotation\n      texte += '\\n\\t \\\\tkzDrawPolygon(' + s0 + ',' + s1 + ',' + s2 + ')' // Trace le triangle\n\n      // marquer l'angle droit\n      texte +=\n        '\\n\\t \\\\tkzDefPointBy[homothety=center ' +\n        s0 +\n        ' ratio 0.1](' +\n        s1 +\n        ')' +\n        '\\\\tkzGetPoint{B}'\n      texte +=\n        '\\n\\t \\\\tkzDefPointBy[rotation= center ' +\n        s0 +\n        ' angle 90](B) \\\\tkzGetPoint{C}'\n      texte +=\n        '\\n\\t \\\\tkzDefPointBy[homothety=center ' +\n        s0 +\n        ' ratio 0.1414](' +\n        s1 +\n        ')' +\n        '\\\\tkzGetPoint{A}'\n      texte +=\n        '\\n\\t \\\\tkzDefPointBy[rotation= center ' +\n        s0 +\n        ' angle 45](A) \\\\tkzGetPoint{A}'\n      texte += '\\n\\t \\\\tkzDrawPolygon(' + s0 + ',B,A,C)' // Trace la marque d'angle droit\n      if (alpha1deg > 0) {\n        // rotation \"angle droit dessous\"\n        texte += '\\n\\t \\\\tkzLabelPoints[below](' + s0 + ')' // nomme les points\n        texte += '\\n\\t \\\\tkzLabelPoints[above right](' + s1 + ')'\n        texte += '\\n\\t \\\\tkzLabelPoints[left](' + s2 + ')'\n      } else {\n        // rotation \"angle droit dessus\" position du nom inversée\n        texte += '\\n\\t \\\\tkzLabelPoints[left](' + s0 + ')' // nomme les points\n        texte += '\\n\\t \\\\tkzLabelPoints[below left](' + s1 + ')'\n        texte += '\\n\\t \\\\tkzLabelPoints[above right](' + s2 + ')'\n      }\n      texte += '\\n \\\\end{tikzpicture}' // Balise de fin de figure\n      texte += '\\\\end{minipage}'\n    }\n    if (typesDeQuestions == 1) {\n      texteCorr += `Le cosinus de l'angle $\\\\widehat{${s0 + s1 + s2}}$ est défini par :<br>`\n      texteCorr += `$\\\\cos \\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s0 + s1, s1 + s2)}$<br>`\n      texteCorr += 'Avec les données numériques :<br>'\n      texteCorr += `$\\\\cos\\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s01, s12)}$<br>`\n      texteCorr += `On en déduit que $\\\\widehat{${s0 + s1 + s2}}=\\\\arccos\\\\left(${texFraction(s01, s12)}\\\\right)$<br>`\n      texteCorr += `Soit $\\\\widehat{${s0 + s1 + s2}}\\\\approx${angle1}\\\\degree$`\n    }\n    if (typesDeQuestions == 2) {\n      texteCorr += `Le cosinus de l'angle $\\\\widehat{${s0 + s1 + s2}}$ est défini par :<br>`\n      texteCorr += `$\\\\cos \\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s0 + s1, s1 + s2)}$<br>`\n      texteCorr += 'Avec les données numériques :<br>'\n      texteCorr += `$\\\\cos\\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s01, s12)}$<br>`\n      texteCorr += `On en déduit que $\\\\widehat{${s0 + s1 + s2}}=\\\\arccos\\\\left(${texFraction(s01, s12)}\\\\right)$<br>`\n      texteCorr += `Soit $\\\\widehat{${s0 + s1 + s2}}\\\\approx${angle1}\\\\degree$<br>`\n      texteCorr += 'Or, dans un triangle rectangle les angles aigus sont complémentaires, donc :<br>'\n      texteCorr += `$\\\\widehat{${s0 + s2 + s1}}\\\\approx90-${angle1}\\\\approx${angle2}\\\\degree$`\n    }\n    if (typesDeQuestions == 3) {\n      texteCorr += `Le sinus de l'angle $\\\\widehat{${s0 + s1 + s2}}$ est défini par :<br>`\n      texteCorr += `$\\\\sin \\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s0 + s2, s1 + s2)}$<br>`\n      texteCorr += 'Avec les données numériques :<br>'\n      texteCorr += `$\\\\sin\\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s02, s12)}$<br>`\n      texteCorr += `On en déduit que $\\\\widehat{${s0 + s1 + s2}}=\\\\arcsin\\\\left(${texFraction(s02, s12)}\\\\right)$<br>`\n      texteCorr += `Soit $\\\\widehat{${s0 + s1 + s2}}\\\\approx${angle1}\\\\degree$`\n    }\n    if (typesDeQuestions == 4) {\n      texteCorr += `Le sinus de l'angle $\\\\widehat{${s0 + s2 + s1}}$ est défini par :<br>`\n      texteCorr += `$\\\\sin \\\\left(\\\\widehat{${s0 + s2 + s1}}\\\\right)=${texFraction(s0 + s1, s1 + s2)}$<br>`\n      texteCorr += 'Avec les données numériques :<br>'\n      texteCorr += `$\\\\sin\\\\left(\\\\widehat{${s0 + s2 + s1}}\\\\right)=${texFraction(s01, s12)}$<br>`\n      texteCorr += `On en déduit que $\\\\widehat{${s0 + s2 + s1}}=\\\\arcsin\\\\left(${texFraction(s01, s12)}\\\\right)$<br>`\n      texteCorr += `Soit $\\\\widehat{${s0 + s2 + s1}}\\\\approx${angle2}\\\\degree$`\n    }\n    if (typesDeQuestions == 5) {\n      texteCorr += `La tangente de l'angle $\\\\widehat{${s0 + s1 + s2}}$ est définie par :<br>`\n      texteCorr += `$\\\\tan \\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s0 + s2, s0 + s1)}$<br>`\n      texteCorr += 'Avec les données numériques :<br>'\n      texteCorr += `$\\\\tan\\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s02, s01)}$<br>`\n      texteCorr += `On en déduit que $\\\\widehat{${s0 + s1 + s2}}=\\\\arctan\\\\left(${texFraction(s02, s01)}\\\\right)$<br>`\n      texteCorr += `Soit $\\\\widehat{${s0 + s1 + s2}}\\\\approx${angle1}\\\\degree$`\n    }\n    if (typesDeQuestions == 6) {\n      texteCorr += `La tangente de l'angle $\\\\widehat{${s0 + s2 + s1}}$ est définie par :<br>`\n      texteCorr += `$\\\\tan \\\\left(\\\\widehat{${s0 + s2 + s1}}\\\\right)=${texFraction(s0 + s1, s0 + s2)}$<br>`\n      texteCorr += 'Avec les données numériques :<br>'\n      texteCorr += `$\\\\tan\\\\left(\\\\widehat{${s0 + s2 + s1}}\\\\right)=${texFraction(s01, s02)}$<br>`\n      texteCorr += `On en déduit que $\\\\widehat{${s0 + s2 + s1}}=\\\\arctan\\\\left(${texFraction(s01, s02)}\\\\right)$<br>`\n      texteCorr += `Soit $\\\\widehat{${s0 + s2 + s1}}\\\\approx${angle2}\\\\degree$`\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    2,\n    \"1 : Calcul de l'angle avec Acos \\n 2 : Calcul de l'angle avec Acos, Asin ou Atan\"\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}