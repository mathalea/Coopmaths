{"version":3,"file":"js/30058.0b530b2eece726036502.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N60-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, rienSi1, ecritureAlgebrique, ecritureParentheseSiNegatif, signe, abs, pgcd, texFractionReduite, miseEnEvidence, texFraction, texSymbole } from '../../modules/outils.js'\n\nexport const titre = 'Inéquation du premier degré'\n\n/**\n * Inéquation du premier degré\n * * Type 1 : x+a≤b ou ax≤b\n * * Type 2 : ax+b≤c\n * * Type 3 : ax+b≤cx+d\n * * Tous les types\n * @author Remi Angot et Guillaume Valmont\n * 2N60-4, ex 2L13\n */\nexport default function ExerciceInequation1 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Résoudre les inéquations suivantes'\n  this.spacing = 2\n  context.isHtml ? (this.spacingCorr = 3) : (this.spacingCorr = 2)\n  this.correctionDetailleeDisponible = true\n  if (!context.isHtml) {\n    this.correctionDetaillee = false\n  }\n  this.sup = true // Avec des nombres relatifs\n  this.sup2 = 4 // Choix du type d'inéquation\n  this.nbQuestions = 6\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions\n    switch (this.sup2.toString()) {\n      case '1':\n        listeTypeDeQuestions = ['ax≤b', 'x+b≤c']\n        break\n      case '2':\n        listeTypeDeQuestions = ['ax+b≤c']\n        break\n      case '3':\n        listeTypeDeQuestions = ['ax+b≤cx+d']\n        break\n      default:\n        listeTypeDeQuestions = [\n          'ax+b≤0',\n          'ax+b≤c',\n          'ax≤b',\n          'x+b≤c',\n          'ax+b≤cx+d'\n        ]\n        break\n    }\n    listeTypeDeQuestions = combinaisonListes(\n      listeTypeDeQuestions,\n      this.nbQuestions\n    )\n    for (let i = 0, a, b, c, d, symboleInegalite, symboleInegaliteOppose, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      a = randint(2, 13)\n      b = randint(1, 13)\n      c = randint(1, 13)\n      d = randint(1, 13)\n      switch (randint(1, 4)) {\n        case 1:\n          symboleInegalite = '<'\n          symboleInegaliteOppose = '>'\n          break\n        case 2:\n          symboleInegalite = '≤'\n          symboleInegaliteOppose = '≥'\n          break\n        case 3:\n          symboleInegalite = '>'\n          symboleInegaliteOppose = '<'\n          break\n        case 4:\n          symboleInegalite = '≥'\n          symboleInegaliteOppose = '≤'\n          break\n      }\n      if (this.sup) {\n        a *= choice([-1, 1])\n        b *= choice([-1, 1])\n        c *= choice([-1, 1])\n        d *= choice([-1, 1])\n      }\n      if (listeTypeDeQuestions[i] === 'ax+b≤0' ||\n        listeTypeDeQuestions[i] === 'ax+b≤c') {\n        if (listeTypeDeQuestions[i] === 'ax+b≤0') {\n          c = 0\n        }\n        if (!this.sup && c < b) {\n          b = randint(1, 9)\n          c = randint(b, 15) // c sera plus grand que b pour que c-b>0\n        }\n        texte = `$${a}x${ecritureAlgebrique(b)}${texSymbole(symboleInegalite)}${c}$`\n        texteCorr = texte + '<br>'\n        if (this.correctionDetaillee) {\n          if (b > 0) {\n            texteCorr += `On soustrait $${b}$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${-1 * b}$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$${a}x${ecritureAlgebrique(b)}${miseEnEvidence(ecritureAlgebrique(-1 * b))}\n          ${texSymbole(symboleInegalite)}${c}${miseEnEvidence(ecritureAlgebrique(-1 * b))}$<br>`\n        texteCorr += `$${a}x${texSymbole(symboleInegalite)}${c - b}$<br>`\n        if (this.correctionDetaillee) {\n          texteCorr += `On divise les deux membres par $${a}$.<br>`\n          if (a < 0) {\n            texteCorr += `Comme $${a}$ est négatif, l'inégalité change de sens.<br>`\n          }\n        }\n        if (a < 0) {\n          texteCorr += `$${a}x${miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a) +\n            texSymbole(symboleInegaliteOppose))}${c - b + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a))}$<br>`\n          texteCorr += `$x${texSymbole(symboleInegaliteOppose)}${texFraction(c - b, a)}$`\n          texteCorr += `<br>$x${texSymbole(symboleInegaliteOppose)}${texFractionReduite(c - b, a)}$`\n        } else {\n          texteCorr += `$${a}x${miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a))}\n            ${texSymbole(symboleInegalite)}${c - b + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a))}$<br>`\n          texteCorr += `$x${texSymbole(symboleInegalite)}${texFraction(c - b, a)}$`\n          if (pgcd(abs(a), abs(c - b)) > 1) {\n            texteCorr += `<br>$x${texSymbole(symboleInegalite)}${texFractionReduite(c - b, a)}$`\n          }\n        }\n        if ((symboleInegalite === '<' && a >= 0) || (symboleInegalite === '>' && a < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${texFractionReduite(c - b, a)} \\\\right[ $.`\n        } else if ((symboleInegalite === '≤' && a >= 0) || (symboleInegalite === '≥' && a < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${texFractionReduite(c - b, a)} \\\\right] $.`\n        } else if ((symboleInegalite === '>' && a >= 0) || (symboleInegalite === '<' && a < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] ${texFractionReduite(c - b, a)} , +\\\\infty \\\\right[ $.`\n        } else if ((symboleInegalite === '≥' && a >= 0) || (symboleInegalite === '≤' && a < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left[ ${texFractionReduite(c - b, a)} , +\\\\infty \\\\right[ $.`\n        }\n      }\n      if (listeTypeDeQuestions[i] === 'x+b≤c') {\n        a = 1\n        if (!this.sup && c < b) {\n          b = randint(-9, 9, [0]) // b peut être négatif, ça sera une inéquation du type x-b=c\n          c = abs(randint(b, 15)) // c sera plus grand que b pour que c-b>0\n        }\n        texte = `$x${ecritureAlgebrique(b)}${texSymbole(symboleInegalite)}${c}$`\n        texteCorr = texte + '<br>'\n        if (this.correctionDetaillee) {\n          if (b > 0) {\n            texteCorr += `On soustrait $${b}$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${-1 * b}$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$x${ecritureAlgebrique(b)}${miseEnEvidence(ecritureAlgebrique(-1 * b))}\n          ${texSymbole(symboleInegalite)}${c}${miseEnEvidence(ecritureAlgebrique(-1 * b))}$<br>`\n        texteCorr += `$x${texSymbole(symboleInegalite)}${c - b}$`\n        if ((symboleInegalite === '<' && a >= 0) || (symboleInegalite === '>' && a < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${c - b} \\\\right[ $.`\n        } else if ((symboleInegalite === '≤' && a >= 0) || (symboleInegalite === '≥' && a < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${c - b} \\\\right] $.`\n        } else if ((symboleInegalite === '>' && a >= 0) || (symboleInegalite === '<' && a < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] ${c - b} , +\\\\infty \\\\right[ $.`\n        } else if ((symboleInegalite === '≥' && a >= 0) || (symboleInegalite === '≤' && a < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left[ ${c - b} , +\\\\infty \\\\right[ $.`\n        }\n      }\n      if (listeTypeDeQuestions[i] === 'ax≤b') {\n        texte = `$${a}x${texSymbole(symboleInegalite)}${b}$`\n        texteCorr = texte + '<br>'\n        if (this.correctionDetaillee) {\n          texteCorr += `On divise les deux membres par $${a}$.<br>`\n          if (a < 0) {\n            texteCorr += `Comme $${a}$ est négatif, l'inégalité change de sens.<br>`\n          }\n        }\n        if (a < 0) {\n          texteCorr += `$${a}x${miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a) +\n            texSymbole(symboleInegaliteOppose))}${b + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a))}$<br>`\n          texteCorr += `$x${texSymbole(symboleInegaliteOppose)}${texFraction(b, a)}$`\n          texteCorr += `<br>$x${texSymbole(symboleInegaliteOppose)}${texFractionReduite(b, a)}$`\n        } else {\n          texteCorr += `$${a}x${miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a))}\n            ${texSymbole(symboleInegalite)}${b + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a))}$<br>`\n          texteCorr += `$x${texSymbole(symboleInegalite)}${texFraction(b, a)}$`\n          if (pgcd(abs(a), abs(b)) > 1 || a < 0) {\n            texteCorr += `<br>$x${texSymbole(symboleInegalite)}${texFractionReduite(b, a)}$`\n          }\n        }\n        if ((symboleInegalite === '<' && a >= 0) || (symboleInegalite === '>' && a < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${texFractionReduite(b, a)} \\\\right[ $.`\n        } else if ((symboleInegalite === '≤' && a >= 0) || (symboleInegalite === '≥' && a < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${texFractionReduite(b, a)} \\\\right] $.`\n        } else if ((symboleInegalite === '>' && a >= 0) || (symboleInegalite === '<' && a < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] ${texFractionReduite(b, a)} , +\\\\infty \\\\right[ $.`\n        } else if ((symboleInegalite === '≥' && a >= 0) || (symboleInegalite === '≤' && a < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left[ ${texFractionReduite(b, a)} , +\\\\infty \\\\right[ $.`\n        }\n      }\n      if (listeTypeDeQuestions[i] === 'ax+b≤cx+d') {\n        if (c === a) {\n          c = randint(1, 13, [a])\n        } // sinon on arrive à une division par 0\n        if (!this.sup && a < c) {\n          c = randint(1, 9)\n          a = randint(c + 1, 15) // a sera plus grand que c pour que a-c>0\n        }\n        if (!this.sup && d < b) {\n          b = randint(1, 9)\n          d = randint(b + 1, 15) // d sera plus grand que b pour que d-b>0\n        }\n        texte = `$${rienSi1(a)}x${ecritureAlgebrique(b)}${texSymbole(symboleInegalite)} ${rienSi1(c)}x${ecritureAlgebrique(d)}$`\n        texteCorr = texte + '<br>'\n        if (this.correctionDetaillee) {\n          if (c > 0) {\n            texteCorr += `On soustrait $${rienSi1(c)}x$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${rienSi1(-1 * c)}x$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$${rienSi1(a)}x${ecritureAlgebrique(b)}${miseEnEvidence(signe(-1 * c) + rienSi1(abs(c)) + 'x')}\n          ${texSymbole(symboleInegalite)}${c}x${ecritureAlgebrique(d)}${miseEnEvidence(signe(-1 * c) + rienSi1(abs(c)) + 'x')}$<br>`\n        texteCorr += `$${rienSi1(a - c)}x${ecritureAlgebrique(b)}${texSymbole(symboleInegalite)}${d}$<br>`\n        if (this.correctionDetaillee) {\n          if (b > 0) {\n            texteCorr += `On soustrait $${b}$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${-1 * b}$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$${rienSi1(a - c)}x${ecritureAlgebrique(b)}${miseEnEvidence(ecritureAlgebrique(-1 * b))}\n          ${texSymbole(symboleInegalite)}${d}${miseEnEvidence(ecritureAlgebrique(-1 * b))}$<br>`\n        texteCorr += `$${rienSi1(a - c)}x${texSymbole(symboleInegalite)}${d - b}$<br>`\n\n        if (this.correctionDetaillee) {\n          texteCorr += `On divise les deux membres par $${a - c}$.<br>`\n          if (a - c < 0) {\n            texteCorr += `Comme $${a - c}$ est négatif, l'inégalité change de sens.<br>`\n          }\n        }\n        if (a - c < 0) {\n          texteCorr += `$${rienSi1(a - c)}x${miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a - c) +\n            texSymbole(symboleInegaliteOppose))}${d - b + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a - c))}$<br>`\n          texteCorr += `$x${texSymbole(symboleInegaliteOppose)}${texFraction(d - b, a - c)}$`\n          texteCorr += `<br>$x${texSymbole(symboleInegaliteOppose)}${texFractionReduite(d - b, a - c)}$`\n        } else {\n          texteCorr += `$${rienSi1(a - c)}x${miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a - c))}\n            ${texSymbole(symboleInegalite)}${d - b + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a - c))}$<br>`\n          texteCorr += `$x${texSymbole(symboleInegalite)}${texFraction(d - b, a - c)}$`\n          if (pgcd(abs(d - b), abs(a - c)) > 1 || a - c < 0) {\n            texteCorr += `<br>$x${texSymbole(symboleInegalite)}${texFractionReduite(d - b, a - c)}$`\n          }\n        }\n        if ((symboleInegalite === '<' && a - c >= 0) || (symboleInegalite === '>' && a - c < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${texFractionReduite(d - b, a - c)} \\\\right[ $.`\n        } else if ((symboleInegalite === '≤' && a - c >= 0) || (symboleInegalite === '≥' && a - c < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${texFractionReduite(d - b, a - c)} \\\\right] $.`\n        } else if ((symboleInegalite === '>' && a - c >= 0) || (symboleInegalite === '<' && a - c < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] ${texFractionReduite(d - b, a - c)} , +\\\\infty \\\\right[ $.`\n        } else if ((symboleInegalite === '≥' && a - c >= 0) || (symboleInegalite === '≤' && a - c < 0)) {\n          texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left[ ${texFractionReduite(d - b, a - c)} , +\\\\infty \\\\right[ $.`\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte) // replace(/1x/g,'x')); //remplace 1x par x\n        this.listeCorrections.push(texteCorr) // .replace(/1x/g,'x')); //remplace 1x par x\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Avec des nombres relatifs']\n  this.besoinFormulaire2Numerique = [\n    \"Type d'inéquations\",\n    4,\n    '1: ax≤b ou x+a≤b ou x-a≤b\\n2: ax+b≤c\\n3: ax+b≤cx+d\\n4: Les 2 types précédents'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ExerciceInequation1","Exercice","this","consigne","spacing","context","spacingCorr","correctionDetailleeDisponible","correctionDetaillee","sup","sup2","nbQuestions","nouvelleVersion","listeTypeDeQuestions","listeQuestions","listeCorrections","toString","combinaisonListes","a","b","c","d","symboleInegalite","symboleInegaliteOppose","texte","texteCorr","i","cpt","randint","choice","ecritureAlgebrique","texSymbole","miseEnEvidence","ecritureParentheseSiNegatif","texFraction","texFractionReduite","pgcd","abs","rienSi1","signe","indexOf","push","listeQuestionsToContenu","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined"],"sourceRoot":""}