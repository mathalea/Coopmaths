{"version":3,"file":"js/25367.7085ff7409e6c13793a8.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N11-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, shuffle, combinaisonListesSansChangerOrdre, texNombre, miseEnEvidence } from '../../modules/outils.js'\nexport const titre = 'Encadrer un entier entre deux entiers consécutifs'\n\n/**\n* * Encadrer un nombre entier par deux entier consécutifs\n* * 6N11-3\n* @author Sébastien Lozano\n*/\n\nexport default function EncadrerUnEntierParDeuxEntiersConsecutifs () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.beta = false\n  this.sup = 1\n  if (this.beta) {\n    this.nbQuestions = 6\n  } else {\n    this.nbQuestions = 3\n  };\n\n  this.consigne = ''\n\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  // this.nbQuestionsModifiable = false;\n  context.isHtml ? this.spacing = 3 : this.spacing = 2\n  context.isHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5\n\n  let typesDeQuestionsDisponibles\n\n  this.nouvelleVersion = function () {\n    if (this.beta) {\n      typesDeQuestionsDisponibles = [0, 1, 2, 3, 4, 5]\n    } else {\n      typesDeQuestionsDisponibles = shuffle([choice([0, 1]), choice([2, 3]), choice([4, 5])])\n    };\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    // let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // pour la précision d'encadrement\n      let precision\n\n      // selon la precision on veut certains chiffres plus souvant que d'autres ...\n      function myNombres (nbChiffres) {\n        let sortie = ''\n        // on fabrique le nombre à partir de ses chiffres et on veut des cas limites\n        let mu, md, mc, mmu, mmd, mmc\n        const N = choice([[randint(0, 9, [0]), 0, 0, 0, 0, 0, 0, 0, 0], [randint(0, 9, [0]), 9, 9, 9, 9, 9, 9, 9, 9], [randint(0, 9, [0]), randint(0, 9), randint(0, 9), randint(0, 9), randint(0, 9), randint(0, 9), randint(0, 9), randint(0, 9), randint(0, 9)]])\n        mmc = N[0]\n        mmd = N[1]\n        mmu = N[2]\n        mc = N[3]\n        md = N[4]\n        mu = N[5]\n        const c = N[6]\n        const d = N[7]\n        const u = N[8]\n        switch (nbChiffres) {\n          case 4:\n            mu = randint(0, 9, [0])\n            sortie = mu.toString() + c.toString() + d.toString() + u.toString()\n            break\n          case 5:\n            md = randint(0, 9, [0])\n            sortie = md.toString() + mu.toString() + c.toString() + d.toString() + u.toString()\n            break\n          case 6:\n            mc = randint(0, 9, [0])\n            sortie = mc.toString() + md.toString() + mu.toString() + c.toString() + d.toString() + u.toString()\n            break\n          case 7:\n            mmu = randint(0, 9, [0])\n            sortie = mmu.toString() + mc.toString() + md.toString() + mu.toString() + c.toString() + d.toString() + u.toString()\n            break\n          case 8:\n            mmd = randint(0, 9, [0])\n            sortie = mmd.toString() + mmu.toString() + mc.toString() + md.toString() + mu.toString() + c.toString() + d.toString() + u.toString()\n            break\n          case 9:\n            mmc = randint(0, 9, [0])\n            sortie = mmc.toString() + mmd.toString() + mmu.toString() + mc.toString() + md.toString() + mu.toString() + c.toString() + d.toString() + u.toString()\n            break\n        };\n        return sortie\n      };\n\n      this.sup = Number(this.sup) // attention le formulaire renvoie un string, on a besoin d'un number pour le switch !\n      switch (this.sup) {\n        case 1:\n          this.consigne = 'Compléter avec le nombre entier qui précède et le nombre entier qui suit.'\n          precision = 1\n          break\n        case 2:\n          this.consigne = 'Compléter avec le multiple de 10 qui précède et le multiple de 10 qui suit.'\n          precision = 10\n          break\n        case 3:\n          this.consigne = 'Compléter avec le multiple de 100 qui précède et le multiple de 100 qui suit.'\n          precision = 100\n          break\n      };\n\n      // pour les situations, autant de situations que de cas dans le switch !\n      const situations = [\n        { // case 0 -->\n          nombre: Number(myNombres(4))\n        },\n        { // case 1 -->\n          nombre: Number(myNombres(5))\n        },\n        { // case 2 -->\n          nombre: Number(myNombres(6))\n        },\n        { // case 3 -->\n          nombre: Number(myNombres(7))\n        },\n        { // case 4 -->\n          nombre: Number(myNombres(8))\n        },\n        { // case 5 -->\n          nombre: Number(myNombres(9))\n        }\n      ]\n\n      // une fonction pour les correction à la precision près\n      function encadrementCorr (nb, precision) {\n        if (precision === 1) {\n          return `$${miseEnEvidence(texNombre(Math.trunc(nb / precision) * precision - precision))} < ${texNombre(nb)} < ${miseEnEvidence(texNombre(Math.trunc(nb / precision) * precision + precision))}$`\n        } else if (precision === 10 || precision === 100) {\n          if (nb % precision === 0) {\n            return `$${miseEnEvidence(texNombre(Math.trunc(nb / precision) * precision - precision))} < ${texNombre(nb)} < ${miseEnEvidence(texNombre(Math.trunc(nb / precision) * precision + precision))}$`\n          } else {\n            return `$${miseEnEvidence(texNombre(Math.trunc(nb / precision) * precision))} < ${texNombre(nb)} < ${miseEnEvidence(texNombre(Math.trunc(nb / precision) * precision + precision))}$`\n          };\n        };\n      };\n\n      const enonces = []\n      for (let k = 0; k < situations.length; k++) {\n        enonces.push({\n          enonce: `\n          $\\\\ldots < ${texNombre(situations[k].nombre)} < \\\\ldots$\n          `,\n          question: '',\n          correction: `\n          ${encadrementCorr(situations[k].nombre, precision)}\n          `\n        })\n      };\n\n      // autant de case que d'elements dans le tableau des situations\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texte += '             '\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[0].correction}`\n          };\n          break\n        case 1:\n          texte = `${enonces[1].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[1].correction}`\n          };\n          break\n        case 2:\n          texte = `${enonces[2].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[2].correction}`\n          };\n          break\n        case 3:\n          texte = `${enonces[3].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[3].correction}`\n            texte += '             '\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[3].correction}`\n          };\n          break\n        case 4:\n          texte = `${enonces[4].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[4].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[4].correction}`\n          };\n          break\n        case 5:\n          texte = `${enonces[5].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[5].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[5].correction}`\n          };\n          break\n      };\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Encadrer entre deux entiers consécutifs\\n2 : Encadrer entre deux multiples consécutifs de dix\\n3 : Encadrer entre deux multiples consécutifs de cent']\n  // this.besoinFormulaire2CaseACocher = [\"Avec des équations du second degré\"];\n};\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","EncadrerUnEntierParDeuxEntiersConsecutifs","typesDeQuestionsDisponibles","Exercice","this","beta","sup","nbQuestions","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","nouvelleVersion","shuffle","choice","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","precision","myNombres","nbChiffres","mu","md","mc","mmu","mmd","mmc","sortie","N","randint","c","d","u","toString","Number","situations","nombre","encadrementCorr","nb","miseEnEvidence","texNombre","Math","trunc","enonces","k","length","push","enonce","question","correction","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined"],"sourceRoot":""}