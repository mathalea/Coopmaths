(self.webpackChunkmathalea=self.webpackChunkmathalea||[]).push([[6824],{26824:(e,t,s)=>{"use strict";s.r(t),s.d(t,{titre:()=>l,default:()=>r});var a=s(67567),i=s(24477),n=s(17199),h=s(39607);const l="Représentation de solides";function r(){a.default.call(this),this.titre=l,this.nbQuestions=3,this.nbQuestionsModifiable=!0,this.nbCols=1,this.nbColsCorr=1,this.pasDeVersionLatex=!1,this.pas_de_version_HMTL=!1,this.sup=1,this.sup2=1,this.nouvelleVersion=function(){this.listeQuestions=[],this.listeCorrections=[];let e=[];switch(parseInt(this.sup)){case 1:e=[1];case 2:e=[2];case 3:e=[1,2]}function t(e,t,s){let a=new Array(t);for(let s=0;s<t;s++)a[s]=new Array(e);for(let e=0;e<t;e++)a[e][0]=(0,i.nSR)(0,1);for(let n=0;n<t;n++)for(let t=1;t<e;t++)a[n][t]=Math.min(a[n][t-1]+(0,i.nSR)(0,2),s);for(let s=0;s<t;s++)a[s][e-1]=Math.max(1,a[s][e-1]);let n=[];for(let s=t-1;s>-1;s-=1)for(let t=e-1;t>-1;t-=1)for(let e=0;e<a[s][t];e++)n.push([s,t,e]);return n}let s,a,l,r,m=(0,i.SRM)(e,this.nbQuestions),o=2+parseInt(this.sup2),u=o,c=o;for(let e,i,p=0,M=0;p<this.nbQuestions&&M<50;){let x,b,P,f,I,d,y;switch(s=[],a=[],e="Un empilement de cubes est représenté ci-dessous. <br>",i="",m[p]){case 1:e+="Combien de petits cubes contient cet empilement de cubes ? <br>",x=t(o,u,c),b=30,P=-25,s=[];for(let e=0;e<x.length;e++)s.push((0,h.kO)(x[e][0],x[e][1],x[e][2],b,P,{}));f=Math.cos(b*Math.PI/180),d=Math.sin(b*Math.PI/180),I=Math.cos(P*Math.PI/180),y=Math.sin(P*Math.PI/180),l={xmin:-d*u-.5,ymin:-.5,xmax:f*o+.5,ymax:-d*y*o-f*y*u+I*c+.5,pixelsParCm:20,scale:1,mainlevee:!1},e+=(0,n.iR9)(l,s)+" ",b=15,P=-30,s=[];for(let e=0;e<x.length;e++)s.push((0,h.kO)(x[e][0],x[e][1],x[e][2],b,P,{}));l={xmin:-d*u-.5,ymin:-.5,xmax:f*o+.5,ymax:-d*y*o-f*y*u+I*c+.5,pixelsParCm:20,scale:1,mainlevee:!1},e+=(0,n.iR9)(l,s)+" <br>",i+="On peut représenter l'empilement par tranches : <br>",b=30,P=-25,f=Math.cos(b*Math.PI/180),d=Math.sin(b*Math.PI/180),I=Math.cos(P*Math.PI/180),y=Math.sin(P*Math.PI/180),r={xmin:-3*d*u-.5,ymin:-.5,xmax:3*f*o+.5,ymax:-d*y*3*o-f*y*u+I*c+.5,pixelsParCm:20,scale:1,mainlevee:!1},a=[];for(let e=0;e<x.length;e++)a.push((0,h.kO)(3*x[e][0],x[e][1],x[e][2],b,P,{}));i+=(0,n.iR9)(r,a)+"<br>",i+=`Il y a au total ${x.length} cubes.`;break;case 2:e+=`Combien de petits cubes manque-t-il pour reconstruire un grand cube de côté ${o} ? <br>`,x=t(o,u,c),b=30,P=-25,s=[];for(let e=0;e<x.length;e++)s.push((0,h.kO)(x[e][0],x[e][1],x[e][2],b,P,{}));f=Math.cos(b*Math.PI/180),d=Math.sin(b*Math.PI/180),I=Math.cos(P*Math.PI/180),y=Math.sin(P*Math.PI/180),l={xmin:-d*u-.5,ymin:-.5,xmax:f*o+.5,ymax:-d*y*o-f*y*u+I*c+.5,pixelsParCm:20,scale:1,mainlevee:!1},e+=(0,n.iR9)(l,s)+" ",b=15,P=-30,s=[];for(let e=0;e<x.length;e++)s.push((0,h.kO)(x[e][0],x[e][1],x[e][2],b,P,{}));f=Math.cos(b*Math.PI/180),d=Math.sin(b*Math.PI/180),I=Math.cos(P*Math.PI/180),y=Math.sin(P*Math.PI/180),l={xmin:-d*u-.5,ymin:-.5,xmax:f*o+.5,ymax:-d*y*o-f*y*u+I*c+.5,pixelsParCm:20,scale:1,mainlevee:!1},e+=(0,n.iR9)(l,s)+"<br>",i+="On peut, par exemple, représenter l'empilement par tranches : <br>",b=30,P=-25,f=Math.cos(b*Math.PI/180),d=Math.sin(b*Math.PI/180),I=Math.cos(P*Math.PI/180),y=Math.sin(P*Math.PI/180),r={xmin:-3*d*u-.5,ymin:-.5,xmax:3*f*o+.5,ymax:-d*y*3*o-f*y*u+I*c+.5,pixelsParCm:20,scale:1,mainlevee:!1},a=[];for(let e=0;e<x.length;e++)a.push((0,h.kO)(3*x[e][0],x[e][1],x[e][2],b,P,{}));i+=(0,n.iR9)(r,a)+"<br>",i+=`Il y a au total $${x.length}$ cubes. On en veut $${o}\\times ${u} \\times ${c} = ${o*u*c}$. <br>`,i+=`Il manque $${o*u*c-x.length}$ cubes.`}-1==this.listeQuestions.indexOf(e)&&(this.listeQuestions.push(e),this.listeCorrections.push(i),p++),M++}(0,i.K1R)(this)},this.besoinFormulaireNumerique=["Type de questions",3,"1 : compter les cubes\n2 : compter les cubes manquants\n3 un mélange des deux"],this.besoin_formulaire2_numerique=["Taille de l'empilement",5,"3 \n4 \n5 \n6 \n7"]}}}]);