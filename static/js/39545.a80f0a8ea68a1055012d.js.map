{"version":3,"file":"js/39545.a80f0a8ea68a1055012d.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3L14.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, texFractionReduite, texFraction } from '../../modules/outils.js'\nexport const titre = 'Résoudre une équation produit nul'\n\n/**\n * Résolution d'équations de type (ax+b)(cx+d)=0\n* @author Jean-Claude Lhote\n* Tout est dans le nom de la fonction.\n* 3L14\n*/\nexport default function ResoudreUneEquationProduitNul () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Résoudre les équations suivantes'\n  this.nbQuestions = 5\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n  context.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1.5\n  this.spacing = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions = []\n    switch (parseInt(this.sup)) {\n      case 1: listeTypeDeQuestions = combinaisonListes([1, 2], this.nbQuestions)\n        break\n      case 2: listeTypeDeQuestions = combinaisonListes([3, 4], this.nbQuestions)\n        break\n      case 3: listeTypeDeQuestions = combinaisonListes([5, 6], this.nbQuestions)\n        break\n      case 4: listeTypeDeQuestions = combinaisonListes([1, 2, 3, 4, 5, 6], this.nbQuestions)\n    }\n    for (let i = 0, a, b, c, d, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeDeQuestions[i]) {\n        case 1: b = randint(1, 20) // (x+a)(x+b)=0 avec a et b entiers\n          d = randint(1, 20, [b])\n          texte = `$(x+${b})(x+${d})=0$`\n          texteCorr = 'Un produit est nul si l\\'un au moins de ses facteurs est nul.'\n          texteCorr += '<br>' + `$(x+${b})(x+${d})=0$`\n          texteCorr += '<br> Soit ' + `$x+${b}=0$` + ' ou ' + `$x+${d}=0$`\n          texteCorr += '<br> Donc ' + `$x=${0 - b}$` + ' ou ' + `$x=${0 - d}$`\n          break\n        case 2: b = randint(1, 20) // (x-a)(x+b)=0 avec a et b entiers\n          d = randint(1, 20, [b])\n          texte = `$(x-${b})(x+${d})=0$`\n          texteCorr = 'Un produit est nul si l\\'un au moins de ses facteurs est nul.'\n          texteCorr += '<br>' + `$(x-${b})(x+${d})=0$`\n          texteCorr += '<br> Soit ' + `$x-${b}=0$` + ' ou  ' + `$x+${d}=0$`\n          texteCorr += '<br> Donc ' + `$x=${b}$` + ' ou ' + `$x=${0 - d}$`\n          break\n\n        case 3: a = randint(2, 6) // (ax+b)(cx+d)=0  avec b/a et d/c entiers.\n          b = Math.round(randint(1, 5) * a)\n          c = randint(2, 6, [a])\n          d = Math.round(randint(1, 5) * c)\n          texte = `$(${a}x+${b})(${c}x+${d})=0$`\n          texteCorr = 'Un produit est nul si l\\'un au moins de ses facteurs est nul.'\n          texteCorr += '<br>' + `$(${a}x+${b})(${c}x+${d})=0$`\n          texteCorr += '<br> Soit ' + `$${a}x+${b}=0$` + ' ou ' + `$${c}x+${d}=0$`\n          texteCorr += '<br> Donc ' + `$${a}x=${0 - b}$` + ' ou ' + `$${c}x=${0 - d}$`\n          texteCorr += '<br> Donc ' + `$x=-${texFraction(b, a)}$` + ' ou ' + `$x=-${texFraction(d, c)}$`\n          texteCorr += '<br> Donc ' + `$x=${0 - b / a}$` + ' ou ' + `$x=${0 - d / c}$`\n          break\n        case 4: a = randint(2, 6) // (ax+b)(cx-d)=0  avec b/a et d/c entiers.\n          b = Math.round(randint(1, 5) * a)\n          c = randint(2, 6, [a])\n          d = Math.round(randint(1, 5) * c)\n          texte = `$(${a}x+${b})(${c}x-${d})=0$`\n          texteCorr = 'Un produit est nul si l\\'un au moins de ses facteurs est nul.'\n          texteCorr += '<br>' + `$(${a}x+${b})(${c}x-${d})=0$`\n          texteCorr += '<br> Soit ' + `$${a}x+${b}=0$` + ' ou ' + `$${c}x-${d}=0$`\n          texteCorr += '<br> Donc ' + `$${a}x=${0 - b}$` + ' ou ' + `$${c}x=${d}$`\n          texteCorr += '<br> Donc ' + `$x=-${texFraction(b, a)}$` + ' ou ' + `$x=${texFraction(d, c)}$`\n          texteCorr += '<br> Donc ' + `$x=${0 - b / a}$` + ' ou ' + `$x=${d / c}$`\n          break\n        case 5:\n          a = randint(2, 9) // (ax+b)(cx+d)=0 avec b/a et d/c quelconques.\n          b = randint(1, 20, [a])\n          c = randint(2, 9, [a])\n          d = randint(1, 20, [b, c])\n          texte = `$(${a}x+${b})(${c}x+${d})=0$`\n          texteCorr = 'Un produit est nul si l\\'un au moins de ses facteurs est nul.'\n          texteCorr += '<br>' + `$(${a}x+${b})(${c}x+${d})=0$`\n          texteCorr += '<br> Soit ' + `$${a}x+${b}=0$` + ' ou ' + `$${c}x+${d}=0$`\n          texteCorr += '<br> Donc ' + `$${a}x=${0 - b}$` + ' ou ' + `$${c}x=${0 - d}$`\n          texteCorr += '<br> Donc ' + `$x=-${texFraction(b, a)}$`\n          if (texFraction(b, a) !== texFractionReduite(b, a)) { texteCorr += `$=-${texFractionReduite(b, a)}$` }\n          texteCorr += ' ou ' + `$x=-${texFraction(d, c)}$`\n          if (texFraction(d, c) !== texFractionReduite(d, c)) { texteCorr += `$=-${texFractionReduite(d, c)}$` }\n          break\n        case 6:\n          a = randint(2, 9) // (ax+b)(cx-d)=0 avec b/a et d/c quelconques.\n          b = randint(1, 20, [a])\n          c = randint(2, 9, [a])\n          d = randint(1, 20, [b, c])\n          texte = `$(${a}x+${b})(${c}x-${d})=0$`\n          texteCorr = 'Un produit est nul si l\\'un au moins de ses facteurs est nul.'\n          texteCorr += '<br>' + `$(${a}x+${b})(${c}x-${d})=0$`\n          texteCorr += '<br> Soit ' + `$${a}x+${b}=0$` + ' ou ' + `$${c}x-${d}=0$`\n          texteCorr += '<br> Donc ' + `$${a}x=${0 - b}$` + ' ou ' + `$${c}x=${d}$`\n          texteCorr += '<br> Donc ' + `$x=-${texFraction(b, a)}$`\n          if (texFraction(b, a) !== texFractionReduite(b, a)) { texteCorr += `$=-${texFractionReduite(b, a)}$` }\n          texteCorr += ' ou ' + `$x=${texFraction(d, c)}$`\n          if (texFraction(d, c) !== texFractionReduite(d, c)) { texteCorr += `$=${texFractionReduite(d, c)}$` }\n\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        // alert(this.listeQuestions)\n        // alert(this.listeCorrections)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 4, ' 1 : Coefficient de x = 1\\n 2 : Coefficient de x>1 et solutions entières\\n 3 : Solutions rationnelles\\n 4 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ResoudreUneEquationProduitNul","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","context","spacingCorr","spacing","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","parseInt","combinaisonListes","a","b","c","d","texte","texteCorr","i","cpt","randint","Math","round","texFraction","texFractionReduite","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}