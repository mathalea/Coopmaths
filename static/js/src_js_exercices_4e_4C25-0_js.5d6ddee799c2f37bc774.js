/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_4e_4C25-0_js"],{

/***/ "./src/js/exercices/4e/4C25-0.js":
/*!***************************************!*\
  !*** ./src/js/exercices/4e/4C25-0.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Problemes_additifs_fractions)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst Algebrite = __webpack_require__(/*! algebrite */ \"./node_modules/.pnpm/algebrite@1.4.0/node_modules/algebrite/dist/algebrite.js\")\n\n//import {fraction,ListeFraction} from '../../modules/Fractions.js'\n\nconst titre = 'Problèmes additifs et de comparaison sur les rationnels'\n\n/**\n * Problèmes additifs et de comparaion sur les rationnels\n * 4C25-0\n * Mise à jour le 2021-01-30\n * @author Sébastien Lozano\n */\nfunction Problemes_additifs_fractions() {\n  \"use strict\";\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.debug = false;\n  this.sup = 1;\n  if (this.debug) {\n    this.nb_questions = 5;\n  } else {\n    this.nb_questions = 2;\n  }\n  this.titre = titre;\n  this.consigne = `Justifier vos réponses aux problèmes suivants.`;\n\n  this.nb_cols = 1;\n  this.nb_cols_corr = 1;\n  //this.nb_questions_modifiable = false;\n  sortie_html ? (this.spacing = 2) : (this.spacing = 1.5);\n  sortie_html ? (this.spacing_corr = 3) : (this.spacing_corr = 1.15);\n\n  let type_de_questions_disponibles;\n\n  /**\n * @class ListeFraction\n * @classdesc Classe Fraction - Méthodes utiles sur les collections de fractions\n * @author Sébastien Lozano\n */\n\nfunction ListeFraction() {\n  //'use strict'; pas de use strict avec un paramètre du reste\n  /**\n   * @constant {array} denominateurs_amis tableau de tableaux de dénominateurs qui vont bien ensemble pour les calculs\n   * le tableau [12,2,3,4,6] faisait planter 4C25-0\n   */\n  //let denominateurs_amis = [[12,2,3,4,6],[16,2,4,8],[18,2,3,6,9],[20,2,4,5,10],[24,2,3,4,8,12],[30,2,3,5,6],[32,2,16,4,8],[36,2,18,4,9],[40,2,20,4,10,5,8]]\n  let denominateurs_amis = [[16,2,4,8],[18,2,3,6,9],[20,2,4,5,10],[24,2,3,4,8,12],[30,2,3,5,6],[32,2,16,4,8],[36,2,18,4,9],[40,2,20,4,10,5,8]]\n\n /**\n  * \n  * @param  {...any} fractions contient la liste des numérateurs et denominateurs dans l'ordre n1,d1,n2,d2, ... de deux ou plus de fractions\n  * @return {array} renvoie un tableau avec les numérateurs et les dénominateurs triés selon la croissance des quotients [n_frac_min,d_frac_min,...,n_frac_max,d_frac_max]\n  * @example sortFraction(1,2,1,5,1,4,1,3) renvoie [1,5,1,4,1,3,1,2] \n  */\n let sortFractions=function(...fractions) {\n     try {\t\t\n         fractions.forEach(function(element) {\n             if (typeof element != 'number') {\n                 throw new TypeError(`${element} n'est pas un nombre !`);\n             };\n             if ( (fractions.indexOf(element)%2 == 1) && (element == 0)) {\n                 throw new RangeError(`${element} est exclu des valeurs possibles pour les dénominateurs !`)\n             };\n         });\t\n         if (Math.floor(fractions.length/2) <= 1 ) {\n             throw new Error(`Il faut au moins deux fractions !`);\n         };\n         if (fractions.length%2 != 0) {\n             throw new Error(`Il faut un nombre pair de valeurs puisque q'une fraction est représentée par son numérateur et son dénominateur`);\n         };\n         let changed;\n         do{\n              changed = false;\n              for (let i=0; i<(fractions.length-1); i+=2) {\n                 if ((fractions[i]/fractions[i+1]) > (fractions[i+2]/fractions[i+3])) {\n                     let tmp = [fractions[i],fractions[i+1]];\n                     fractions[i]=fractions[i+2];\n                     fractions[i+1] = fractions[i+3];\n                     fractions[i+2] = tmp [0];\n                     fractions[i+3] = tmp[1];\n                     changed = true;\n                 };\n              };\n         } while(changed);\n         return fractions;\n     }\n     catch (e) {\n         console.log(e.message);\n     };\n };\n\n /**\n  * fonction locale pour trouver le ppcm d'un nombre indeterminé d'entiers\n  * @param  {integer} n parametre du reste contenant une liste d'entiers\n  * * la liste d'entiers doit être passé dans un tableau\n  * @return {number} renvoie le ppcm des nombres entiers passés dans le paramètre du reste n\n  * @example ppcm(2,6,4,15) renvoie 60\n  */\n function ppcm([...n]) {\n     try {\n          n.forEach(function(element) {\n             if (typeof element != 'number') {\n                 throw new TypeError(`${element} n'est pas un nombre !`);\n             };\n         });\n         // Quoi faire sans nombres ?\n         if (n.length == 0) {\n             throw new Error(`C'est mieux avec quelques nombres !`)\n         };\n         return parseInt(Algebrite.run(`lcm(${n})`));\n\n     }\n     catch (e) {\n         console.log(e.message);\n     };\n };\n\n /**\n  * \n  * @param  {...any} fractions contient la liste des numérateurs et des dénominateurs dans l'ordre n1,d1,n2,d2, ... de deux ou plus de fractions\n  * @return {array} renvoie un tableau de numérateurs et de dénominateurs avec le même dénominateur dans l'ordre initial.\n  * * Le dénominateur choisi est toujours le ppcm\n  * * Les fractions ne sont pas réduites\n  * @example reduceSameDenominateur(1,2,1,5,2,3) renvoie [15,30,6,30,20,30]\n  */\n  function reduceSameDenominateur(...fractions) {\n     try {\t\t\n      fractions.forEach(function(element) {\n             if (typeof element != 'number') {\n                 throw new TypeError(`${element} n'est pas un nombre !`);\n             };\n             if ( (fractions.indexOf(element)%2 == 1) && (element == 0)) {\n                 throw new RangeError(`${element} est exclu des valeurs possibles pour les dénominateurs !`)\n             };\n         });\t\n         if (Math.floor(fractions.length/2) <= 1 ) {\n             throw new Error(`Il faut au moins deux fractions !`);\n         };\n         if (fractions.length%2 != 0) {\n             throw new Error(`Il faut un nombre pair de valeurs puisque q'une fraction est représentée par son numérateur et son dénominateur`);\n         };\n         let denominateur_commun;\n         let liste_denominateurs = [];\n         for (let i=0; i<fractions.length-1; i+=2) {\n             liste_denominateurs.push(fractions[i+1]);\n         };\n         denominateur_commun = ppcm(liste_denominateurs);\n         let fractions_reduites = [];\n         for (let i=0; i<fractions.length-1; i+=2) {\n             //on calcule le nouveau numérateur\n             fractions_reduites.push(fractions[i]*denominateur_commun/fractions[i+1]);\n             fractions_reduites.push(denominateur_commun);\n         };\n\n         //return [fractions,'-',liste_denominateurs,'-',denominateur_commun,'-',fractions_reduites];\n         return fractions_reduites;\n\n     }\n     catch (e) {\n         console.log(e.message);\n     };\n };\n\n this.sortFractions = sortFractions;\n this.reduceSameDenominateur = reduceSameDenominateur;\n this.denominateurs_amis = denominateurs_amis;\n this.fraction_simplifiee = _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee;\n};\n\n  this.nouvelle_version = function () {\n    if (this.debug) {\n      type_de_questions_disponibles = [1, 2, 3, 4, 5];\n    } else {\n      type_de_questions_disponibles = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([1, 2]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([3, 4, 5])];\n    }\n\n    //let liste_type_de_questions = combinaison_listes(type_de_questions_disponibles,this.nb_questions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes_sans_changer_ordre)(\n      type_de_questions_disponibles,\n      this.nb_questions\n    ); // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n\n    for (\n      let i = 0, texte, texte_corr, cpt = 0;\n      i < this.nb_questions && cpt < 50;\n\n    ) {\n      // on aura besoin des méthodes de la classe Fraction()\n      let frac = new ListeFraction();\n      // on récupère les dénominateurs qui vont bien\n      //let denoms_amis = frac.denominateurs_amis;\n      //C'est mieux avec ceux là, l'algo trouve plus rapidement une solution avec les contraintes à ajouter dans mathsalea_outils.js quand ça sera possible.\n      let denoms_amis = [\n        [40, 2, 20, 4, 10, 5, 8],\n        [60, 2, 30, 3, 20, 4, 15, 5, 12, 6, 10],\n        [80, 2, 40, 4, 20, 5, 16, 8, 10],\n      ];\n      // on aura besoin de ranger tout ça !\n      let frac_rangees, frac_meme_denom_rangees;\n\n      //======================================================\n      //======== \t\tAVEC 3 FRACTIONS\t\t\t  \t========\n      //======================================================\n\n      // le tableau d'objets contenant tout le necesssaire, fractions, énoncé, question ... pour les problème avec 3 fractions\n      let pb_3_f = [];\n      // les numérateurs et dénominateurs des 3 fractions attention les deux premières doivent être inférieures à 1/2 si on veut qu'elles soient toutes positives !\n      // et on veut des fractions distinctes !\n      let nt1, nt2, nt3, dt1, dt2, dt3;\n      let n1, n2, n3, d1, d2, d3;\n      // on choisit un tableau de dénominateurs qui vont bien\n      let denoms_cool_3 = denoms_amis[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, denoms_amis.length - 1)];\n      while (\n        nt1 == nt2 ||\n        nt1 == nt3 ||\n        nt2 == nt3 ||\n        nt1 / dt1 >= 1 / 2 ||\n        nt2 / dt2 >= 1 / 2\n      ) {\n        n1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 6);\n        d1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_3);\n        n2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 10, [n1]); //on évite n1 pour pouvoir retrouver le texte de la plus grande fraction\n        d2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_3, [d1]);\n        n3 = d1 * d2 - n1 * d2 - n2 * d1; //la somme des trois vaut 1 !\n        d3 = d1 * d2;\n\n        nt1 = frac.fraction_simplifiee(n1, d1)[0];\n        dt1 = frac.fraction_simplifiee(n1, d1)[1];\n        nt2 = frac.fraction_simplifiee(n2, d2)[0];\n        dt2 = frac.fraction_simplifiee(n2, d2)[1];\n        nt3 = frac.fraction_simplifiee(n3, d3)[0];\n        dt3 = frac.fraction_simplifiee(n3, d3)[1];\n      }\n\n      //======================================================\n      //========= indice 0 le triathlon des neiges  ==========\n      //======================================================\n      pb_3_f.push({\n        prenoms: [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomM)()],\n        fractionsSimp: [\n          nt1,\n          dt1,\n          \"VTT\",\n          nt2,\n          dt2,\n          \"ski de fond\",\n          nt3,\n          dt3,\n          \"pied\",\n        ],\n        fractionsB: {\n          f1: [nt1, dt1],\n          cat1: \"VTT\",\n          f2: [nt2, dt2],\n          cat2: \"ski de fond\",\n          f3: [nt3, dt3],\n          cat3: \"pied\",\n        },\n        enonce: ``,\n        question: `Pour quelle discipline, la distance est-elle la plus grande ?`,\n        correction: ``,\n      });\n\n      // les 3 prénomns doivent être distincts\n      let p1, p2, p3; // les 3 prénoms\n      while (p1 == p2 || p1 == p3 || p2 == p3) {\n        p1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomF)();\n        p2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomF)();\n        p3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomF)();\n      }\n\n      //======================================================\n      //=========== \t\tindice 1 Miss Math\t\t ===========\n      //======================================================\n      pb_3_f.push({\n        prenoms: [],\n        fractionsSimp: [nt1, dt1, p1, nt2, dt2, p2, nt3, dt3, p3],\n        fractionsB: {\n          f1: [nt1, dt1],\n          cat1: p1,\n          f2: [nt2, dt2],\n          cat2: p2,\n          f3: [nt3, dt3],\n          cat3: p3,\n        },\n        enonce: ``,\n        question: `Qui a été élue ?`,\n        correction: ``,\n      });\n      let currentDate = new Date();\n      let currentAnnee = currentDate.getFullYear();\n\n      //======================================================\n      //====== énoncé indice 0 le triathlon des neiges  ======\n      //======================================================\n      pb_3_f[0].enonce += `Le triathlon des neiges de la vallée des loups comprend trois épreuves qui s'enchaînent : VTT, ski de fond et course à pied.`;\n      pb_3_f[0].enonce += `<br>${pb_3_f[0].prenoms[0]}, un passionné de cette épreuve, s'entraîne régulièrement sur le même circuit. `;\n      pb_3_f[0].enonce += `<br>À chaque entraînement, il parcourt le circuit de la façon suivante : $\\\\dfrac{${pb_3_f[0].fractionsB.f1[0]}}{${pb_3_f[0].fractionsB.f1[1]}}$ à ${pb_3_f[0].fractionsB.cat1}, `;\n      pb_3_f[0].enonce += `$\\\\dfrac{${pb_3_f[0].fractionsB.f2[0]}}{${pb_3_f[0].fractionsB.f2[1]}}$ à ${pb_3_f[0].fractionsB.cat2} et le reste à ${pb_3_f[0].fractionsB.cat3}.`;\n\n      //======================================================\n      //=========== énoncé indice 1 Miss Math\t\t ===========\n      //======================================================\n      pb_3_f[1].enonce = `À l'élection de Miss Math ${currentAnnee}, ${pb_3_f[1].fractionsB.cat1} a remporté $\\\\dfrac{${pb_3_f[1].fractionsB.f1[0]}}{${pb_3_f[1].fractionsB.f1[1]}}$ des suffrages, `;\n      pb_3_f[1].enonce += `${pb_3_f[1].fractionsB.cat2} $\\\\dfrac{${pb_3_f[1].fractionsB.f2[0]}}{${pb_3_f[1].fractionsB.f2[1]}}$ et `;\n      pb_3_f[1].enonce += `${pb_3_f[1].fractionsB.cat3} tous les autres.`;\n\n      //======================================================\n      //=========== \t\tCorrection Commune  \t ===========\n      //======================================================\n      let frac_meme_denom;\n      for (let i = 0; i < 2; i++) {\n        pb_3_f[\n          i\n        ].correction = `Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>`;\n\n        if (!(dt1 == dt2)) {\n          pb_3_f[\n            i\n          ].correction += `Réduisons les fractions de l'énoncé au même dénominateur :  `;\n          frac_meme_denom = frac.reduceSameDenominateur(\n            pb_3_f[i].fractionsB.f1[0],\n            pb_3_f[i].fractionsB.f1[1],\n            pb_3_f[i].fractionsB.f2[0],\n            pb_3_f[i].fractionsB.f2[1],\n            pb_3_f[i].fractionsB.f3[0],\n            pb_3_f[i].fractionsB.f3[1]\n          );\n          if (frac_meme_denom[1] == dt1) {\n            pb_3_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_3_f[i].fractionsB.f1[0]}}{${pb_3_f[i].fractionsB.f1[1]}}$ et `;\n            pb_3_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_3_f[i].fractionsB.f2[0]}}{${pb_3_f[i].fractionsB.f2[1]}} = \\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$.<br>`;\n          } else if (frac_meme_denom[1] == dt2) {\n            pb_3_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_3_f[i].fractionsB.f1[0]}}{${pb_3_f[i].fractionsB.f1[1]}} = \\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ et `;\n            pb_3_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_3_f[i].fractionsB.f2[0]}}{${pb_3_f[i].fractionsB.f2[1]}}$<br>`;\n          } else {\n            pb_3_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_3_f[i].fractionsB.f1[0]}}{${pb_3_f[i].fractionsB.f1[1]}} = \\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ et `;\n            pb_3_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_3_f[i].fractionsB.f2[0]}}{${pb_3_f[i].fractionsB.f2[1]}} = \\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$.<br>`;\n          }\n        } else {\n          frac_meme_denom = frac.reduceSameDenominateur(\n            pb_3_f[i].fractionsB.f1[0],\n            pb_3_f[i].fractionsB.f1[1],\n            pb_3_f[i].fractionsB.f2[0],\n            pb_3_f[i].fractionsB.f2[1],\n            pb_3_f[i].fractionsB.f3[0],\n            pb_3_f[i].fractionsB.f3[1]\n          );\n          pb_3_f[\n            i\n          ].correction += `Les fractions de l'énoncé ont déjà le même dénominateur.`;\n        }\n      }\n\n      //======================================================\n      //==== Correction indice 0 le triathlon des neiges  ====\n      //======================================================\n      pb_3_f[0].correction += `Calculons alors la distance à `;\n\n      //======================================================\n      //======== \t\tCorrection indice 1 Miss Math  \t========\n      //======================================================\n      pb_3_f[1].correction += `Calculons d'abord la fraction des suffrages remportés par `;\n\n      //======================================================\n      //=========== \t\tCorrection Commune  \t ===========\n      //======================================================\n      for (let i = 0; i < 2; i++) {\n        pb_3_f[i].correction += `${pb_3_f[i].fractionsB.cat3} : <br>`;\n        pb_3_f[\n          i\n        ].correction += `$1-\\\\dfrac{${pb_3_f[i].fractionsB.f1[0]}}{${pb_3_f[i].fractionsB.f1[1]}}-\\\\dfrac{${pb_3_f[i].fractionsB.f2[0]}}{${pb_3_f[i].fractionsB.f2[1]}} = `;\n        pb_3_f[\n          i\n        ].correction += `\\\\dfrac{${frac_meme_denom[1]}}{${frac_meme_denom[1]}}-\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}-\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}} = `;\n        pb_3_f[\n          i\n        ].correction += `\\\\dfrac{${frac_meme_denom[1]}-${frac_meme_denom[0]}-${frac_meme_denom[2]}}{${frac_meme_denom[3]}} = `;\n        pb_3_f[i].correction += `\\\\dfrac{${frac_meme_denom[1] - frac_meme_denom[0] - frac_meme_denom[2]\n          }}{${frac_meme_denom[1]}}`;\n        if (!(frac_meme_denom[1] == pb_3_f[0].fractionsB.f3[1])) {\n          pb_3_f[\n            i\n          ].correction += ` = \\\\dfrac{${pb_3_f[i].fractionsB.f3[0]}}{${pb_3_f[i].fractionsB.f3[1]}}$`;\n        } else {\n          pb_3_f[i].correction += `$`;\n        }\n      }\n\n      //======================================================\n      //==== Conclusion indice 0 le triathlon des neiges  ====\n      //======================================================\n      pb_3_f[0].correction += `<br>${pb_3_f[0].prenoms[0]} fait donc $\\\\dfrac{${pb_3_f[0].fractionsB.f1[0]}}{${pb_3_f[0].fractionsB.f1[1]}}$ à ${pb_3_f[0].fractionsB.cat1}, `;\n      pb_3_f[0].correction += `$\\\\dfrac{${pb_3_f[0].fractionsB.f2[0]}}{${pb_3_f[0].fractionsB.f2[1]}}$ à ${pb_3_f[0].fractionsB.cat2} et `;\n      pb_3_f[0].correction += `$\\\\dfrac{${pb_3_f[0].fractionsB.f3[0]}}{${pb_3_f[0].fractionsB.f3[1]}}$ à ${pb_3_f[0].fractionsB.cat3}.`;\n\n      pb_3_f[0].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_3_f[0].correction += `${pb_3_f[0].prenoms[0]} fait donc $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ à ${pb_3_f[0].fractionsB.cat1}, `;\n      pb_3_f[0].correction += `$\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ à ${pb_3_f[0].fractionsB.cat2} et `;\n      pb_3_f[0].correction += `$\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$ à ${pb_3_f[0].fractionsB.cat3}.`;\n\n      //let frac_rangees,frac_meme_denom_rangees;\n      if (\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt1 / dt1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt2 / dt2) &&\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt1 / dt1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt3 / dt3)\n      ) {\n        pb_3_f[0].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n          `Les trois fractions sont équivalentes, ${pb_3_f[0].prenoms[0]} parcours donc la même distance dans les trois disciplines.`\n        )}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(\n          frac_meme_denom[0],\n          frac_meme_denom[1],\n          frac_meme_denom[2],\n          frac_meme_denom[3],\n          frac_meme_denom[4],\n          frac_meme_denom[5]\n        );\n        pb_3_f[0].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$.`;\n\n        frac_rangees = frac.sortFractions(\n          pb_3_f[0].fractionsB.f1[0],\n          pb_3_f[0].fractionsB.f1[1],\n          pb_3_f[0].fractionsB.f2[0],\n          pb_3_f[0].fractionsB.f2[1],\n          pb_3_f[0].fractionsB.f3[0],\n          pb_3_f[0].fractionsB.f3[1]\n        );\n\n        pb_3_f[0].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$.`;\n\n        pb_3_f[0].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n          `C'est donc à ${pb_3_f[0].fractionsSimp[\n          pb_3_f[0].fractionsSimp.indexOf(frac_rangees[4]) + 2\n          ]\n          } que ${pb_3_f[0].prenoms[0]} fait la plus grande distance.`\n        )}`;\n      }\n\n      //======================================================\n      //======== \t\tConclusion indice 1 Miss Math  \t========\n      //======================================================\n      pb_3_f[1].correction += `<br>${pb_3_f[1].fractionsB.cat1} a donc remporté $\\\\dfrac{${pb_3_f[1].fractionsB.f1[0]}}{${pb_3_f[1].fractionsB.f1[1]}}$, `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat2} a remporté $\\\\dfrac{${pb_3_f[1].fractionsB.f2[0]}}{${pb_3_f[1].fractionsB.f2[1]}}$ et `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat3} $\\\\dfrac{${pb_3_f[1].fractionsB.f3[0]}}{${pb_3_f[1].fractionsB.f3[1]}}$.`;\n\n      pb_3_f[1].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat1} remporte donc $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$, `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat2} $\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ et `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat3} $\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$.`;\n\n      if (\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt1 / dt1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt2 / dt2) &&\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt1 / dt1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nt3 / dt3)\n      ) {\n        pb_3_f[1].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n          `Les trois fractions sont équivalentes, les trois candidates ont donc remporté le même nombre de suffrages.`\n        )}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(\n          frac_meme_denom[0],\n          frac_meme_denom[1],\n          frac_meme_denom[2],\n          frac_meme_denom[3],\n          frac_meme_denom[4],\n          frac_meme_denom[5]\n        );\n        pb_3_f[1].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$.`;\n\n        frac_rangees = frac.sortFractions(\n          pb_3_f[1].fractionsB.f1[0],\n          pb_3_f[1].fractionsB.f1[1],\n          pb_3_f[1].fractionsB.f2[0],\n          pb_3_f[1].fractionsB.f2[1],\n          pb_3_f[1].fractionsB.f3[0],\n          pb_3_f[1].fractionsB.f3[1]\n        );\n\n        pb_3_f[1].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$.`;\n\n        pb_3_f[1].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n          `C'est donc ${pb_3_f[1].fractionsSimp[\n          pb_3_f[1].fractionsSimp.indexOf(frac_rangees[4]) + 2\n          ]\n          } qui a été élue.`\n        )}`;\n      }\n\n      //======================================================\n      //======== \t\tAVEC 4 FRACTIONS\t\t\t  \t========\n      //======================================================\n\n      // le tableau d'objets contenant tout le necesssaire, fractions, énoncé, question ... pour les problème avec 4 fractions\n      let pb_4_f = [];\n      // les numérateurs et dénominateurs des 4 fractions attention les trois premières doivent être inférieures à 1/3 si on veut qu'elles soient toutes positives !\n      // et on veut des fractions distinctes\n      let nq1, nq2, nq3, nq4, dq1, dq2, dq3, dq4;\n      let n4, d4; // en plus parce qu'il y a 4 fractions\n      // on choisit un tableau de dénominateurs qui vont bien\n      let denoms_cool_4 = denoms_amis[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, denoms_amis.length - 1)];\n      while (\n        nq1 == nq2 ||\n        nq1 == nq3 ||\n        nq1 == nq4 ||\n        nq2 == nq3 ||\n        nq2 == nq4 ||\n        nq3 == nq4 ||\n        nq1 / dq1 >= 1 / 3 ||\n        nq2 / dq2 >= 1 / 3 ||\n        nq3 / dq3 >= 1 / 3\n      ) {\n        n1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 5);\n        d1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_4);\n        n2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 11, [n1]); //on évite n1 pour pouvoir retrouver le texte de la plus grande fraction\n        d2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_4);\n        n3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 17, [n1, n2]); //on évite n1 et n2 pour pouvoir retrouver le texte de la plus grande fraction\n        d3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_4);\n        n4 = d1 * d2 * d3 - n1 * d2 * d3 - n2 * d1 * d3 - n3 * d1 * d2; //la somme des quatre vaut 1 !\n        d4 = d1 * d2 * d3;\n\n        nq1 = frac.fraction_simplifiee(n1, d1)[0];\n        dq1 = frac.fraction_simplifiee(n1, d1)[1];\n        nq2 = frac.fraction_simplifiee(n2, d2)[0];\n        dq2 = frac.fraction_simplifiee(n2, d2)[1];\n        nq3 = frac.fraction_simplifiee(n3, d3)[0];\n        dq3 = frac.fraction_simplifiee(n3, d3)[1];\n        nq4 = frac.fraction_simplifiee(n4, d4)[0];\n        dq4 = frac.fraction_simplifiee(n4, d4)[1];\n      }\n\n      //======================================================\n      //=========== \t\tindice 0 le mandala\t\t ===========\n      //======================================================\n      pb_4_f.push({\n        //\n        prenoms: [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenom)()],\n        fractionsSimp: [\n          nq1,\n          dq1,\n          \"carmin\",\n          nq2,\n          dq2,\n          \"ocre jaune\",\n          nq3,\n          dq3,\n          \"turquoise\",\n          nq4,\n          dq4,\n          \"pourpre\",\n        ],\n        fractionsB: {\n          f1: [nq1, dq1],\n          cat1: \"carmin\",\n          f2: [nq2, dq2],\n          cat2: \"ocre jaune\",\n          f3: [nq3, dq3],\n          cat3: \"turquoise\",\n          f4: [nq4, dq4],\n          cat4: \"pourpre\",\n        },\n        enonce: ``,\n        question: `Quelle est elle la couleur qui recouvre le plus de surface ?`,\n        correction: ``,\n      });\n\n      //======================================================\n      //===========\t\tindice 1 le jardin\t \t ===========\n      //======================================================\n      pb_4_f.push({\n        // indice 1 le jardin\n        prenoms: [],\n        fractionsSimp: [\n          nq1,\n          dq1,\n          \"la culture des légumes\",\n          nq2,\n          dq2,\n          \"la culture des plantes aromatiques\",\n          nq3,\n          dq3,\n          \"une serre servant aux semis\",\n          nq4,\n          dq4,\n          \"la culture des fraisiers\",\n        ],\n        fractionsB: {\n          f1: [nq1, dq1],\n          cat1: \"la culture des légumes\",\n          f2: [nq2, dq2],\n          cat2: \"la culture des plantes aromatiques\",\n          f3: [nq3, dq3],\n          cat3: \"une serre servant aux semis\",\n          f4: [nq4, dq4],\n          cat4: \"la culture des fraisiers\",\n        },\n        enonce: ``,\n        question: `Quelle est la culture qui occupe le plus de surface ?`,\n        correction: ``,\n      });\n\n      //======================================================\n      //===========\tindice 2 le stade\t\t \t ===========\n      //======================================================\n      pb_4_f.push({\n        // indice 2 le stade\n        prenoms: [],\n        fractionsSimp: [\n          nq1,\n          dq1,\n          \"le pays organisateur\",\n          nq2,\n          dq2,\n          \"l'ensemble des supporters des deux équipes en jeu\",\n          nq3,\n          dq3,\n          \"les sponsors et officiels\",\n          nq4,\n          dq4,\n          \"les places en vente libre\",\n        ],\n        fractionsB: {\n          f1: [nq1, dq1],\n          cat1: \"le pays organisateur\",\n          f2: [nq2, dq2],\n          cat2: \"l'ensemble des supporters des deux équipes en jeu\",\n          f3: [nq3, dq3],\n          cat3: \"les sponsors et officiels\",\n          f4: [nq4, dq4],\n          cat4: \"les places en vente libre\",\n        },\n        enonce: ``,\n        question: `Quelle est la catégorie la plus importante dans le stade ?`,\n        correction: ``,\n      });\n\n      //======================================================\n      //===========\ténoncé indice 0 le mandala \t ===========\n      //======================================================\n      pb_4_f[0].enonce = `${pb_4_f[0].prenoms[0]} colorie un mandala selon les proportions suivantes :  $\\\\dfrac{${pb_4_f[0].fractionsB.f1[0]}}{${pb_4_f[0].fractionsB.f1[1]}}$ en ${pb_4_f[0].fractionsB.cat1}, `;\n      pb_4_f[0].enonce += `$\\\\dfrac{${pb_4_f[0].fractionsB.f2[0]}}{${pb_4_f[0].fractionsB.f2[1]}}$ en  ${pb_4_f[0].fractionsB.cat2}, `;\n      pb_4_f[0].enonce += `$\\\\dfrac{${pb_4_f[0].fractionsB.f3[0]}}{${pb_4_f[0].fractionsB.f3[1]}}$ en  ${pb_4_f[0].fractionsB.cat3} et `;\n      pb_4_f[0].enonce += `le reste en ${pb_4_f[0].fractionsB.cat4}.`;\n\n      //======================================================\n      //===========\ténoncé indice 1 le jardin \t ===========\n      //======================================================\n      pb_4_f[1].enonce = `Un jardin est aménagé selon les proportions suivantes :  $\\\\dfrac{${pb_4_f[1].fractionsB.f1[0]}}{${pb_4_f[1].fractionsB.f1[1]}}$ par ${pb_4_f[1].fractionsB.cat1}, `;\n      pb_4_f[1].enonce += `$\\\\dfrac{${pb_4_f[1].fractionsB.f2[0]}}{${pb_4_f[1].fractionsB.f2[1]}}$ par  ${pb_4_f[1].fractionsB.cat2}, `;\n      pb_4_f[1].enonce += `$\\\\dfrac{${pb_4_f[1].fractionsB.f3[0]}}{${pb_4_f[1].fractionsB.f3[1]}}$ par  ${pb_4_f[1].fractionsB.cat3} et `;\n      pb_4_f[1].enonce += `le reste par ${pb_4_f[1].fractionsB.cat4}.`;\n\n      //======================================================\n      //===========\ténoncé indice 2 le stade \t ===========\n      //======================================================\n      pb_4_f[2].enonce = `Pour chaque match, les places du stade sont mises en vente dans les proportions suivantes :  $\\\\dfrac{${pb_4_f[2].fractionsB.f1[0]}}{${pb_4_f[2].fractionsB.f1[1]}}$ pour ${pb_4_f[2].fractionsB.cat1}, `;\n      pb_4_f[2].enonce += `$\\\\dfrac{${pb_4_f[2].fractionsB.f2[0]}}{${pb_4_f[2].fractionsB.f2[1]}}$ pour  ${pb_4_f[2].fractionsB.cat2}, `;\n      pb_4_f[2].enonce += `$\\\\dfrac{${pb_4_f[2].fractionsB.f3[0]}}{${pb_4_f[2].fractionsB.f3[1]}}$ pour  ${pb_4_f[2].fractionsB.cat3} et `;\n      pb_4_f[2].enonce += `le reste pour ${pb_4_f[2].fractionsB.cat4}.`;\n\n      //======================================================\n      //=========== \t\tCorrection Commune  \t ===========\n      //======================================================\n\n      //let frac_meme_denom;\n      for (let i = 0; i < 3; i++) {\n        pb_4_f[\n          i\n        ].correction = `Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>`;\n\n        if (!(dq1 == dq2 && dq1 == dq3)) {\n          //pb_4_f[i].correction += `${!(dq1 == dq2 && dq1 == dq3)} - ${dq1} - ${dq2} - ${dq3} - Réduisons les fractions de l'énoncé au même dénominateur :  `;\n          pb_4_f[i].correction += `Réduisons les fractions de l'énoncé au même dénominateur :  `;\n          frac_meme_denom = frac.reduceSameDenominateur(\n            pb_4_f[i].fractionsB.f1[0],\n            pb_4_f[i].fractionsB.f1[1],\n            pb_4_f[i].fractionsB.f2[0],\n            pb_4_f[i].fractionsB.f2[1],\n            pb_4_f[i].fractionsB.f3[0],\n            pb_4_f[i].fractionsB.f3[1],\n            pb_4_f[i].fractionsB.f4[0],\n            pb_4_f[i].fractionsB.f4[1]\n          );\n          if (frac_meme_denom[1] == dq1) {\n            pb_4_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f1[0]}}{${pb_4_f[i].fractionsB.f1[1]}}$, `;\n          } else {\n            pb_4_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f1[0]}}{${pb_4_f[i].fractionsB.f1[1]}} = \\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$, `;\n          }\n          if (frac_meme_denom[1] == dq2) {\n            pb_4_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f2[0]}}{${pb_4_f[i].fractionsB.f2[1]}}$ et `;\n          } else {\n            pb_4_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f2[0]}}{${pb_4_f[i].fractionsB.f2[1]}} = \\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ et `;\n          }\n          if (frac_meme_denom[1] == dq3) {\n            pb_4_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f3[0]}}{${pb_4_f[i].fractionsB.f3[1]}}$.<br>`;\n          } else {\n            pb_4_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f3[0]}}{${pb_4_f[i].fractionsB.f3[1]}} = \\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$.<br>`;\n          }\n        } else {\n          frac_meme_denom = frac.reduceSameDenominateur(\n            pb_4_f[i].fractionsB.f1[0],\n            pb_4_f[i].fractionsB.f1[1],\n            pb_4_f[i].fractionsB.f2[0],\n            pb_4_f[i].fractionsB.f2[1],\n            pb_4_f[i].fractionsB.f3[0],\n            pb_4_f[i].fractionsB.f3[1],\n            pb_4_f[i].fractionsB.f4[0],\n            pb_4_f[i].fractionsB.f4[1]\n          );\n          pb_4_f[\n            i\n          ].correction += `Les fractions de l'énoncé ont déjà le même dénominateur : `;\n          pb_4_f[\n            i\n          ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f1[0]}}{${pb_4_f[i].fractionsB.f1[1]}}$, $\\\\dfrac{${pb_4_f[i].fractionsB.f2[0]}}{${pb_4_f[i].fractionsB.f2[1]}}$ et $\\\\dfrac{${pb_4_f[i].fractionsB.f3[0]}}{${pb_4_f[i].fractionsB.f3[1]}}$.<br>`;\n        }\n      }\n\n      //======================================================\n      //===========\tCorrection indice 0 le mandala==========\n      //======================================================\n      pb_4_f[0].correction += `Calculons alors la fraction du mandala recouverte en `;\n\n      //======================================================\n      //===========\tCorrection indice 1 le jardin===========\n      //======================================================\n      pb_4_f[1].correction += `Calculons d'abord la fraction du jardin occupée par `;\n\n      //======================================================\n      //===========\ténoncé indice 2 le stade \t ===========\n      //======================================================\n      pb_4_f[2].correction += `Calculons d'abord la fraction du stade occupée par `;\n\n      //======================================================\n      //=========== \t\tCorrection Commune  \t ===========\n      //======================================================\n      for (let i = 0; i < 3; i++) {\n        pb_4_f[i].correction += `${pb_4_f[i].fractionsB.cat3} : <br>`;\n        pb_4_f[\n          i\n        ].correction += `$1-\\\\dfrac{${pb_4_f[i].fractionsB.f1[0]}}{${pb_4_f[i].fractionsB.f1[1]}}-\\\\dfrac{${pb_4_f[i].fractionsB.f2[0]}}{${pb_4_f[i].fractionsB.f2[1]}}-\\\\dfrac{${pb_4_f[i].fractionsB.f3[0]}}{${pb_4_f[i].fractionsB.f3[1]}} = `;\n        pb_4_f[\n          i\n        ].correction += `\\\\dfrac{${frac_meme_denom[1]}}{${frac_meme_denom[1]}}-\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}-\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}-\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}} = `;\n        pb_4_f[\n          i\n        ].correction += `\\\\dfrac{${frac_meme_denom[1]}-${frac_meme_denom[0]}-${frac_meme_denom[2]}-${frac_meme_denom[4]}}{${frac_meme_denom[1]}} = `;\n        pb_4_f[i].correction += `\\\\dfrac{${frac_meme_denom[1] -\n          frac_meme_denom[0] -\n          frac_meme_denom[2] -\n          frac_meme_denom[4]\n          }}{${frac_meme_denom[1]}}`;\n        if (!(frac_meme_denom[1] == pb_4_f[0].fractionsB.f4[1])) {\n          pb_4_f[\n            i\n          ].correction += ` = \\\\dfrac{${pb_4_f[i].fractionsB.f4[0]}}{${pb_4_f[i].fractionsB.f4[1]}}$`;\n        } else {\n          pb_4_f[i].correction += `$`;\n        }\n      }\n\n      //======================================================\n      //=========== Conclusion indice 0 le mandala ===========\n      //======================================================\n\n      pb_4_f[0].correction += `<br>Le mandala est donc colorié de la façon suivante : $\\\\dfrac{${pb_4_f[0].fractionsB.f1[0]}}{${pb_4_f[0].fractionsB.f1[1]}}$ en ${pb_4_f[0].fractionsB.cat1}, `;\n      pb_4_f[0].correction += `$\\\\dfrac{${pb_4_f[0].fractionsB.f2[0]}}{${pb_4_f[0].fractionsB.f2[1]}}$ en ${pb_4_f[0].fractionsB.cat2}, `;\n      pb_4_f[0].correction += `$\\\\dfrac{${pb_4_f[0].fractionsB.f3[0]}}{${pb_4_f[0].fractionsB.f3[1]}}$ en ${pb_4_f[0].fractionsB.cat3} et `;\n      pb_4_f[0].correction += `$\\\\dfrac{${pb_4_f[0].fractionsB.f4[0]}}{${pb_4_f[0].fractionsB.f4[1]}}$ en ${pb_4_f[0].fractionsB.cat4}.`;\n\n      pb_4_f[0].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_4_f[0].correction += `le mandala est donc colorié de la façon suivante : $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ en ${pb_4_f[0].fractionsB.cat1}, `;\n      pb_4_f[0].correction += `$\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ en ${pb_4_f[0].fractionsB.cat2}, `;\n      pb_4_f[0].correction += `$\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$ en ${pb_4_f[0].fractionsB.cat3} et `;\n      pb_4_f[0].correction += `$\\\\dfrac{${frac_meme_denom[6]}}{${frac_meme_denom[7]}}$ en ${pb_4_f[0].fractionsB.cat4}.`;\n\n      //let frac_rangees,frac_meme_denom_rangees;\n      if (\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq2 / dq2) &&\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq3 / dq3) &&\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq4 / dq4)\n      ) {\n        pb_4_f[0].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n          `Les quatre fractions sont équivalentes, ${pb_4_f[0].prenoms[0]} colorie donc la même surface avec les quatre couleurs.`\n        )}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(\n          frac_meme_denom[0],\n          frac_meme_denom[1],\n          frac_meme_denom[2],\n          frac_meme_denom[3],\n          frac_meme_denom[4],\n          frac_meme_denom[5],\n          frac_meme_denom[6],\n          frac_meme_denom[7]\n        );\n        pb_4_f[0].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$, $\\\\dfrac{${frac_meme_denom_rangees[6]}}{${frac_meme_denom_rangees[7]}}$.`;\n\n        frac_rangees = frac.sortFractions(\n          pb_4_f[0].fractionsB.f1[0],\n          pb_4_f[0].fractionsB.f1[1],\n          pb_4_f[0].fractionsB.f2[0],\n          pb_4_f[0].fractionsB.f2[1],\n          pb_4_f[0].fractionsB.f3[0],\n          pb_4_f[0].fractionsB.f3[1],\n          pb_4_f[0].fractionsB.f4[0],\n          pb_4_f[0].fractionsB.f4[1]\n        );\n\n        pb_4_f[0].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$, $\\\\dfrac{${frac_rangees[6]}}{${frac_rangees[7]}}$.`;\n\n        pb_4_f[0].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n          `C'est donc en ${pb_4_f[0].fractionsSimp[\n          pb_4_f[0].fractionsSimp.indexOf(frac_rangees[6]) + 2\n          ]\n          } que le mandala est le plus recouvert.`\n        )}`;\n      }\n\n      //======================================================\n      //=========== Conclusion indice 1 le jardin\t ===========\n      //======================================================\n      pb_4_f[1].correction += `<br>Le jardin est donc occupé de la façon suivante : $\\\\dfrac{${pb_4_f[1].fractionsB.f1[0]}}{${pb_4_f[1].fractionsB.f1[1]}}$ par ${pb_4_f[1].fractionsB.cat1}, `;\n      pb_4_f[1].correction += `$\\\\dfrac{${pb_4_f[1].fractionsB.f2[0]}}{${pb_4_f[1].fractionsB.f2[1]}}$ par ${pb_4_f[1].fractionsB.cat2}, `;\n      pb_4_f[1].correction += `$\\\\dfrac{${pb_4_f[1].fractionsB.f3[0]}}{${pb_4_f[1].fractionsB.f3[1]}}$ par ${pb_4_f[1].fractionsB.cat3} et `;\n      pb_4_f[1].correction += `$\\\\dfrac{${pb_4_f[1].fractionsB.f4[0]}}{${pb_4_f[1].fractionsB.f4[1]}}$ par ${pb_4_f[1].fractionsB.cat4}.`;\n\n      pb_4_f[1].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_4_f[1].correction += `le jardin est donc occupé de la façon suivante : $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ par ${pb_4_f[1].fractionsB.cat1}, `;\n      pb_4_f[1].correction += `$\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ par ${pb_4_f[1].fractionsB.cat2}, `;\n      pb_4_f[1].correction += `$\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$ par ${pb_4_f[1].fractionsB.cat3} et `;\n      pb_4_f[1].correction += `$\\\\dfrac{${frac_meme_denom[6]}}{${frac_meme_denom[7]}}$ par ${pb_4_f[1].fractionsB.cat4}.`;\n\n      //let frac_rangees,frac_meme_denom_rangees;\n      if (\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq2 / dq2) &&\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq3 / dq3) &&\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq4 / dq4)\n      ) {\n        pb_4_f[1].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n          `Les quatre fractions sont équivalentes, la même surface du jardin est donc occupée par les quatre cultures.`\n        )}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(\n          frac_meme_denom[0],\n          frac_meme_denom[1],\n          frac_meme_denom[2],\n          frac_meme_denom[3],\n          frac_meme_denom[4],\n          frac_meme_denom[5],\n          frac_meme_denom[6],\n          frac_meme_denom[7]\n        );\n        pb_4_f[1].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$, $\\\\dfrac{${frac_meme_denom_rangees[6]}}{${frac_meme_denom_rangees[7]}}$.`;\n\n        frac_rangees = frac.sortFractions(\n          pb_4_f[1].fractionsB.f1[0],\n          pb_4_f[1].fractionsB.f1[1],\n          pb_4_f[1].fractionsB.f2[0],\n          pb_4_f[1].fractionsB.f2[1],\n          pb_4_f[1].fractionsB.f3[0],\n          pb_4_f[1].fractionsB.f3[1],\n          pb_4_f[1].fractionsB.f4[0],\n          pb_4_f[1].fractionsB.f4[1]\n        );\n\n        pb_4_f[1].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$, $\\\\dfrac{${frac_rangees[6]}}{${frac_rangees[7]}}$.`;\n\n        pb_4_f[1].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n          `C'est donc par ${pb_4_f[1].fractionsSimp[\n          pb_4_f[1].fractionsSimp.indexOf(frac_rangees[6]) + 2\n          ]\n          } que le jardin est le plus occupé.`\n        )}`;\n      }\n\n      //======================================================\n      //=========== Conclusion indice 2 le stade\t ===========\n      //======================================================\n      pb_4_f[2].correction += `<br>Le stade est donc occupé de la façon suivante : $\\\\dfrac{${pb_4_f[2].fractionsB.f1[0]}}{${pb_4_f[2].fractionsB.f1[1]}}$ pour ${pb_4_f[2].fractionsB.cat1}, `;\n      pb_4_f[2].correction += `$\\\\dfrac{${pb_4_f[2].fractionsB.f2[0]}}{${pb_4_f[2].fractionsB.f2[1]}}$ pour ${pb_4_f[2].fractionsB.cat2}, `;\n      pb_4_f[2].correction += `$\\\\dfrac{${pb_4_f[2].fractionsB.f3[0]}}{${pb_4_f[2].fractionsB.f3[1]}}$ pour ${pb_4_f[2].fractionsB.cat3} et `;\n      pb_4_f[2].correction += `$\\\\dfrac{${pb_4_f[2].fractionsB.f4[0]}}{${pb_4_f[2].fractionsB.f4[1]}}$ pour ${pb_4_f[2].fractionsB.cat4}.`;\n\n      pb_4_f[2].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_4_f[2].correction += `le stade est donc occupé de la façon suivante : $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ pour ${pb_4_f[2].fractionsB.cat1}, `;\n      pb_4_f[2].correction += `$\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ pour ${pb_4_f[2].fractionsB.cat2}, `;\n      pb_4_f[2].correction += `$\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$ pour ${pb_4_f[2].fractionsB.cat3} et `;\n      pb_4_f[2].correction += `$\\\\dfrac{${frac_meme_denom[6]}}{${frac_meme_denom[7]}}$ pour ${pb_4_f[2].fractionsB.cat4}.`;\n\n      //let frac_rangees,frac_meme_denom_rangees;\n      if (\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq2 / dq2) &&\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq3 / dq3) &&\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq1 / dq1) == (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(nq4 / dq4)\n      ) {\n        pb_4_f[2].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n          `Les quatre fractions sont équivalentes, chaque catégorie a donc la même importance dans le stade.`\n        )}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(\n          frac_meme_denom[0],\n          frac_meme_denom[1],\n          frac_meme_denom[2],\n          frac_meme_denom[3],\n          frac_meme_denom[4],\n          frac_meme_denom[5],\n          frac_meme_denom[6],\n          frac_meme_denom[7]\n        );\n        pb_4_f[2].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$, $\\\\dfrac{${frac_meme_denom_rangees[6]}}{${frac_meme_denom_rangees[7]}}$.`;\n\n        frac_rangees = frac.sortFractions(\n          pb_4_f[2].fractionsB.f1[0],\n          pb_4_f[2].fractionsB.f1[1],\n          pb_4_f[2].fractionsB.f2[0],\n          pb_4_f[2].fractionsB.f2[1],\n          pb_4_f[2].fractionsB.f3[0],\n          pb_4_f[2].fractionsB.f3[1],\n          pb_4_f[2].fractionsB.f4[0],\n          pb_4_f[2].fractionsB.f4[1]\n        );\n\n        pb_4_f[2].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$, $\\\\dfrac{${frac_rangees[6]}}{${frac_rangees[7]}}$.`;\n\n        pb_4_f[2].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n          `C'est donc pour ${pb_4_f[2].fractionsSimp[\n          pb_4_f[2].fractionsSimp.indexOf(frac_rangees[6]) + 2\n          ]\n          } que le nombre de places est le plus important.`\n        )}`;\n      }\n\n      switch (liste_type_de_questions[i]) {\n        case 1: // Triathlon des neiges --> VTT, ski de fond, course\n          texte = `${pb_3_f[0].enonce} <br> ${pb_3_f[0].question}`;\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_3_f[0].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${pb_3_f[0].correction}`;\n          }\n          break;\n        case 2: //Miss Math --> Noémie, Samia, Alexia\n          texte = `${pb_3_f[1].enonce} <br> ${pb_3_f[1].question}`;\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_3_f[1].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${pb_3_f[1].correction}`;\n          }\n          break;\n        case 3: // Mandala --> carmin, ocre jaune, turquoise, pourpre\n          texte = `${pb_4_f[0].enonce} <br> ${pb_4_f[0].question}`;\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_4_f[0].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${pb_4_f[0].correction}`;\n          }\n          break;\n        case 4: // Jardin --> légumes, plantes aromatiques, semis, fraisiers\n          texte = `${pb_4_f[1].enonce} <br> ${pb_4_f[1].question}`;\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_4_f[1].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${pb_4_f[1].correction}`;\n          }\n          break;\n        case 5: // Stade --> pays organisatuers, supporters, sponsors, vente libre\n          texte = `${pb_4_f[2].enonce} <br> ${pb_4_f[2].question}`;\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_4_f[2].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${pb_4_f[2].correction}`;\n          }\n          break;\n      }\n      if (this.liste_questions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        i++;\n      }\n      cpt++;\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n  };\n  //this.besoin_formulaire_numerique = ['Niveau de difficulté',4,\"1 : nombre enier positif\\n2 : nombre décimal positif\\n3 : nombre enier positif inférieur à un\\n4 : Mélange\"];\n}\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/4e/4C25-0.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);