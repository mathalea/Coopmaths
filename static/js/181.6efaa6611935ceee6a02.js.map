{"version":3,"sources":["webpack://mathalea/./src/js/exercices/2e/2N23.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","valeur_absolue_et_equation","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","correction_detaille_disponible","sortieHtml","correctionDetaillee","nouvelleVersion","listeQuestions","listeCorrections","type_de_questions","listeTypeDeQuestions","combinaisonListes","a","b","c","texte","texteCorr","i","cpt","randint","choice","ecritureAlgebrique","ecritureParentheseSiNegatif","s","segment","point","styleExtremites","x0","nom","positionLabel","A","x1","s1","segmentAvecExtremites","color","epaisseur","s2","l","labelPoint","cote","texteCote","texteParPosition","cote2","texteCote2","mathalea2d","xmin","xmax","ymin","ymax","indexOf","push","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/181.6efaa6611935ceee6a02.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,ecritureAlgebrique,ecritureParentheseSiNegatif} from '../../modules/outils.js'\nimport {point,labelPoint,segment,segmentAvecExtremites,texteParPosition,mathalea2d,} from '../../modules/2d.js'\n\n/* auteur Stéphane Guyon*/\nexport const titre = 'Résoudre une équation avec des valeurs absolues'\n\n/**\n * 2N23\n * @Auteur Stéphane Guyon\n */\nexport default function valeur_absolue_et_equation() {\n    Exercice.call(this); // Héritage de la classe Exercice()\n    this.titre = titre;\n    this.consigne = \"Résoudre dans $\\\\mathbb{R}$ les équations suivantes  :\";\n    this.nbQuestions = 4;\n    this.nbCols = 2;\n    this.nbColsCorr = 2;\n    this.sup = 1; // \n    this.correction_detaille_disponible = true;\n    sortieHtml ? this.correctionDetaillee = true : this.correctionDetaillee = false;\n\n    this.nouvelleVersion = function () {\n        this.listeQuestions = []; // Liste de questions\n        this.listeCorrections = []; // Liste de questions corrigées\n        let type_de_questions_disponibles = [1, 2, 2, 2, 2, 2],type_de_questions\n        let listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles, this.nbQuestions);\n        for (let i = 0, a, b, c, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n            type_de_questions = listeTypeDeQuestions[i];\n            switch (type_de_questions) {\n                // Cas par cas, on définit le type de nombres que l'on souhaite\n                // Combien de chiffres ? Quelles valeurs ?\n                case 1:\n\n                    a = randint(1, 15) * choice([-1, 1]);\n                    b = randint(1, 15) * (-1);\n\n                    texte = `$\\\\vert x ${ecritureAlgebrique(a)}\\\\vert =${b}$`;\n                    { texteCorr = ` ${b} étant négatif, il n'existe pas de solution à cette équation. $S=\\\\emptyset$`; }\n\n\n\n                    break;\n                case 2:\n\n                    a = randint(1, 15) * choice([-1, 1]);\n                    b = randint(1, 15);\n                    c = -a;\n                    texte = `$\\\\vert x ${ecritureAlgebrique(a)}\\\\vert =${b}$`;\n\n                    texteCorr = `Résoudre cette équation est équivalent à résoudre ces deux équations :<br>\n                    $x ${ecritureAlgebrique(a)} =${b}$ et    $x ${ecritureAlgebrique(a)} =${-b}$<br>\n                    Il existe donc deux solutions à cette équation :<br>\n                    $x_1=${c} ${ecritureAlgebrique(b)}$ et $x_2=${c} -${ecritureParentheseSiNegatif(b)}$<br>\n                    $S=\\\\{${c - b};${c + b}\\\\}$`;\n                    if (this.correctionDetaillee) {\n                        let s = segment(point(0, 0), point(12, 0));\n                        s.styleExtremites = '->';\n                        let x0 = point(3, 0);\n                        x0.nom = c - b;\n                        x0.positionLabel = 'below';\n                        let A = point(6, 0, c);\n                        A.nom = c;\n                        A.positionLabel = 'below';\n                        let x1 = point(9, 0, c + b, 'below');\n                        x1.nom = c + b;\n                        x1.positionLabel = 'below';\n                        let s1 = segmentAvecExtremites(x0, x1);\n                        s1.color = 'blue';\n                        s1.epaisseur = 2;\n                        let s2 = segmentAvecExtremites(x0, A);\n                        let l = labelPoint(A, x0, x1);\n                        let cote = segment(point(3, 1), point(5.95, 1));\n                        cote.styleExtremites = '<->';\n                        let texteCote = texteParPosition(b, 4.5, 1.6);\n                        let cote2 = segment(point(6.05, 1), point(9, 1));\n                        cote2.styleExtremites = '<->';\n                        let texteCote2 = texteParPosition(b, 7.5, 1.6);\n                        texteCorr += mathalea2d({ xmin: -1, xmax: 13, ymin: -2, ymax: 2.5 },\n                            s, s1, s2, l, cote, texteCote, cote2, texteCote2);\n                    }\n                    break;\n\n            }\n\n\n            if (this.listeQuestions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n                this.listeQuestions.push(texte);\n                this.listeCorrections.push(texteCorr);\n                i++;\n            }\n            cpt++;\n        }\n        listeQuestionsToContenu(this);\n    };\n\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}