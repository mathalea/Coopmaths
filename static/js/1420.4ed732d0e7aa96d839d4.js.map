{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5R22.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","amcReady","amcType","ExerciceAdditionsSoustractionRelatifsV2","max","Exercice","this","sup","sup2","consigne","spacing","spacingCorr","nbCols","nbColsCorr","nbQuestions","interactif","nouvelleVersion","relatifs","sommesSignees","listeQuestions","listeCorrections","a","b","c","d","e","texte","texteCorr","i","cpt","choice","randint","s1","s2","s4","s3","lettreDepuisChiffre","ecritureAlgebrique","context","ajouteChampTexte","triePositifsNegatifs","texNombreCoul","ecritureAlgebriquec","sommeDesTermesParSigne","ecritureNombreRelatif","signe","ecritureNombreRelatifc","indexOf","push","setReponse","autoCorrection","enonce","propositions","statut","feedback","reponse","valeur","param","digits","Math","nombreDeChiffresDansLaPartieEntiere","decimals","exposantNbChiffres","exposantSigne","approx","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1420.4ed732d0e7aa96d839d4.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, ecritureNombreRelatif, ecritureNombreRelatifc, ecritureAlgebrique, ecritureAlgebriquec, signe, texNombreCoul, sommeDesTermesParSigne, triePositifsNegatifs, lettreDepuisChiffre, nombreDeChiffresDansLaPartieEntiere } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Additions et soustractions de nombres relatifs'\nexport const interactifReady = true\n\nexport const amcReady = true\nexport const amcType = 5\n\n/**\n* Effectuer la somme ou la différence de deux nombres relatifs\n*\n* * On peut paramétrer les distances à zéro qui sont par défaut inférieures à 20\n* * On peut utiliser des écritures simplifiées (ce qui n'est pas le cas par défaut)\n* @author Rémi Angot modifications par Jean-Claude Lhote\n* Référence 5R22\n*/\nexport default function ExerciceAdditionsSoustractionRelatifsV2 (max = 20) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max\n  this.sup2 = false // écriture simplifiée\n  this.titre = titre\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.spacingCorr = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.nbQuestions = 5\n  this.interactif = true\n  this.interactifReady = interactifReady\n  this.amcType = amcType\n  this.amcReady = amcReady\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let relatifs\n    let sommesSignees\n    for (let i = 0, a, b, c, d, e, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      relatifs = []\n      sommesSignees = []\n      a = -1\n      b = choice([-1, 1])\n      if (a === -1 & b === -1) {\n        c = 1\n      } else { // On s'assure que les 3 premières termes n'ont pas le même signe\n        c = choice([-1, 1])\n      }\n      a = randint(1, this.sup) * a\n      b = randint(1, this.sup) * b\n      c = randint(1, this.sup) * c\n      d = randint(1, this.sup) * choice([-1, 1])\n      e = randint(1, this.sup) * choice([-1, 1])\n      const s1 = choice([-1, 1])\n      const s2 = choice([-1, 1])\n      const s4 = choice([-1, 1])\n      let s3\n      if (s1 === 1 & s2 === 1) { // On s'assure que les 3 premières opérations ne sont pas identiques\n        s3 = -1\n      } else if (s1 === -1 & s2 === -1) {\n        s3 = 1\n      } else {\n        s3 = choice([-1, 1])\n      }\n      if (this.sup2) {\n        texte = `$ ${lettreDepuisChiffre(i + 1)} = ${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}${ecritureAlgebrique(d)}${ecritureAlgebrique(e)} = \\\\dotfill $`\n        if (this.interactif && context.isHtml) {\n          texte = `$ ${lettreDepuisChiffre(i + 1)} = ${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}${ecritureAlgebrique(d)}${ecritureAlgebrique(e)} =$` + ajouteChampTexte(this, i, { texte: `$ ${lettreDepuisChiffre(i + 1)} = ${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}${ecritureAlgebrique(d)}${ecritureAlgebrique(e)} =$` })\n        }\n        if (!context.isHtml && !context.isAmc) {\n          texte += `<br>$ ${lettreDepuisChiffre(i + 1)} = \\\\dotfill $`\n        }\n        relatifs = triePositifsNegatifs([a, b, c, d, e])\n        texteCorr = `$ ${lettreDepuisChiffre(i + 1)}\\\\textbf{=}~${texNombreCoul(a)}${ecritureAlgebriquec(b)}${ecritureAlgebriquec(c)}${ecritureAlgebriquec(d)}${ecritureAlgebriquec(e)}\\\\\\\\\\\\phantom{A }\\\\textbf{=}~`\n        if (sommeDesTermesParSigne([a, b, c, d, e])[0] !== 0 && sommeDesTermesParSigne([a, b, c, d, e])[1] !== 0) {\n          texteCorr += `${texNombreCoul(relatifs[0])}${ecritureAlgebriquec(relatifs[1])}${ecritureAlgebriquec(relatifs[2])}${ecritureAlgebriquec(relatifs[3])}${ecritureAlgebriquec(relatifs[4])}\\\\\\\\\\\\phantom{A }\\\\textbf{=}~`\n          texteCorr += `${texNombreCoul(sommeDesTermesParSigne([a, b, c, d, e])[0])}${ecritureAlgebriquec(sommeDesTermesParSigne([a, b, c, d, e])[1])}\\\\\\\\\\\\phantom{A }\\\\textbf{=}~`\n          texteCorr += `${texNombreCoul(a + b + c + d + e)} $`\n        } else if (sommeDesTermesParSigne([a, b, c, d, e])[0] !== 0) { texteCorr += `${texNombreCoul(sommeDesTermesParSigne([a, b, c, d, e])[0])}$` } else { texteCorr += `${ecritureAlgebriquec(sommeDesTermesParSigne([a, b, c, d, e])[1])}$` }\n      } else {\n        texte = `$ ${lettreDepuisChiffre(i + 1)} =  ${ecritureNombreRelatif(a)}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(c)}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)} = \\\\dotfill $`\n        if (this.interactif && context.isHtml) {\n          texte = ajouteChampTexte(this, i, { texte: `$ ${lettreDepuisChiffre(i + 1)} =  ${ecritureNombreRelatif(a)}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(c)}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)} = $` })\n        }\n        if (!context.isHtml && !context.isAmc) {\n          texte += `<br>$ ${lettreDepuisChiffre(i + 1)} = \\\\dotfill $`\n        }\n        texteCorr = `$ ${lettreDepuisChiffre(i + 1)} =  ${a}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(c)}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)}$`\n        texteCorr += `<br>$ \\\\phantom{A}= ${ecritureNombreRelatifc(a)}+${ecritureNombreRelatifc(s1 * b)}+${ecritureNombreRelatifc(s2 * c)}+${ecritureNombreRelatifc(s3 * d)}+${ecritureNombreRelatifc(s4 * e)} $`\n\n        relatifs = triePositifsNegatifs([a, s1 * b, s2 * c, s3 * d, s4 * e])\n\n        if (relatifs[0] > 0 & relatifs[4] < 0) {\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureNombreRelatifc(relatifs[0])}+${ecritureNombreRelatifc(relatifs[1])}+${ecritureNombreRelatifc(relatifs[2])}+${ecritureNombreRelatifc(relatifs[3])}+${ecritureNombreRelatifc(relatifs[4])} $`\n        }\n        sommesSignees = sommeDesTermesParSigne([relatifs[0], relatifs[1], relatifs[2], relatifs[3], relatifs[4]])\n        if (sommesSignees[0] !== 0 && sommesSignees[1] !== 0) {\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureNombreRelatifc(sommesSignees[0])}+${ecritureNombreRelatifc(sommesSignees[1])} $`\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureAlgebriquec(a + s1 * b + s2 * c + s3 * d + s4 * e)} $<br>`\n        } else if (sommesSignees[0] !== 0) { texteCorr += `<br>$ \\\\phantom{A}=${ecritureAlgebriquec(sommesSignees[0])}$` } else { texteCorr += `<br>$ \\\\phantom{A}=${ecritureAlgebriquec(sommesSignees[1])}$<br>` }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        setReponse(this, i, a + s1 * b + s2 * c + s3 * d + s4 * e, { signe: true })\n        if (context.isAmc) {\n          this.autoCorrection[i] = {\n            enonce: texte,\n            propositions: [\n              {\n                texte: texteCorr,\n                statut: 3,\n                feedback: ''\n              }\n            ],\n            reponse: {\n              texte: 'résultat',\n              valeur: a + s1 * b + s2 * c + s3 * d + s4 * e,\n              param: {\n                digits: Math.max(2, nombreDeChiffresDansLaPartieEntiere(a + s1 * b + s2 * c + s3 * d + s4 * e)),\n                decimals: 0,\n                signe: true,\n                exposantNbChiffres: 0,\n                exposantSigne: false,\n                approx: 0\n              }\n            }\n          }\n        }\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 99999]\n  this.besoinFormulaire2CaseACocher = ['Avec des écritures simplifiées']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}