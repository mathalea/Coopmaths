{"version":3,"file":"js/3206.8cfcd0ee7ce155887da5.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C11-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, texNombre, texteGras, texteEnCouleurEtGras, sp } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = \"Divisions euclidiennes : déterminer reste et quotient à partir d'une égalité\"\n\nexport const amcReady = true\nexport const amcType = 'AMCOpenNum✖︎2' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n/**\n * Détermination du reste et quotient à partir de l'égalité découlant de la division euclidienne\n *\n * @author Cédric GROLLEAU\n * Référence 6C11-1\n */\nexport default function DivisionsEuclidiennesEgalite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne =\n    'Répondre aux questions suivantes sans poser la division.'\n  this.consigneCorrection = texteGras('Pour la division euclidienne de a par b, on cherche les nombres q et r tels que  a = b × q + r avec r < b')\n  this.spacing = 2\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1) // Important sinon opidiv n'est pas joli\n  this.nbQuestions = 4\n  this.sup = 1\n  this.interactif = true\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles, typesDeQuestions\n    if (parseInt(this.sup) === 1) {\n      typesDeQuestionsDisponibles = [1, 2, 2]\n    } else if (parseInt(this.sup) === 2) {\n      typesDeQuestionsDisponibles = [1, 2, 3, 4]\n    }\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (\n      let i = 0, texte, texteCorr, cpt = 0, a, b, q, r;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      q = randint(7, 75)\n      b = randint(3, 25)\n      r = typesDeQuestions === 1 ? 0 : randint(1, b - 1)\n      a = b * q + r\n      texte = `Utilise l'égalité suivante pour donner le quotient et le reste de la division euclidienne de $ ${texNombre(a)} $ par $ ${b} $<br>`\n      switch (typesDeQuestions) {\n        case 1: // égalité \"directe\"\n          texte += `$ ${texNombre(a)} = ${b} \\\\times ${q} $<br>`\n          texteCorr = `L'égalité $ ${texNombre(a)} = ${b} \\\\times ${q} $ correspond bien à l'expression de la division euclidienne de $ ${texNombre(a)} $ par $ ${b} $. <br> Le quotient est ${texteEnCouleurEtGras(q)} et le reste est ${texteEnCouleurEtGras(0)}.`\n          break\n        case 2: // égalité \"directe\"\n          texte += `$ ${texNombre(a)} = ${b} \\\\times ${q} + ${r} $<br>`\n          texteCorr = `${r} est inférieur à ${b}, l'égalité $ ${texNombre(a)} = ${b} \\\\times ${q} + ${r} $ correspond bien à l'expression de la division euclidienne de $ ${texNombre(a)} $ par ${b}. <br> On a donc : ${texteEnCouleurEtGras(q)} le quotient et ${texteEnCouleurEtGras(r)} le reste.`\n          break\n        case 3:\n          texte += `$ ${texNombre(a)} = ${b} \\\\times ${q - 1} + ${r + b} $<br>`\n          texteCorr = `${r + b} est supérieur à ${b}. ${r + b} n'est donc pas le reste. <br> L'égalité $ ${texNombre(a)} = ${b} \\\\times ${q - 1} + ${r + b} $ ne traduit pas directement la division euclidienne de $ ${texNombre(a)} $ par ${b}. <br>\n            Transformons cette égalité en utilisant le fait que $ ${r + b} = ${r} + ${b} $<br>\n            $ ${texNombre(a)} = ${b} \\\\times ${q - 1} + ${r + b} = ${b} \\\\times ${q - 1} + ${b} + ${r} = ${b} \\\\times ${q} + ${r} $ <br>\n            Ainsi, $ ${texNombre(a)} = ${b} \\\\times ${q} + ${r} $\n            <br> On a donc : ${texteEnCouleurEtGras(q)} le quotient et ${texteEnCouleurEtGras(r)} le reste.`\n          break\n        case 4:\n          texte += `$ ${texNombre(a)} = ${b} \\\\times ${q + 1} - ${b - r} $<br>`\n          texteCorr = `L'égalité $ ${texNombre(a)} = ${b} \\\\times ${q + 1} - ${b - r} $ ne traduit pas directement la division euclidienne de $ ${texNombre(a)} $ par ${b}.  <br>\n          Transformons cette égalité : <br>\n          Dans cette égalité on a pris ${q + 1} fois ${b} et on dépasse $ ${texNombre(a)} $. Cela veut dire qu'on a pris ${b} trop de fois.<br>\n          Prenons le une fois de moins, on va donc avoir ${q} fois ${b} : <br> \n          $ ${texNombre(a)} = ${b} \\\\times ${q + 1} - ${b - r} = ${b} \\\\times ${q} + ${b} - ${b - r} = ${b} \\\\times ${q} + ${r} $ <br>\n          Ainsi, $ ${texNombre(a)} = ${b} \\\\times ${q} + ${r} $\n          <br> On a donc : ${texteEnCouleurEtGras(q)} le quotient et ${texteEnCouleurEtGras(r)} le reste.`\n          break\n      }\n      if (this.questionJamaisPosee(this, i, a, b, q, r)) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        if (!context.isAmc) {\n          texte += '<br>' + ajouteChampTexteMathLive(this, 2 * i, 'largeur10 inline', { texte: 'Quotient : ', texteApres: sp(5) })\n          texte += '<br>' + ajouteChampTexteMathLive(this, 2 * i + 1, 'largeur10 inline', { texte: ' Reste : ' })\n          setReponse(this, 2 * i, q)\n          setReponse(this, 2 * i + 1, r)\n        } else {\n          this.autoCorrection[i] = {\n            enonce: texte,\n            propositions: [{ texte: texteCorr, statut: 2, feedback: '' }],\n            reponse: {\n              texte: 'Quotient',\n              valeur: q,\n              param: {\n                digits: 2,\n                decimals: 0,\n                signe: false,\n                exposantNbChiffres: 0,\n                approx: 0\n              }\n            },\n            reponse2: {\n              texte: 'Reste',\n              valeur: r,\n              param: {\n                digits: 2,\n                decimals: 0,\n                signe: false,\n                exposantNbChiffres: 0,\n                approx: 0\n              }\n            }\n          }\n        }\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        // Pour AMC question AmcOpen\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    2,\n    \"1 : L'égalité correspond à la division euclidienne\\n2: L'égalité ne correspond pas nécessairement à la division euclidienne\"\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","amcType","interactifReady","interactifType","DivisionsEuclidiennesEgalite","Exercice","this","consigne","consigneCorrection","texteGras","spacing","context","spacingCorr","nbQuestions","sup","interactif","nouvelleVersion","typesDeQuestionsDisponibles","typesDeQuestions","autoCorrection","listeQuestions","listeCorrections","parseInt","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","q","r","i","cpt","randint","texNombre","texteEnCouleurEtGras","questionJamaisPosee","enonce","propositions","statut","feedback","reponse","valeur","param","digits","decimals","signe","exposantNbChiffres","approx","reponse2","ajouteChampTexteMathLive","texteApres","sp","setReponse","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}