{"version":3,"file":"js/15939.40da544a438e3ddb2b79.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/1e/1E16.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, rienSi1, ecritureAlgebrique, ecritureAlgebriqueSauf1, ecritureParentheseSiNegatif, arrondiVirgule, texFractionReduite, texFractionSigne, texFraction } from '../../modules/outils.js'\nimport { mathalea2d, tableauDeVariation } from '../../modules/2d.js'\nexport const titre = 'Résoudre une inéquation du second degré'\n\n/**\n * Calcul de discriminant pour identifier la forme graphique associée (0 solution dans IR, 1 ou 2)\n * @author Stéphane Guyon\n * Référence 1E11\n*/\nexport default function ResoudreEquationDegre2 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Résoudre dans $\\\\mathbb{R}$ les inéquations suivantes.'\n  this.nbQuestions = 4\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacingCorr = 3\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions\n    if (this.sup === 1) {\n      listeTypeDeQuestions = combinaisonListes(['supérieur ou égal', 'supérieur ou égal', 'strictement supérieur', 'strictement supérieur', 'strictement supérieur', 'inférieur ou égal', 'inférieur ou égal',  'strictement inférieur', 'strictement inférieur', 'pasDeSolution1', 'pasDeSolution2', 'pasDeSolution3', 'pasDeSolution4'], this.nbQuestions)\n    }\n\n    for (let i = 0, texte, texteCorr, a, b, c, x1, x2, y1, k, ligne1, ligne2, ligne3, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      //* ***************************************************\n      if (listeTypeDeQuestions[i] === 'strictement supérieur') {\n        // k(x-x1)(x-x2)\n        x1 = randint(-5, 2, [0])\n        x2 = randint(x1 + 1, 5, [0, -x1])\n        k = randint(-4, 4, [0])\n        a = k\n        b = -k * x1 - k * x2\n        c = k * x1 * x2\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}>0$`\n        texteCorr = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`\n        texteCorr += '<br>On cherche à résoudre $P(x)>0$.'\n        texteCorr += '<br>Pour cela, on cherche ses racines éventuelles.'\n        texteCorr += `<br>$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n        texteCorr += '<br>$\\\\Delta>0$ donc le polynôme admet deux racines : $x_1 = \\\\dfrac{-b-\\\\sqrt{\\\\Delta}}{2a}$ et $x_2 = \\\\dfrac{-b+\\\\sqrt{\\\\Delta}}{2a}$'\n        texteCorr += `<br>$x_1 =\\\\dfrac{${-b}-\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}=${x1}$`\n        texteCorr += `<br>$x_2 =\\\\dfrac{${-b}+\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}=${x2}$`\n        texteCorr += '<br>On sait qu\\'un polynôme du second degré est du signe de $a$ à l\\'extérieur de ses racines.'\n        texteCorr += `<br>Comme $a=${a}`\n        if (a > 0) {\n          texteCorr += '>0$'\n\n          ligne1 = ['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 'z', 20, '+', 20]\n          // '' indique qu'il n'y a rien à afficher dans un tableau de signes (pour laisser un espace sous la borne par exemple)\n          // 'z' pour avoir un zéro sur des pointillés, 't' pour juste les pointillés, 'd' pour des double barres\n          // Commencer chaque chaîne par +/ ou -/ pour indiquer le sens de la variation, 'R/' pour 'sauter une case'\n\n        // xmin détermine la marge à gauche, ymin la hauteur réservée pour le tableau, xmax la largeur réservée pour le tableau et ymax la marge au dessus du tableau\n        } else {\n          texteCorr += '<0$'\n          ligne1 = ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 'z', 20, '-', 20]\n        }\n        texteCorr += '<br>On en déduit le signe du polynôme dans un tableau de signes :'\n        texteCorr += mathalea2d({ xmin: -0.5, ymin: -4.1, xmax: 30, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n          tabInit: [\n            [\n              // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n              ['$x$', 2, 30], [`$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`, 2, 50]],\n            // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n            ['$-\\\\infty$', 30, `${x1}`, 20, `${x2}`, 20, '$+\\\\infty$', 30]\n          ],\n          // tabLines ci-dessous contient les autres lignes du tableau.\n          tabLines: [ligne1],\n          colorBackground: '',\n          espcl: 3.5, // taille en cm entre deux antécédents\n          deltacl: 0.8, // distance entre la bordure et les premiers et derniers antécédents\n          lgt: 8, // taille de la première colonne en cm\n          hauteurLignes: [12, 15]\n        }))\n        if (a > 0) { texteCorr += `<br>On en déduit que $S=]-\\\\infty;${x1}[\\\\cup]${x2};+\\\\infty[$` } else { texteCorr += `<br> On en déduit que $S=]${x1};${x2}[$` }\n      }\n      //* ********************************************************\n      if (listeTypeDeQuestions[i] === 'supérieur ou égal') {\n        // k(x-x1)(x-x2)\n        x1 = randint(-5, 2, [0])\n        x2 = randint(x1 + 1, 5, [0, -x1])\n        k = randint(-4, 4, [0])\n        a = k\n        b = -k * x1 - k * x2\n        c = k * x1 * x2\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}\\\\geq 0$`\n        texteCorr = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`\n        texteCorr += '<br>On cherche à résoudre $P(x)\\\\geq 0$.'\n        texteCorr += '<br>Pour cela, on cherche ses racines éventuelles.'\n        texteCorr += `<br>$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n        texteCorr += '<br>$\\\\Delta>0$ donc  le polynôme admet deux racines : $x_1 = \\\\dfrac{-b-\\\\sqrt{\\\\Delta}}{2a}$ et $x_2 = \\\\dfrac{-b+\\\\sqrt{\\\\Delta}}{2a}$'\n        texteCorr += `<br>$x_1 =\\\\dfrac{${-b}-\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}=${x1}$`\n        texteCorr += `<br>$x_2 =\\\\dfrac{${-b}+\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}=${x2}$`\n        texteCorr += '<br>On sait qu\\'un polynôme du second degré est du signe de $a$ à l\\'extérieur de ses racines.'\n        texteCorr += `<br>Comme $a=${a}`\n        if (a > 0) {\n          texteCorr += '>0$.'\n\n          ligne1 = ['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 'z', 20, '+', 20]\n          // '' indique qu'il n'y a rien à afficher dans un tableau de signes (pour laisser un espace sous la borne par exemple)\n          // 'z' pour avoir un zéro sur des pointillés, 't' pour juste les pointillés, 'd' pour des double barres\n          // Commencer chaque chaîne par +/ ou -/ pour indiquer le sens de la variation, 'R/' pour 'sauter une case'\n\n        // xmin détermine la marge à gauche, ymin la hauteur réservée pour le tableau, xmax la largeur réservée pour le tableau et ymax la marge au dessus du tableau\n        } else {\n          texteCorr += `<0$, on peut dire que $P(x)\\\\geq 0$ sur $S=]-\\\\infty;${x1}]\\\\cup[${x2};+\\\\infty[$`\n          ligne1 = ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 'z', 20, '-', 20]\n        }\n        texteCorr += '<br>On peut résumer le signe du polynôme dans un tableau de signes :'\n        texteCorr += mathalea2d({ xmin: -0.5, ymin: -3.1, xmax: 30, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n          tabInit: [\n            [\n              // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n              ['$x$', 2, 30], [`$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`, 2, 50]],\n            // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n            ['$-\\\\infty$', 30, `${x1}`, 20, `${x2}`, 20, '$+\\\\infty$', 30]\n          ],\n          // tabLines ci-dessous contient les autres lignes du tableau.\n          tabLines: [ligne1],\n          colorBackground: '',\n          espcl: 3.5, // taille en cm entre deux antécédents\n          deltacl: 0.8, // distance entre la bordure et les premiers et derniers antécédents\n          lgt: 8, // taille de la première colonne en cm\n          hauteurLignes: [10, 10]\n        }))\n        if (a > 0) { texteCorr += `<br>On en déduit que $S=]-\\\\infty;${x1}]\\\\cup[${x2};+\\\\infty[$` } else { texteCorr += `<br> On en déduit que $S=[${x1};${x2}]$` }\n      }\n      //* ******************************************************************\n      if (listeTypeDeQuestions[i] === 'inférieur ou égal') {\n        // k(x-x1)(x-x2)\n        x1 = randint(-5, 2, [0])\n        x2 = randint(x1 + 1, 5, [0, -x1])\n        k = randint(-4, 4, [0])\n        a = k\n        b = -k * x1 - k * x2\n        c = k * x1 * x2\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}\\\\leq 0$`\n        texteCorr = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`\n        texteCorr += '<br>On cherche à résoudre $P(x)\\\\leq 0$.'\n        texteCorr += '<br>Pour cela, on cherche ses racines éventuelles.'\n        texteCorr += `<br>$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n        texteCorr += '<br>$\\\\Delta>0$ donc  le polynôme admet deux racines : $x_1 = \\\\dfrac{-b-\\\\sqrt{\\\\Delta}}{2a}$ et $x_2 = \\\\dfrac{-b+\\\\sqrt{\\\\Delta}}{2a}$'\n        texteCorr += `<br>$x_1 =\\\\dfrac{${-b}-\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}=${x1}$`\n        texteCorr += `<br>$x_2 =\\\\dfrac{${-b}+\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}=${x2}$`\n        texteCorr += '<br>On sait qu\\'un polynôme du second degré est du signe de $a$ à l\\'extérieur de ses racines.'\n        texteCorr += `<br>Comme $a=${a}`\n        if (a > 0) {\n          texteCorr += '>0 :$'\n\n          ligne1 = ['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 'z', 20, '+', 20]\n          // '' indique qu'il n'y a rien à afficher dans un tableau de signes (pour laisser un espace sous la borne par exemple)\n          // 'z' pour avoir un zéro sur des pointillés, 't' pour juste les pointillés, 'd' pour des double barres\n          // Commencer chaque chaîne par +/ ou -/ pour indiquer le sens de la variation, 'R/' pour 'sauter une case'\n\n        // xmin détermine la marge à gauche, ymin la hauteur réservée pour le tableau, xmax la largeur réservée pour le tableau et ymax la marge au dessus du tableau\n        } else {\n          texteCorr += '<0 :$'\n          ligne1 = ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 'z', 20, '-', 20]\n        }\n        texteCorr += '<br>On peut résumer le signe du polynôme dans un tableau de signes :'\n        texteCorr += mathalea2d({ xmin: -0.5, ymin: -4.1, xmax: 30, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n          tabInit: [\n            [\n              // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n              ['$x$', 2, 30], [`$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`, 2, 50]],\n            // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n            ['$-\\\\infty$', 30, `${x1}`, 20, `${x2}`, 20, '$+\\\\infty$', 30]\n          ],\n          // tabLines ci-dessous contient les autres lignes du tableau.\n          tabLines: [ligne1],\n          colorBackground: '',\n          espcl: 3.5, // taille en cm entre deux antécédents\n          deltacl: 0.8, // distance entre la bordure et les premiers et derniers antécédents\n          lgt: 8, // taille de la première colonne en cm\n          hauteurLignes: [15, 15]\n        }))\n        if (a < 0) { texteCorr += `<br>On en déduit que $S=]-\\\\infty;${x1}]\\\\cup[${x2};+\\\\infty[$` } else { texteCorr += `<br> On en déduit que $S=[${x1};${x2}]$` }\n      }\n      //* **************************************\n      if (listeTypeDeQuestions[i] === 'strictement inférieur') {\n        // k(x-x1)(x-x2)\n        x1 = randint(-5, 2, [0])\n        x2 = randint(x1 + 1, 5, [0, -x1])\n        k = randint(-4, 4, [0])\n        a = k\n        b = -k * x1 - k * x2\n        c = k * x1 * x2\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}< 0$`\n        texteCorr = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`\n        texteCorr += '<br>On cherche à résoudre $P(x)< 0$.'\n        texteCorr += '<br>Pour cela, on cherche ses racines éventuelles.'\n        texteCorr += `<br>$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n        texteCorr += '<br>$\\\\Delta>0$ donc le polynôme admet deux racines : $x_1 = \\\\dfrac{-b-\\\\sqrt{\\\\Delta}}{2a}$ et $x_2 = \\\\dfrac{-b+\\\\sqrt{\\\\Delta}}{2a}$'\n        texteCorr += `<br>$x_1 =\\\\dfrac{${-b}-\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}=${x1}$`\n        texteCorr += `<br>$x_2 =\\\\dfrac{${-b}+\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}=${x2}$`\n        texteCorr += '<br>On sait qu\\'un polynôme du second degré est du signe de $a$ à l\\'extérieur de ses racines.'\n        texteCorr += `<br>Comme $a=${a}`\n        if (a > 0) {\n          texteCorr += '>0 :$'\n\n          ligne1 = ['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 'z', 20, '+', 20]\n          // '' indique qu'il n'y a rien à afficher dans un tableau de signes (pour laisser un espace sous la borne par exemple)\n          // 'z' pour avoir un zéro sur des pointillés, 't' pour juste les pointillés, 'd' pour des double barres\n          // Commencer chaque chaîne par +/ ou -/ pour indiquer le sens de la variation, 'R/' pour 'sauter une case'\n\n        // xmin détermine la marge à gauche, ymin la hauteur réservée pour le tableau, xmax la largeur réservée pour le tableau et ymax la marge au dessus du tableau\n        } else {\n          texteCorr += '<0 :$'\n          ligne1 = ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 'z', 20, '-', 20]\n        }\n        texteCorr += '<br>On peut résumer le signe du polynôme dans un tableau de signes :'\n        texteCorr += mathalea2d({ xmin: -0.5, ymin: -4.1, xmax: 30, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n          tabInit: [\n            [\n              // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n              ['$x$', 2, 30], [`$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`, 2, 50]],\n            // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n            ['$-\\\\infty$', 30, `${x1}`, 20, `${x2}`, 20, '$+\\\\infty$', 30]\n          ],\n          // tabLines ci-dessous contient les autres lignes du tableau.\n          tabLines: [ligne1],\n          colorBackground: '',\n          espcl: 3.5, // taille en cm entre deux antécédents\n          deltacl: 0.8, // distance entre la bordure et les premiers et derniers antécédents\n          lgt: 8, // taille de la première colonne en cm\n          hauteurLignes: [15, 15]\n        }))\n        if (a < 0) { texteCorr += `<br>On en déduit que $S=]-\\\\infty;${x1}[\\\\cup]${x2};+\\\\infty[$` } else { texteCorr += `<br> On en déduit que $S=]${x1};${x2}[$` }\n      }\n      //* *************************************************************\n      if (listeTypeDeQuestions[i] === 'pasDeSolution1') {\n        k = randint(1, 5)\n        x1 = randint(-3, 3, [0])\n        y1 = randint(1, 5)\n        if (choice(['+', '-']) === '+') { // k(x-x1)^2 + y1 avec k>0 et y1>0\n          a = k\n          b = -2 * k * x1\n          c = k * x1 * x1 + y1\n        } else { // -k(x-x1)^2 -y1 avec k>0 et y1>0\n          a = -k\n          b = 2 * k * x1\n          c = -k * x1 * x1 - y1\n        }\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}< 0$`\n        if (b === 0) {\n          texte = `$${rienSi1(a)}x^2${ecritureAlgebrique(c)}< 0$`\n        }\n        texteCorr = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`\n        if (b === 0) {\n          texteCorr = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=$${rienSi1(a)}x^2${ecritureAlgebrique(c)}$`\n        }\n        texteCorr += '<br>On cherche à résoudre $P(x)< 0$.'\n        texteCorr += '<br>Pour cela, on cherche ses racines éventuelles.'\n        texteCorr += `<br>$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n        texteCorr += '<br>$\\\\Delta<0$ donc le polynôme $P$ n\\'admet pas de racine.'\n        texteCorr += `<br> Il est toujours du signe de $a=${a}`\n        if (a > 0) {\n          texteCorr += '>0$, donc $P(x)>0$ pour tout $x$ de $\\\\mathbb{R}$.'\n          texteCorr += '<br> On en déduit $S=\\\\emptyset$.'\n        } else {\n          texteCorr += '<0$, donc $P(x)<0$ pour tout $x$ de $\\\\mathbb{R}$.'\n          texteCorr += '<br> On en déduit $S=\\\\mathbb{R}$.'\n        }\n      }\n      //* *******************************\n      if (listeTypeDeQuestions[i] === 'pasDeSolution2') {\n        k = randint(1, 5)\n        x1 = randint(-3, 3, [0])\n        y1 = randint(1, 5)\n        if (choice(['+', '-']) === '+') { // k(x-x1)^2 + y1 avec k>0 et y1>0\n          a = k\n          b = -2 * k * x1\n          c = k * x1 * x1 + y1\n        } else { // -k(x-x1)^2 -y1 avec k>0 et y1>0\n          a = -k\n          b = 2 * k * x1\n          c = -k * x1 * x1 - y1\n        }\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}\\\\leq 0$`\n        if (b === 0) {\n          texte = `$${rienSi1(a)}x^2${ecritureAlgebrique(c)}\\\\leq0$`\n        }\n        texteCorr = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`\n        if (b === 0) {\n          texteCorr = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=$${rienSi1(a)}x^2${ecritureAlgebrique(c)}$`\n        }\n        texteCorr += '<br>On cherche à résoudre $P(x)\\\\leq 0$.'\n        texteCorr += '<br>Pour cela, on cherche ses racines éventuelles.'\n        texteCorr += `<br>$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n        texteCorr += '<br>$\\\\Delta<0$ donc le polynôme $P$ n\\'admet pas de racine.'\n        texteCorr += `<br> Il est toujours du signe de $a=${a}`\n        if (a > 0) {\n          texteCorr += '>0$, donc $P(x)>0$ pour tout $x$ de $\\\\mathbb{R}$.'\n          texteCorr += '<br> On en déduit $S=\\\\emptyset$.'\n        } else {\n          texteCorr += '<0$, donc $P(x)<0$ pour tout $x$ de $\\\\mathbb{R}$.'\n          texteCorr += '<br> On en déduit $S=\\\\mathbb{R}$.'\n        }\n      }\n      //* ************************************************ */\n      if (listeTypeDeQuestions[i] === 'pasDeSolution3') {\n        k = randint(1, 5)\n        x1 = randint(-3, 3, [0])\n        y1 = randint(1, 5)\n        if (choice(['+', '-']) === '+') { // k(x-x1)^2 + y1 avec k>0 et y1>0\n          a = k\n          b = -2 * k * x1\n          c = k * x1 * x1 + y1\n        } else { // -k(x-x1)^2 -y1 avec k>0 et y1>0\n          a = -k\n          b = 2 * k * x1\n          c = -k * x1 * x1 - y1\n        }\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}\\\\geq 0$`\n        if (b === 0) {\n          texte = `$${rienSi1(a)}x^2${ecritureAlgebrique(c)}\\\\geq0$`\n        }\n        texteCorr = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`\n        if (b === 0) {\n          texteCorr = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=$${rienSi1(a)}x^2${ecritureAlgebrique(c)}$`\n        }\n        texteCorr += '<br>On cherche à résoudre $P(x)\\\\geq 0$.'\n        texteCorr += '<br>Pour cela, on cherche ses racines éventuelles.'\n        texteCorr += `<br>$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n        texteCorr += '<br>$\\\\Delta<0$ donc le polynôme $P$ n\\'admet pas de racine.'\n        texteCorr += `<br> Il est toujours du signe de $a=${a}`\n        if (a < 0) {\n          texteCorr += '<0$, donc $P(x)<0$ pour tout $x$ de $\\\\mathbb{R}$.'\n          texteCorr += '<br> On en déduit $S=\\\\emptyset$.'\n        } else {\n          texteCorr += '>0$, donc $P(x)>0$ pour tout $x$ de $\\\\mathbb{R}$.'\n          texteCorr += '<br> On en déduit $S=\\\\mathbb{R}$.'\n        }\n      }\n      if (listeTypeDeQuestions[i] === 'pasDeSolution4') {\n        k = randint(1, 5)\n        x1 = randint(-3, 3, [0])\n        y1 = randint(1, 5)\n        if (choice(['+', '-']) === '+') { // k(x-x1)^2 + y1 avec k>0 et y1>0\n          a = k\n          b = -2 * k * x1\n          c = k * x1 * x1 + y1\n        } else { // -k(x-x1)^2 -y1 avec k>0 et y1>0\n          a = -k\n          b = 2 * k * x1\n          c = -k * x1 * x1 - y1\n        }\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}> 0$`\n        if (b === 0) {\n          texte = `$${rienSi1(a)}x^2${ecritureAlgebrique(c)}> 0$`\n        }\n        texteCorr = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`\n        if (b === 0) {\n          texteCorr = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=$${rienSi1(a)}x^2${ecritureAlgebrique(c)}$`\n        }\n        texteCorr += '<br>On cherche à résoudre $P(x)> 0$.'\n        texteCorr += '<br>Pour cela, on cherche ses racines éventuelles.'\n        texteCorr += `<br>$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n        texteCorr += '<br>$\\\\Delta<0$ donc le polynôme $P$ n\\'admet pas de racine.'\n        texteCorr += `<br> Il est toujours du signe de $a=${a}`\n        if (a > 0) {\n          texteCorr += '>0$, donc $P(x)>0$ pour tout $x$ de $\\\\mathbb{R}$.'\n          texteCorr += '<br> On en déduit $S=\\\\mathbb{R}$.'\n        } else {\n          texteCorr += '<0$, donc $P(x)<0$ pour tout $x$ de $\\\\mathbb{R}$.'\n          texteCorr += '<br> On en déduit $S=\\\\emptyset$.'\n        }\n      }\n      if (this.questionJamaisPosee(i, a, b, c)) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Solutions entières\\n2 : Solutions réelles et calcul du discriminant non obligatoire']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ResoudreEquationDegre2","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","spacingCorr","sup","nouvelleVersion","listeTypeDeQuestions","listeQuestions","listeCorrections","combinaisonListes","texte","texteCorr","a","b","c","x1","x2","y1","k","ligne1","i","cpt","randint","rienSi1","ecritureAlgebriqueSauf1","ecritureAlgebrique","ecritureParentheseSiNegatif","mathalea2d","xmin","ymin","xmax","ymax","scale","tableauDeVariation","tabInit","tabLines","colorBackground","espcl","deltacl","lgt","hauteurLignes","choice","questionJamaisPosee","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}