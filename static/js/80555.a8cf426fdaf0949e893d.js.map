{"version":3,"file":"js/80555.a8cf426fdaf0949e893d.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/5e/canPredef5-1.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { listeQuestionsToContenu, randint, calcul, texNombrec, choice, texNombre, sp, shuffle, texPrix, combinaisonListesSansChangerOrdre } from '../../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../../modules/gestionInteractif.js'\nimport FractionEtendue from '../../../modules/FractionEtendue.js'\nimport Grandeur from '../../../modules/Grandeur.js'\nimport { droiteGraduee2, mathalea2d } from '../../../modules/2d.js'\nexport const titre = 'Course aux nombres début de 5e'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n/**\n * Course aux nombres avec 30 questions début de 5e\n * @author jeanclaude Lhote\n * Créé pendant l'été 2021\n * Référence canPredef5-1\n*/\nexport default function CourseAuxNombres5e (numeroExercice) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 30\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let a, b, c, d, resultat, propositions\n    const fruits = [\n      ['pêches', 4, 10, 30],\n      ['Noix', 5, 4, 13],\n      ['cerises', 6, 11, 20],\n      ['pommes', 2, 20, 40],\n      ['framboises', 15, 1, 5],\n      ['fraises', 6, 5, 10],\n      ['citrons', 1.5, 15, 30],\n      ['bananes', 1.5, 15, 25]\n    ]\n    const hauteurs = [\n      ['chaise', 75, 115, 'cm'],\n      ['grue', 120, 250, 'dm'],\n      ['tour', 50, 180, 'm'],\n      ['girafe', 40, 50, 'dm'],\n      ['coline', 75, 150, 'm']\n    ]\n    const typeQuestionsDisponibles = [\n      'q1', // produit d'entiers\n      'q2', // somme d'entiers\n      'q3', // différence d'entiers\n      'q4', // Somme de deux décimaux avec retenue\n      'q5', // Somme stratégique d'entiers\n      'q6', // conversions horaires\n      'q7', // (double, moitié, triple, tiers ...)\n      'q8', // produit stratégique\n      'q9', // division\n      'q10', // division euclidienne\n      'q11', // priorités opératoires\n      'q12', // différence ab - ce avec e>b\n      'q13', // petit problème numérique\n      'q14', // produit ab × c\n      'q15', // somme des angles\n      'q16', // critère de divisibilité\n      'q17', // quart\n      'q18', // Moitié (aboutir à un décimal)\n      'q19', // a/b × c\n      'q20', // Proportionnalité simple\n      'q21', // pourcentage.\n      'q22', // simplification de fraction\n      'q23', // produit de décimaux.\n      'q24', // quotient comme pourcentage\n      'q25', // Grandeurs métriques\n      'q26', // Durée\n      'q27', // Soustraction/ordre de grandeur\n      'q28', // Proportionnalité\n      'q29', // quotient d'un entier par un décimal\n      'q30' // produit stratégique\n    ] // On créé 3 types de questions\n    const listeTypeQuestions = combinaisonListesSansChangerOrdre(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'q1':\n          a = randint(12, 19)\n          b = randint(2, 5)\n          resultat = a * b\n          texte = `$${a} \\\\times ${b}$`\n          texteCorr = `$${a} \\\\times ${b}=${a * b}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q2':\n          a = randint(2, 50) + 100\n          b = randint(50, 99)\n          resultat = calcul(a + b)\n          texte = `$${b} + ${a}$`\n          texteCorr = `$${b} + ${a}=${a + b}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q3':\n          a = randint(2, 50) + 100\n          b = randint(50, 99)\n          resultat = calcul(a - b)\n          texte = `$${a} - ${b}$`\n          texteCorr = `$${a} - ${b}=${a - b}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q4':\n          a = randint(1, 9)\n          b = randint(1, 9, a)\n          c = randint(1, 9, [a, b])\n          d = randint(1, 9, [a, b, c])\n          resultat = calcul(10 + (b + d) * 0.1 + c * 0.01)\n          texte = `$${texNombrec(a + b * 0.1 + c * 0.01)}+${texNombrec(10 - a + d * 0.1)}$`\n          texteCorr = `$${texNombrec(a + b * 0.1 + c * 0.01)}+${texNombrec(10 - a + d * 0.1)}=${texNombrec(10 + (b + d) * 0.1 + c * 0.01)}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q5':\n          a = randint(1, 9)\n          b = randint(1, 9, a)\n          c = randint(3, 7) * 10\n          d = randint(10, 15) * 10 - c\n          resultat = calcul(2 * (c + d))\n          texte = `$${c - a} + ${d + b} + ${c + a} + ${d - b}$`\n          texteCorr = `$${c - a} + ${d + b} + ${c + a} + ${d - b} = ${2 * c} + ${2 * d} = ${2 * (c + d)}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n\n          break\n        case 'q6':\n          a = randint(2, 4)\n          b = randint(10, 59)\n          d = calcul(a * 60 + b)\n          texte = `Convertir $${d}$ minutes en heures(h) et minutes(min) :`\n          texteCorr = `$${d} = ${a} \\\\times 60 + ${b}$ donc $${d}$ minutes = ${a}h ${b}min`\n          setReponse(this, i, `${a}h${b}min`)\n          break\n        case 'q7':\n          a = randint(1, 10) * 2\n          texte = `Le triple d'un nombre vaut ${3 * a}, combien vaut sa moitié ?`\n          texteCorr = `Le nombre est ${a}, sa moitié est ${calcul(a / 2)}.`\n          setReponse(this, i, calcul(a / 2), { formatInteractif: 'calcul' })\n          break\n        case 'q8':\n          a = randint(1, 9)\n          b = randint(1, 9, a)\n          c = randint(1, 9, [a, b])\n          d = calcul(a + b * 0.1 + c * 0.01)\n          resultat = calcul(100 * d)\n          switch (choice([1, 2, 3, 4])) {\n            case 1:\n              texte = `$4 \\\\times ${texNombre(d)}\\\\times 25$`\n              texteCorr = `$4 \\\\times ${texNombre(d)}\\\\times 25 = 100 \\\\times ${texNombre(d)} = ${calcul(100 * d)}$`\n              break\n            case 2:\n              texte = `$2 \\\\times ${texNombre(d)}\\\\times 50$`\n              texteCorr = `$2 \\\\times ${texNombre(d)}\\\\times 50 = 100 \\\\times ${texNombre(d)} = ${calcul(100 * d)}$`\n              break\n            case 3:\n              texte = `$25 \\\\times ${texNombre(d)}\\\\times 4$`\n              texteCorr = `$25 \\\\times ${texNombre(d)}\\\\times 4 = 100 \\\\times ${texNombre(d)} = ${calcul(100 * d)}$`\n              break\n            case 4:\n              texte = `$50 \\\\times ${texNombre(d)}\\\\times 2$`\n              texteCorr = `$50 \\\\times ${texNombre(d)}\\\\times 2 = 100 \\\\times ${texNombre(d)} = ${calcul(100 * d)}$`\n              break\n          }\n          break\n        case 'q9':\n          a = randint(5, 15)\n          b = randint(2, 8)\n          c = a * b\n          resultat = a\n          texte = `$${c} \\\\div ${b}$`\n          texteCorr = `$${c} \\\\div ${b}=${a}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q10':\n          a = choice([25, 20, 50, 40])\n          b = randint(5, a - 1)\n          c = randint(3, 9)\n          d = c * a + b\n          texte = `Quel est le reste de la division de ${d} par ${a} ?`\n          texteCorr = `$${d}=${a} \\\\times ${c} + ${b}$ avec $${b}<${a}$ donc le reste de la division de ${d} par ${a} est ${b}.`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q11':\n          a = randint(5, 9)\n          b = 20 - a\n          c = randint(3, 9)\n          resultat = b + a * c\n          texte = `$${b} + ${a} \\\\times ${c}$`\n          texteCorr = `$${b} + ${a} \\\\times ${c}= ${b} + ${a * c} = ${resultat}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q12':\n          a = randint(20, 70)\n          b = randint(20, 70, a)\n          resultat = a * 100 + b * 10\n          texte = `$${a}$ centaines et $${b}$ dizaines = ?`\n          texteCorr = `$${a} \\\\times 100 + ${b} \\\\times 10 = ${a * 100 + b * 10}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q13':\n          a = randint(2, 4)\n          b = randint(10, 59)\n          d = calcul(a * 60 + b)\n          texte = `$${a}$ heures et ${b} minutes font combine de minutes ?`\n          texteCorr = `$${a}h ${b}min = ${a} \\\\times 60 + ${b}= ${d}$ donc $${d}$ minutes`\n          setReponse(this, i, d)\n          break\n        case 'q14':\n          b = randint(1, 9)\n          c = randint(0, 9)\n          d = randint(0, 9, [b, c])\n          a = calcul(b * 100 + c * 10 + d)\n          resultat = a % 3\n          texte = `Quel est le reste de la division de $${a}$ par $3$ ?`\n          texteCorr = `Le reste de la division de $${a}$ par $3$ est ${a % 3}`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q15':\n          b = randint(5, 9)\n          a = calcul(b * 90 + 9)\n          resultat = b * 10 + 1\n          texte = `$${a}\\\\div 9$`\n          texteCorr = `$${a}\\\\div 9 = ${c}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q16':\n          a = randint(5, 9)\n          b = randint(2, 8)\n          c = randint(1, 3)\n          resultat = calcul(a * 10 + b + c * 10 + 9)\n          texte = `$${a * 10 + b} + ${c * 10 + 9}$`\n          texteCorr = `$${a * 10 + b} + ${c * 10 + 9}=${a * 10 + b}+${(c + 1) * 10} - 1 = ${d}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q17':\n          a = randint(5, 15)\n          b = a * 8\n          resultat = a * 2\n          texte = `Quel est le quart de $${b}$ ?`\n          texteCorr = `Le quart de $${b}$ est $${a * 2}.$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q18':\n          a = randint(5, 9)\n          b = randint(6, 9)\n          c = randint(1, 5)\n          d = randint(1, 4)\n          resultat = d * 10 + b\n          texte = `$${c * 10 + a} + \\\\dots = ${calcul((c + d) * 10 + b + a)}$`\n          texteCorr = `$${calcul((c + d) * 10 + b + a)} - ${c * 10 + a} = ${resultat}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q19':\n          a = randint(11, 24) * 2 + 1\n          resultat = calcul(a * 5)\n          texte = `$${a}\\\\times 5$`\n          texteCorr = `$${a}\\\\times 5 = ${a} \\\\div 2 \\\\times 10 = ${calcul(a / 2)}\\\\times 10 =${resultat}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q20':\n          a = randint(0, 7)\n          b = fruits[a][1]\n          c = randint(fruits[a][2], fruits[a][3])\n          resultat = calcul(c / 50 * b)\n          texte = `$${texNombrec(c / 100)}$ kg de ${fruits[a][0]} coûtent $${texNombrec(c / 100 * b)}$ €, combien coûtent $${texNombrec(c / 50)}$ kg de ${fruits[a][0]} ?`\n          texteCorr = `$${texNombrec(c / 100 * b)} \\\\times 2 = ${texNombre(resultat)}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q21':\n          a = randint(3, 7)\n          b = randint(2, 9)\n          c = randint(1, 9)\n          d = randint(5, 9) * choice([10, 100])\n          resultat = calcul((a * 100 + b * 10 + c) * d)\n          texte = `$${texNombrec(a * 100 + b * 10 + c)}\\\\times ${d}$<br> Choisis la bonne réponse sans effectuer précisément le calcul<br>`\n          propositions = shuffle([`$${texNombre(resultat)}$`, `$${texNombrec(d * 1000 + a * 100 + b * 10 + c)}$`, `$${texNombrec((a * 1000 + b * 100 + c) * d)}$`])\n          texte += `${propositions[0]} ${sp(4)} ${propositions[1]} ${sp(4)} ${propositions[2]}`\n          texteCorr = `$${texNombrec(a * 100 + b * 10 + c)} \\\\times ${d} = ${texNombre(resultat)}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q22':\n          a = randint(11, 24) * 10 + randint(0, 9)\n          if (choice([true, false])) {\n            resultat = calcul(a / 100)\n            texte = `Convertir $${a}$ cm en m.`\n            texteCorr = `$${a}$ cm $= ${a} / 100$m $=${texNombre(resultat)}$ m`\n          } else {\n            resultat = calcul(a / 1000)\n            texte = `Convertir $${a}$ mm en m.`\n            texteCorr = `$${a}$ mm $= ${a} / 1000$m $=${texNombre(resultat)}$ m`\n          }\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q23':\n          a = randint(4, 5)\n          c = randint(2, 3)\n          resultat = calcul(randint(2, 9) * 10)\n          b = calcul(resultat * a)\n\n          texte = `$\\\\dfrac{${c}}{${a}} \\\\text{ de } ${b} \\\\text{ L} = \\\\dots \\\\text{ L}$`\n          texteCorr = `$\\\\dfrac{${c}}{${a}}$ de $${b}$ L = ${c}\\\\times \\\\dfrac{${b}}{${a}}=${c}\\\\times ${resultat}=${resultat * c} L`\n          setReponse(this, i, resultat * c, { formatInteractif: 'calcul' })\n          break\n        case 'q24':\n          a = choice([12, 15, 20, 25])\n          b = randint(1, a - 1)\n          d = randint(5, 9)\n          c = d * a + b\n          resultat = c % a\n          texte = `Je possède ${c} bonbons et je fabrique des sacs de ${a} bonbons. Une fois mes sacs complétés, combien me restera-t-il de bonbons ?`\n          texteCorr = `$${c}=${d}\\\\times ${a} + ${b}$ , donc il me restera ${b} bonbons.`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q25':\n          a = randint(0, 4)\n          b = randint(hauteurs[a][1], hauteurs[a][2])\n          propositions = shuffle([`$${b}$ m`, `$${b}$ dm`, `$${b}$ cm`])\n          texte = `Choisis parmi les propositions suivantes la hauteur d'une ${hauteurs[a][0]}<br>`\n          texte += `${propositions[0]} ${sp(4)} ${propositions[1]} ${sp(4)} ${propositions[2]}`\n          texteCorr = `La hauteur d'une ${hauteurs[a][0]} est ${b} ${hauteurs[a][3]}`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q26':\n          a = randint(2, 9) * 5\n          b = randint(2, 9, a) * 10\n          resultat = calcul(a * b / 100)\n          texte = `$${a}\\\\%$ de $${b}$`\n          texteCorr = `$${a}\\\\%$ de $${b} = ${resultat}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q27':\n          a = randint(3, 6) * 15\n          b = randint(1, 3)\n          resultat = calcul(a * (b + 0.25))\n          texte = `Une voiture roule à une vitesse constante de ${a} km/h. Quelle distance en km parcourt-elle en ${b} h et 20 min`\n          texteCorr = `$${a}\\\\times ${calcul(b + 0.5)} = ${resultat}$`\n          setReponse(this, i, new Grandeur(resultat, 'km'), { formatInteractif: 'longueur' })\n          break\n        case 'q28':\n          a = randint(3, 9)\n          b = randint(0, 1)\n          texte = `Est-il vrai qu'un carré de côté ${a} cm a le même périmètre qu'un rectangle de largeur ${a - b} cm et de longueur ${a + 1} cm ? (V ou F)`\n          if (b === 0) {\n            texteCorr = `Faux car $4\\\\times ${a} cm\\\\neq 2\\\\times ${a} cm + 2\\\\times ${a + 1} cm.`\n            setReponse(this, i, 'F')\n          } else {\n            texteCorr = `Vrai car $4\\\\times ${a} cm = 2\\\\times ${a - 1} cm + 2\\\\times ${a + 1} cm= ${4 * a} cm.`\n            setReponse(this, i, 'V')\n          }\n          break\n        case 'q29':\n          a = randint(3, 5) // dénominateur\n          b = randint(2, a * 4 - 1) // numérateur\n          c = new FractionEtendue(b, a)\n          resultat = calcul(b / a)\n\n          texte = 'Determiner l\\'abscisse du point A situé ci-dessous :<br>' + mathalea2d({ xmin: -1, ymin: -1, xmax: 14, ymax: 1.5, scale: 0.5 }, droiteGraduee2({\n            Unite: 3,\n            Min: 0,\n            Max: 4.2,\n            x: 0,\n            y: 0,\n            thickSecDist: 1 / a,\n            thickSec: true,\n            thickoffset: 0,\n            axeStyle: '|->',\n            pointListe: [[b / a, 'A']],\n            pointCouleur: 'blue',\n            labelsPrincipaux: true,\n            step1: 1,\n            step2: 1\n          }))\n          texteCorr = `L'abscisse du point A est \\\\dfrac{${b}}{${a}}`\n          if (a === 3) {\n            setReponse(this, i, [c.texFraction, `${Math.floor(a / b)}+\\\\dfrac{${a % b}}{${b}}`], { formatInteractif: 'calcul' })\n          } else {\n            setReponse(this, i, [c.texFraction, resultat, `${Math.floor(a / b)}+\\\\dfrac{${a % b}}{${b}}`], { formatInteractif: 'calcul' })\n          }\n          break\n        case 'q30':\n          a = randint(0, 7) // index du fruit\n          b = calcul(fruits[a][1] * (1 + choice([-1, 1]) * randint(1, 3) * 0.1)) // prix au kg\n          c = Math.round(randint(fruits[a][2], fruits[a][3] / 10)) // nombre de kg première valeur\n          d = randint(2, 6, c) // nombre de kg supplémentaires\n          resultat = calcul(d * b)\n          texte = `$${c}$ kg de ${fruits[a][0]} coûtent $${texPrix(c * b)}$ €.<br> $${c + d}$ kg de ces mêmes ${fruits[a][0]} coûtent $${texPrix((c + d) * b)}$ €.<br>Combien coûtent ${d} kg de ces ${fruits[a][0]} ?`\n          texteCorr = `$${texPrix((c + d) * b)} € - ${texPrix(c * b)} € =${texPrix(resultat)} €$`\n          setReponse(this, i, texPrix(resultat) + '€')\n          break\n      }\n      if (listeTypeQuestions[i] === 'q22') {\n        texte += ajouteChampTexteMathLive(this, i, 'largeur10 inline', { texteApres: ' m' })\n      } else if (listeTypeQuestions[i] === 'q25') {\n        texte += ajouteChampTexteMathLive(this, i, 'largeur10 inline', { texteApres: ` ${hauteurs[a][3]}` })\n      } else {\n        texte += ajouteChampTexteMathLive(this, i)\n      }\n      if (this.questionJamaisPosee(i, a, b, c, d, resultat)) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = ['Choix des questions (nombres séparés par des tirets)',\n  `1 : Multiplication (facteur 12 à 19)\\n\n  2 : Somme à abc + de\\n\n  3 : Différence abc - de\\n\n  4 : Somme de deux décimaux avec retenue\\n\n  5 : Somme astucieuse\\n\n  6 : Conversion en heures et minutes\\n\n  7 : Triple et moitié\\n\n  8 : Produit avec facteur 100\\n\n  9 : Division\\n\n  10 : Reste de division par diviseur à 2 chiffres\\n\n  11 : Priorité opératoire\\n\n  12 : Recomposer une nombre avec chevauchement\\n\n  13 : conversion heures et minutes vers minutes\\n\n  14 :  Reste de la division par 3\\n\n  15 :  Une division par 9 qui tombe juste\\n\n  16 :  ajouter un nombre de la forme 10n+9\\n\n  17 :  quart d'un nombre\\n\n  18 :  addition à trou\\n\n  19 :  Nombre impair de 2 chiffres × 5\\n\n  20 :  Prix de la mitié\\n\n  21 :  Ordre de grandeur\\n\n  22 :  Conversion cm ou mm -> m\\n\n  23 :  Fraction m/n d'une quantité de L\\n\n  24 :  Reste de la division euclidienne\\n\n  25 :  Ordre de grandeur : hauteurs\\n\n  26 :  Appliquer un pourcentage\\n\n  27 :  Calcul de distance à vitesse constante\\n\n  28 :  Comparaison de périmètre\\n\n  29 :  Repérage fraction\\n\n  30 : Proportionnalité par linéarité\\n`]\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","CourseAuxNombres5e","sup","a","b","c","d","resultat","propositions","fruits","hauteurs","listeTypeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","cpt","randint","setReponse","formatInteractif","calcul","texNombrec","choice","texNombre","shuffle","sp","Grandeur","FractionEtendue","mathalea2d","xmin","ymin","xmax","ymax","scale","droiteGraduee2","Unite","Min","Max","x","y","thickSecDist","thickSec","thickoffset","axeStyle","pointListe","pointCouleur","labelsPrincipaux","step1","step2","texFraction","Math","floor","round","texPrix","ajouteChampTexteMathLive","texteApres","listeQuestionsToContenu"],"sourceRoot":""}