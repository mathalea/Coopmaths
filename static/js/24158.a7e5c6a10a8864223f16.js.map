{"version":3,"file":"js/24158.a7e5c6a10a8864223f16.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2S12-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, texNombre, texNombrec } from '../../modules/outils.js'\nexport const titre = 'Déterminer un taux d’évolution global'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const dateDePublication = '06/01/2022'\n\n/**\n* Problèmes d'évolutions successives'\n*\n* * Situations variées : prix, habitants, adhérents  ##\n*\n* * Déterminer un taux d'évolution global\n* * Mélange des 3 types de problèmes\n* @author Florence Tapiero\n* 2S12-1\n*/\n\nexport default function EvolutionsSuccesives () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = ''\n  this.nbQuestions = 3\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 4 // type de questions\n  this.spacing = 1\n  this.spacingCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = [] // Cette ligne doit être ajoutée afin de vider les précédentes valeurs pour AMC\n    const typesDeQuestionsDisponibles = [1, 2, 3]\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let typesDeQuestions, CM1, CM2, CM, p1, p2, p, verbe1, nom1, verbe2, nom2, nom, taux, t1, t2, t\n    for (let i = 0, texte, texteCorr, taux1, taux2, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        case 1 :\n          taux1 = randint(-80, 80, 0)\n          taux2 = randint(-80, 80, 0)\n          if (taux1 > 0) {\n            verbe1 = 'Augmenter'\n            nom1 = 'hausse'\n          }\n          if (taux2 > 0) {\n            verbe2 = 'Augmenter'\n            nom2 = 'hausse'\n          }\n          if (taux1 < 0) {\n            verbe1 = 'Diminuer'\n            nom1 = 'baisse'\n          }\n          if (taux2 < 0) {\n            verbe2 = 'Diminuer'\n            nom2 = 'baisse'\n          }\n          p1 = calcul(taux1 / 100)\n          p2 = calcul(taux2 / 100)\n          t1 = Math.abs(taux1)\n          t2 = Math.abs(taux2)\n          CM1 = calcul(1 + p1)\n          CM2 = calcul(1 + p2)\n          CM = calcul(CM1 * CM2)\n          p = calcul(CM - 1)\n          taux = calcul(p * 100)\n          t = Math.abs(taux)\n          if (taux > 0) {\n            nom = 'hausse'\n          }\n          if (taux < 0) {\n            nom = 'baisse'\n          }\n          texte = `Le prix d'un article subit une ${nom1} de $${t1}~\\\\%$ puis une ${nom2} de $${t2}~\\\\%$.<br>Déterminer le taux d'évolution global du prix de cet article.`\n          texteCorr = 'Pour déterminer le taux d\\'évolution global, on commence par calculer le coefficient multiplicateur global.'\n          texteCorr += '<br>Si une grandeur subit des évolutions successives, le coefficient multiplicateur global est le produit des coefficients multiplicateurs de chaque évolution :'\n          texteCorr += `<br><br>Première évolution : ${verbe1} de $${t1}~\\\\%$ revient à multiplier par `\n          if (taux1 > 0) {\n            texteCorr += `$CM_1 = 1 + \\\\dfrac{${texNombrec(t1)}}{100} = ${texNombrec(CM1)}$.`\n          }\n          if (taux1 < 0) {\n            texteCorr += `$CM_1 = 1 - \\\\dfrac{${texNombrec(t1)}}{100} = ${texNombre(CM1)}$.`\n          }\n          texteCorr += `<br><br>Deuxième évolution : ${verbe2} de $${t2}~\\\\%$ revient à multiplier par `\n          if (taux2 > 0) {\n            texteCorr += `$CM_2 = 1 + \\\\dfrac{${texNombrec(t2)}}{100} = ${texNombre(CM2)}$.`\n          }\n          if (taux2 < 0) {\n            texteCorr += `$CM_2 = 1 - \\\\dfrac{${texNombrec(t2)}}{100} = ${texNombre(CM2)}$.`\n          }\n          texteCorr += `<br><br>Le coefficient multiplicateur global est égal à $CM = CM_1 \\\\times CM_2 = ${texNombre(CM1)} \\\\times ${texNombre(CM2)} =${texNombre(CM)}$.`\n          if (CM > 1) {\n            texteCorr += `<br><br>Or $CM =${texNombre(CM)} = 1 + ${texNombre(Math.abs(p))} = 1 + \\\\dfrac{${texNombrec(t)}}{100}$ ce qui correspond à une hausse de $${texNombrec(t)}~\\\\%$.`\n          }\n          if (CM < 1) {\n            texteCorr += `<br><br>Or $CM = ${texNombre(CM)} = 1 - ${texNombre(Math.abs(p))} = 1-\\\\dfrac{${texNombrec(t)}}{100}$ ce qui correspond à une baisse de $${texNombrec(t)}~\\\\%$.`\n          }\n          texteCorr += `<br>Le prix de l'article a subi une ${nom} globale de $${texNombre(Math.abs(taux))}~\\\\%$.`\n          break\n        case 2 :\n          taux1 = randint(-20, 20, 0)\n          taux2 = randint(-20, 20, 0)\n          if (taux1 > 0) {\n            verbe1 = 'Augmenter'\n            nom1 = 'augmenté'\n          }\n          if (taux2 > 0) {\n            verbe2 = 'Augmenter'\n            nom2 = 'augmenté'\n          }\n          if (taux1 < 0) {\n            verbe1 = 'Diminuer'\n            nom1 = 'diminué'\n          }\n          if (taux2 < 0) {\n            verbe2 = 'Diminuer'\n            nom2 = 'diminué'\n          }\n          p1 = calcul(taux1 / 100)\n          p2 = calcul(taux2 / 100)\n          t1 = Math.abs(taux1)\n          t2 = Math.abs(taux2)\n          CM1 = calcul(1 + p1)\n          CM2 = calcul(1 + p2)\n          CM = calcul(CM1 * CM2)\n          p = calcul(CM - 1)\n          taux = calcul(p * 100)\n          t = Math.abs(taux)\n          if (taux > 0) {\n            nom = 'augmenté'\n          }\n          if (taux < 0) {\n            nom = 'diminué'\n          }\n          texte = `La population d'une ville a ${nom1} de $${t1}~\\\\%$ en $2020$ puis a ${nom2} de $${t2}~\\\\%$ en $2021$.<br>Quel est le taux d'évolution global ?`\n          texteCorr = 'Pour déterminer le taux d\\'évolution global, on commence par calculer le coefficient multiplicateur global.'\n          texteCorr += '<br>Si une grandeur subit des évolutions successives, le coefficient multiplicateur global est le produit des coefficients multiplicateurs de chaque évolution :'\n          texteCorr += `<br><br>Première évolution : ${verbe1} de $${t1}~\\\\%$ revient à multiplier par `\n          if (taux1 > 0) {\n            texteCorr += `$CM_1 = 1 + \\\\dfrac{${texNombrec(t1)}}{100} = ${texNombrec(CM1)}$.`\n          }\n          if (taux1 < 0) {\n            texteCorr += `$CM_1 = 1 - \\\\dfrac{${texNombrec(t1)}}{100} = ${texNombre(CM1)}$.`\n          }\n          texteCorr += `<br><br>Deuxième évolution : ${verbe2} de $${t2}~\\\\%$ revient à multiplier par `\n          if (taux2 > 0) {\n            texteCorr += `$CM_2 = 1 + \\\\dfrac{${texNombrec(t2)}}{100} = ${texNombre(CM2)}$.`\n          }\n          if (taux2 < 0) {\n            texteCorr += `$CM_2 = 1 - \\\\dfrac{${texNombrec(t2)}}{100} = ${texNombre(CM2)}$.`\n          }\n          texteCorr += `<br><br>Le coefficient multiplicateur global est égal à $CM = CM_1 \\\\times CM_2 = ${texNombre(CM1)} \\\\times ${texNombre(CM2)} =${texNombre(CM)}$.`\n          if (CM > 1) {\n            texteCorr += `<br><br>Or $CM =${texNombre(CM)} = 1 + ${texNombre(Math.abs(p))} = 1 + \\\\dfrac{${texNombrec(t)}}{100}$ ce qui correspond à une hausse de $${texNombrec(t)}~\\\\%$.`\n          }\n          if (CM < 1) {\n            texteCorr += `<br><br>Or $CM = ${texNombre(CM)} = 1 - ${texNombre(Math.abs(p))} = 1-\\\\dfrac{${texNombrec(t)}}{100}$ ce qui correspond à une baisse de $${texNombrec(t)}~\\\\%$.`\n          }\n          texteCorr += `<br>Le nombre d'habitants de cette ville a ${nom} de $${texNombre(Math.abs(taux))}~\\\\%$ entre $2020$ et $2022$.`\n          break\n        case 3 :\n          taux1 = randint(-40, 40, 0)\n          taux2 = randint(-40, 40, 0)\n          if (taux1 > 0) {\n            verbe1 = 'Augmenter'\n            nom1 = 'augmenté'\n          }\n          if (taux2 > 0) {\n            verbe2 = 'Augmenter'\n            nom2 = 'augmenté'\n          }\n          if (taux1 < 0) {\n            verbe1 = 'Diminuer'\n            nom1 = 'diminué'\n          }\n          if (taux2 < 0) {\n            verbe2 = 'Diminuer'\n            nom2 = 'diminué'\n          }\n          p1 = calcul(taux1 / 100)\n          p2 = calcul(taux2 / 100)\n          t1 = Math.abs(taux1)\n          t2 = Math.abs(taux2)\n          CM1 = calcul(1 + p1)\n          CM2 = calcul(1 + p2)\n          CM = calcul(CM1 * CM2)\n          p = calcul(CM - 1)\n          taux = calcul(p * 100)\n          t = Math.abs(taux)\n          if (taux > 0) {\n            nom = 'augmenté'\n          }\n          if (taux < 0) {\n            nom = 'diminué'\n          }\n          texte = `Le nombre d'adhérents d'une association a ${nom1} de $${t1}~\\\\%$ entre $2019$ et $2020$ puis a ${nom2} de $${t2}~\\\\%$ entre $2020$ et $2021$.<br>Quel est le taux d'évolution global du nombre d'adhérents ?`\n          texteCorr = 'Pour déterminer le taux d\\'évolution global, on commence par calculer le coefficient multiplicateur global.'\n          texteCorr += '<br>Si une grandeur subit des évolutions successives, le coefficient multiplicateur global est le produit des coefficients multiplicateurs de chaque évolution :'\n          texteCorr += `<br><br>Première évolution : ${verbe1} de $${t1}~\\\\%$ revient à multiplier par `\n          if (taux1 > 0) {\n            texteCorr += `$CM_1 = 1 + \\\\dfrac{${texNombrec(t1)}}{100} = ${texNombrec(CM1)}$.`\n          }\n          if (taux1 < 0) {\n            texteCorr += `$CM_1 = 1 - \\\\dfrac{${texNombrec(t1)}}{100} = ${texNombre(CM1)}$.`\n          }\n          texteCorr += `<br><br>Deuxième évolution : ${verbe2} de $${t2}~\\\\%$ revient à multiplier par `\n          if (taux2 > 0) {\n            texteCorr += `$CM_2 = 1 + \\\\dfrac{${texNombrec(t2)}}{100} = ${texNombre(CM2)}$.`\n          }\n          if (taux2 < 0) {\n            texteCorr += `$CM_2 = 1 - \\\\dfrac{${texNombrec(t2)}}{100} = ${texNombre(CM2)}$.`\n          }\n          texteCorr += `<br><br>Le coefficient multiplicateur global est égal à $CM = CM_1 \\\\times CM_2 = ${texNombre(CM1)} \\\\times ${texNombre(CM2)} =${texNombre(CM)}$.`\n          if (CM > 1) {\n            texteCorr += `<br><br>Or $CM =${texNombre(CM)} = 1 + ${texNombre(Math.abs(p))} = 1 + \\\\dfrac{${texNombrec(t)}}{100}$ ce qui correspond à une hausse de $${texNombrec(t)}~\\\\%$.`\n          }\n          if (CM < 1) {\n            texteCorr += `<br><br>Or $CM = ${texNombre(CM)} = 1 - ${texNombre(Math.abs(p))} = 1-\\\\dfrac{${texNombrec(t)}}{100}$ ce qui correspond à une baisse de $${texNombrec(t)}~\\\\%$.`\n          }\n          texteCorr += `<br>Le nombre d'adhérents de cette association a ${nom} de $${texNombre(Math.abs(taux))}~\\\\%$ entre $2019$ et $2021$.`\n          break\n      }\n      if (this.questionJamaisPosee(i, taux1, taux2)) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","dateDePublication","EvolutionsSuccesives","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","spacing","spacingCorr","nouvelleVersion","parseInt","listeQuestions","listeCorrections","autoCorrection","listeTypeDeQuestions","combinaisonListes","typesDeQuestions","CM1","CM2","CM","p1","p2","p","verbe1","nom1","verbe2","nom2","nom","taux","t1","t2","t","texte","texteCorr","taux1","taux2","i","cpt","randint","calcul","Math","abs","texNombrec","texNombre","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}