{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta6test2.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","MaFonctionQuiCreeExercice","listeTypeDeQuestions_disponibles","modalTexteCourt","sup","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","i","cpt","randint","indexOf","push","listeQuestionsToContenu"],"mappings":"4GAMe,SAASA,IAEtBC,KAAKC,MAAQ,GACbD,KAAKE,SAAW,GAChBF,KAAKG,mBAAqB,GAC1BH,KAAKI,eAAiB,GACtBJ,KAAKK,iBAAmB,GACxBL,KAAKM,aAAe,GACpBN,KAAKO,QAAU,GACfP,KAAKQ,kBAAoB,GACzBR,KAAKS,YAAc,GACnBT,KAAKU,OAAS,EACdV,KAAKW,WAAa,EAClBX,KAAKY,QAAU,EACfZ,KAAKa,YAAc,EACnBb,KAAKc,QAAS,EAEdd,KAAKe,2BAA4B,EACjCf,KAAKgB,uBAAwB,EAC7BhB,KAAKiB,6BAA8B,EACnCjB,KAAKkB,4BAA6B,EAClClB,KAAKmB,wBAAyB,EAC9BnB,KAAKoB,8BAA+B,EACpCpB,KAAKqB,4BAA6B,EAClCrB,KAAKsB,wBAAyB,EAC9BtB,KAAKuB,8BAA+B,EACpCvB,KAAKwB,oBAAqB,EAC1BxB,KAAKyB,uBAAwB,EAC7BzB,KAAK0B,kBAAmB,EACxB1B,KAAK2B,sBAAuB,EAC5B3B,KAAK4B,mBAAoB,EACzB5B,KAAK6B,uBAAwB,EAC7B7B,KAAK8B,+BAAgC,EACrC9B,KAAK+B,qBAAsB,EAC3B/B,KAAKgC,MAAQ,GACbhC,KAAKiC,YAAa,EAClBjC,KAAKkC,gBAAkB,GAMvBlC,KAAKmC,mBAAoB,EACzBnC,KAAKoC,YAAa,EAClBpC,KAAKqC,uBAAwB,EAC7BrC,KAAKsC,KAAM,EACXtC,KAAKuC,eAAgB,EACrBvC,KAAKwC,SAAU,EACfxC,KAAKyC,eAAiB,GACtBzC,KAAK0C,sBAAwB,GAC7B1C,KAAK2C,cAAe,EACpB3C,KAAK4C,gBAAkB,SAAUC,KACjC7C,KAAK8C,cAAgB,G,2ICnDhB,MAAM7C,EAAQ,WAON,SAAS8C,IACpBhD,eAAcC,MACdA,KAAKC,MAAQA,EACbD,KAAKE,SAAW,WAChBF,KAAKS,YAAc,GACnBT,KAAKU,OAAS,EACdV,KAAKW,WAAa,EAElBX,KAAK4C,gBAAkB,SAAUC,GAK/B,IAAIG,EAJJhD,KAAKiC,YAAagB,SAAgBJ,EAAe,qDACjD7C,KAAKI,eAAiB,GACtBJ,KAAKK,iBAAmB,GAGR,GAAZL,KAAKkD,MACLF,EAAmC,CAAC,YAExB,GAAZhD,KAAKkD,MACLF,EAAmC,CAAC,UAAU,UAAU,YAE5C,GAAZhD,KAAKkD,MACLF,EAAmC,CAAC,UAAU,UAAU,UAAU,UAAU,YAEhF,IAAIG,GAAuBC,SAAkBJ,EAAkChD,KAAKS,aAEpF,IAAK,IAAW4C,EAAOC,EAAWC,EAAzBC,EAAI,EAA2BC,EAAM,EAAGD,EAAIxD,KAAKS,aAAegD,EAAM,IAC9E,CACC,OAAQN,EAAqBK,IACzB,IAAK,UACDD,EAAoB,IAAhBG,SAAQ,EAAG,IAAUA,SAAQ,EAAG,GACpC,MAEJ,IAAK,UACDH,EAAoB,KAAhBG,SAAQ,EAAG,GAA2B,IAAhBA,SAAQ,EAAG,IAAUA,SAAQ,EAAG,GAC1D,MAEJ,IAAK,UACDH,EAAoB,KAAhBG,SAAQ,EAAG,GAA4B,KAAhBA,SAAQ,EAAG,GAA2B,IAAhBA,SAAQ,EAAG,IAAUA,SAAQ,EAAG,GAKzFL,EAAS,KAAIE,UACbD,EAAa,KAAIC,WAAWA,EAAI,OAEY,IAAxCvD,KAAKI,eAAeuD,QAAQN,KAE9BrD,KAAKI,eAAewD,KAAKP,GACzBrD,KAAKK,iBAAiBuD,KAAKN,GAC3BE,KAEFC,KAEFI,SAAwB7D,OAE1BA,KAAKe,0BAA4B,CAAC,uBAAuB,EAAE","file":"js/85684.716df2cbc7f319de26de.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu, modalTexteCourt} from '../../modules/outils.js'\nimport {randint, choice, combinaisonListes} from '../../modules/outils.js'\n\n\nexport const titre = 'Mon test'\n\n/**\n * Exercice de test\n * @author \n * Référence 6test2\n*/\nexport default function MaFonctionQuiCreeExercice() {\n    Exercice.call(this); // Héritage de la classe Exercice()\n    this.titre = titre;\n    this.consigne = \"Calculer\";\n    this.nbQuestions = 10;\n    this.nbCols = 2; // Nombre de colonnes pour la sortie LaTeX\n    this.nbColsCorr = 2; // Nombre de colonnes dans la correction pour la sortie LaTeX\n  \n    this.nouvelleVersion = function (numeroExercice) {\n      this.boutonAide = modalTexteCourt(numeroExercice,\"Ajouter 9 revient à ajouter 10 et à soustraire 1.\");\n      this.listeQuestions = []; // Liste de questions\n      this.listeCorrections = []; // Liste de questions corrigées\n\n      let listeTypeDeQuestions_disponibles\n      if (this.sup == 1) {\n          listeTypeDeQuestions_disponibles = ['niveau1'];\n      }\n      if (this.sup == 2) {\n          listeTypeDeQuestions_disponibles = ['niveau1','niveau2','niveau2'];\n      }\n      if (this.sup == 3) {\n          listeTypeDeQuestions_disponibles = ['niveau1','niveau2','niveau3','niveau3','niveau3',];\n      }\n      let listeTypeDeQuestions = combinaisonListes(listeTypeDeQuestions_disponibles, this.nbQuestions)\n\n      for (let i = 0, texte, texteCorr, a, b, cpt = 0; i < this.nbQuestions && cpt < 50;)\n       {\n        switch (listeTypeDeQuestions[i]) {\n            case 'niveau1':\n                a = randint(1, 9) * 10 + randint(1, 9);\n                break;\n        \n            case 'niveau2':\n                a = randint(1, 9) * 100 + randint(0, 9) * 10 + randint(1, 9);\n                break;\n            \n            case 'niveau3':\n                a = randint(1, 9) * 1000 + randint(0, 9) * 100 + randint(0, 9) * 10 + randint(1, 9);\n                break;\n        }\n        \n\n        texte = `$ ${a} + 9 $`\n        texteCorr = `$ ${a} + 9 = ${a + 9} $`;\n  \n        if (this.listeQuestions.indexOf(texte) === -1) {\n          // Si la question n'a jamais été posée, on en crée une autre\n          this.listeQuestions.push(texte);\n          this.listeCorrections.push(texteCorr);\n          i++;\n        }\n        cpt++;\n      }\n      listeQuestionsToContenu(this);\n    };\n    this.besoinFormulaireNumerique = ['Niveau de difficulté',3,'1 : Nombre inférieur à 100 n2 : Nombre inférieur à 1 000\\n3 : Nombre inférieur à 10 000'];\n  }\n"],"sourceRoot":""}